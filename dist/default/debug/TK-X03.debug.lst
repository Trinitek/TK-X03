

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Fri Mar 14 13:43:19 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    29                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    30  0000                     
    31                           	psect	idataBIGRAM
    32  001006                     __pidataBIGRAM:
    33                           	opt stack 0
    34                           
    35                           ;initializer for _virtualMemory
    36  001006  07                 	db	7
    37  001007  03                 	db	3
    38  001008  0F                 	db	15
    39  001009  08                 	db	8
    40  00100A  00                 	db	0
    41  00100B  00                 	db	0
    42  00100C  00                 	db	0
    43  00100D  00                 	db	0
    44  00100E  00                 	db	0
    45  00100F  00                 	db	0
    46  001010  00                 	db	0
    47  001011  00                 	db	0
    48  001012  00                 	db	0
    49  001013  00                 	db	0
    50  001014  00                 	db	0
    51  001015  00                 	db	0
    52  001016  00                 	db	0
    53  001017  00                 	db	0
    54  001018  00                 	db	0
    55  001019  00                 	db	0
    56  00101A  00                 	db	0
    57  00101B  00                 	db	0
    58  00101C  00                 	db	0
    59  00101D  00                 	db	0
    60  00101E  00                 	db	0
    61  00101F  00                 	db	0
    62  001020  00                 	db	0
    63  001021  00                 	db	0
    64  001022  00                 	db	0
    65  001023  00                 	db	0
    66  001024  00                 	db	0
    67  001025  00                 	db	0
    68  001026  00                 	db	0
    69  001027  00                 	db	0
    70  001028  00                 	db	0
    71  001029  00                 	db	0
    72  00102A  00                 	db	0
    73  00102B  00                 	db	0
    74  00102C  00                 	db	0
    75  00102D  00                 	db	0
    76  00102E  00                 	db	0
    77  00102F  00                 	db	0
    78  001030  00                 	db	0
    79  001031  00                 	db	0
    80  001032  00                 	db	0
    81  001033  00                 	db	0
    82  001034  00                 	db	0
    83  001035  00                 	db	0
    84  001036  00                 	db	0
    85  001037  00                 	db	0
    86  001038  00                 	db	0
    87  001039  00                 	db	0
    88  00103A  00                 	db	0
    89  00103B  00                 	db	0
    90  00103C  00                 	db	0
    91  00103D  00                 	db	0
    92  00103E  00                 	db	0
    93  00103F  00                 	db	0
    94  001040  00                 	db	0
    95  001041  00                 	db	0
    96  001042  00                 	db	0
    97  001043  00                 	db	0
    98  001044  00                 	db	0
    99  001045  00                 	db	0
   100  001046  00                 	db	0
   101  001047  00                 	db	0
   102  001048  00                 	db	0
   103  001049  00                 	db	0
   104  00104A  00                 	db	0
   105  00104B  00                 	db	0
   106  00104C  00                 	db	0
   107  00104D  00                 	db	0
   108  00104E  00                 	db	0
   109  00104F  00                 	db	0
   110  001050  00                 	db	0
   111  001051  00                 	db	0
   112  001052  00                 	db	0
   113  001053  00                 	db	0
   114  001054  00                 	db	0
   115  001055  00                 	db	0
   116  001056  00                 	db	0
   117  001057  00                 	db	0
   118  001058  00                 	db	0
   119  001059  00                 	db	0
   120  00105A  00                 	db	0
   121  00105B  00                 	db	0
   122  00105C  00                 	db	0
   123  00105D  00                 	db	0
   124  00105E  00                 	db	0
   125  00105F  00                 	db	0
   126  001060  00                 	db	0
   127  001061  00                 	db	0
   128  001062  00                 	db	0
   129  001063  00                 	db	0
   130  001064  00                 	db	0
   131  001065  00                 	db	0
   132  001066  00                 	db	0
   133  001067  00                 	db	0
   134  001068  00                 	db	0
   135  001069  00                 	db	0
   136  00106A  00                 	db	0
   137  00106B  00                 	db	0
   138  00106C  00                 	db	0
   139  00106D  00                 	db	0
   140  00106E  00                 	db	0
   141  00106F  00                 	db	0
   142  001070  00                 	db	0
   143  001071  00                 	db	0
   144  001072  00                 	db	0
   145  001073  00                 	db	0
   146  001074  00                 	db	0
   147  001075  00                 	db	0
   148  001076  00                 	db	0
   149  001077  00                 	db	0
   150  001078  00                 	db	0
   151  001079  00                 	db	0
   152  00107A  00                 	db	0
   153  00107B  00                 	db	0
   154  00107C  00                 	db	0
   155  00107D  00                 	db	0
   156  00107E  00                 	db	0
   157  00107F  00                 	db	0
   158  001080  00                 	db	0
   159  001081  00                 	db	0
   160  001082  00                 	db	0
   161  001083  00                 	db	0
   162  001084  00                 	db	0
   163  001085  00                 	db	0
   164  001086  00                 	db	0
   165  001087  00                 	db	0
   166  001088  00                 	db	0
   167  001089  00                 	db	0
   168  00108A  00                 	db	0
   169  00108B  00                 	db	0
   170  00108C  00                 	db	0
   171  00108D  00                 	db	0
   172  00108E  00                 	db	0
   173  00108F  00                 	db	0
   174  001090  00                 	db	0
   175  001091  00                 	db	0
   176  001092  00                 	db	0
   177  001093  00                 	db	0
   178  001094  00                 	db	0
   179  001095  00                 	db	0
   180  001096  00                 	db	0
   181  001097  00                 	db	0
   182  001098  00                 	db	0
   183  001099  00                 	db	0
   184  00109A  00                 	db	0
   185  00109B  00                 	db	0
   186  00109C  00                 	db	0
   187  00109D  00                 	db	0
   188  00109E  00                 	db	0
   189  00109F  00                 	db	0
   190  0010A0  00                 	db	0
   191  0010A1  00                 	db	0
   192  0010A2  00                 	db	0
   193  0010A3  00                 	db	0
   194  0010A4  00                 	db	0
   195  0010A5  00                 	db	0
   196  0010A6  00                 	db	0
   197  0010A7  00                 	db	0
   198  0010A8  00                 	db	0
   199  0010A9  00                 	db	0
   200  0010AA  00                 	db	0
   201  0010AB  00                 	db	0
   202  0010AC  00                 	db	0
   203  0010AD  00                 	db	0
   204  0010AE  00                 	db	0
   205  0010AF  00                 	db	0
   206  0010B0  00                 	db	0
   207  0010B1  00                 	db	0
   208  0010B2  00                 	db	0
   209  0010B3  00                 	db	0
   210  0010B4  00                 	db	0
   211  0010B5  00                 	db	0
   212  0010B6  00                 	db	0
   213  0010B7  00                 	db	0
   214  0010B8  00                 	db	0
   215  0010B9  00                 	db	0
   216  0010BA  00                 	db	0
   217  0010BB  00                 	db	0
   218  0010BC  00                 	db	0
   219  0010BD  00                 	db	0
   220  0010BE  00                 	db	0
   221  0010BF  00                 	db	0
   222  0010C0  00                 	db	0
   223  0010C1  00                 	db	0
   224  0010C2  00                 	db	0
   225  0010C3  00                 	db	0
   226  0010C4  00                 	db	0
   227  0010C5  00                 	db	0
   228  0010C6  00                 	db	0
   229  0010C7  00                 	db	0
   230  0010C8  00                 	db	0
   231  0010C9  00                 	db	0
   232  0010CA  00                 	db	0
   233  0010CB  00                 	db	0
   234  0010CC  00                 	db	0
   235  0010CD  00                 	db	0
   236  0010CE  00                 	db	0
   237  0010CF  00                 	db	0
   238  0010D0  00                 	db	0
   239  0010D1  00                 	db	0
   240  0010D2  00                 	db	0
   241  0010D3  00                 	db	0
   242  0010D4  00                 	db	0
   243  0010D5  00                 	db	0
   244  0010D6  00                 	db	0
   245  0010D7  00                 	db	0
   246  0010D8  00                 	db	0
   247  0010D9  00                 	db	0
   248  0010DA  00                 	db	0
   249  0010DB  00                 	db	0
   250  0010DC  00                 	db	0
   251  0010DD  00                 	db	0
   252  0010DE  00                 	db	0
   253  0010DF  00                 	db	0
   254  0010E0  00                 	db	0
   255  0010E1  00                 	db	0
   256  0010E2  00                 	db	0
   257  0010E3  00                 	db	0
   258  0010E4  00                 	db	0
   259  0010E5  00                 	db	0
   260  0010E6  00                 	db	0
   261  0010E7  00                 	db	0
   262  0010E8  00                 	db	0
   263  0010E9  00                 	db	0
   264  0010EA  00                 	db	0
   265  0010EB  00                 	db	0
   266  0010EC  00                 	db	0
   267  0010ED  00                 	db	0
   268  0010EE  00                 	db	0
   269  0010EF  00                 	db	0
   270  0010F0  00                 	db	0
   271  0010F1  00                 	db	0
   272  0010F2  00                 	db	0
   273  0010F3  00                 	db	0
   274  0010F4  00                 	db	0
   275  0010F5  00                 	db	0
   276  0010F6  00                 	db	0
   277  0010F7  00                 	db	0
   278  0010F8  00                 	db	0
   279  0010F9  00                 	db	0
   280  0010FA  00                 	db	0
   281  0010FB  00                 	db	0
   282  0010FC  00                 	db	0
   283  0010FD  00                 	db	0
   284  0010FE  00                 	db	0
   285  0010FF  00                 	db	0
   286  001100  00                 	db	0
   287  001101  00                 	db	0
   288  001102  00                 	db	0
   289  001103  00                 	db	0
   290  001104  00                 	db	0
   291  001105  00                 	db	0
   292  001106  00                 	db	0
   293  001107  00                 	db	0
   294  001108  00                 	db	0
   295  001109  00                 	db	0
   296  00110A  00                 	db	0
   297  00110B  00                 	db	0
   298  00110C  00                 	db	0
   299  00110D  00                 	db	0
   300  00110E  00                 	db	0
   301  00110F  00                 	db	0
   302  001110  00                 	db	0
   303  001111  00                 	db	0
   304  001112  00                 	db	0
   305  001113  00                 	db	0
   306  001114  00                 	db	0
   307  001115  00                 	db	0
   308  001116  00                 	db	0
   309  001117  00                 	db	0
   310  001118  00                 	db	0
   311  001119  00                 	db	0
   312  00111A  00                 	db	0
   313  00111B  00                 	db	0
   314  00111C  00                 	db	0
   315  00111D  00                 	db	0
   316  00111E  00                 	db	0
   317  00111F  00                 	db	0
   318  001120  00                 	db	0
   319  001121  00                 	db	0
   320  001122  00                 	db	0
   321  001123  00                 	db	0
   322  001124  00                 	db	0
   323  001125  00                 	db	0
   324  001126  00                 	db	0
   325  001127  00                 	db	0
   326  001128  00                 	db	0
   327  001129  00                 	db	0
   328  00112A  00                 	db	0
   329  00112B  00                 	db	0
   330  00112C  00                 	db	0
   331  00112D  00                 	db	0
   332  00112E  00                 	db	0
   333  00112F  00                 	db	0
   334  001130  00                 	db	0
   335  001131  00                 	db	0
   336  001132  00                 	db	0
   337  001133  00                 	db	0
   338  001134  00                 	db	0
   339  001135  00                 	db	0
   340  001136  00                 	db	0
   341  001137  00                 	db	0
   342  001138  00                 	db	0
   343  001139  00                 	db	0
   344  00113A  00                 	db	0
   345  00113B  00                 	db	0
   346  00113C  00                 	db	0
   347  00113D  00                 	db	0
   348  00113E  00                 	db	0
   349  00113F  00                 	db	0
   350  001140  00                 	db	0
   351  001141  00                 	db	0
   352  001142  00                 	db	0
   353  001143  00                 	db	0
   354  001144  00                 	db	0
   355  001145  00                 	db	0
   356  001146  00                 	db	0
   357  001147  00                 	db	0
   358  001148  00                 	db	0
   359  001149  00                 	db	0
   360  00114A  00                 	db	0
   361  00114B  00                 	db	0
   362  00114C  00                 	db	0
   363  00114D  00                 	db	0
   364  00114E  00                 	db	0
   365  00114F  00                 	db	0
   366  001150  00                 	db	0
   367  001151  00                 	db	0
   368  001152  00                 	db	0
   369  001153  00                 	db	0
   370  001154  00                 	db	0
   371  001155  00                 	db	0
   372  001156  00                 	db	0
   373  001157  00                 	db	0
   374  001158  00                 	db	0
   375  001159  00                 	db	0
   376  00115A  00                 	db	0
   377  00115B  00                 	db	0
   378  00115C  00                 	db	0
   379  00115D  00                 	db	0
   380  00115E  00                 	db	0
   381  00115F  00                 	db	0
   382  001160  00                 	db	0
   383  001161  00                 	db	0
   384  001162  00                 	db	0
   385  001163  00                 	db	0
   386  001164  00                 	db	0
   387  001165  00                 	db	0
   388  001166  00                 	db	0
   389  001167  00                 	db	0
   390  001168  00                 	db	0
   391  001169  00                 	db	0
   392  00116A  00                 	db	0
   393  00116B  00                 	db	0
   394  00116C  00                 	db	0
   395  00116D  00                 	db	0
   396  00116E  00                 	db	0
   397  00116F  00                 	db	0
   398  001170  00                 	db	0
   399  001171  00                 	db	0
   400  001172  00                 	db	0
   401  001173  00                 	db	0
   402  001174  00                 	db	0
   403  001175  00                 	db	0
   404  001176  00                 	db	0
   405  001177  00                 	db	0
   406  001178  00                 	db	0
   407  001179  00                 	db	0
   408  00117A  00                 	db	0
   409  00117B  00                 	db	0
   410  00117C  00                 	db	0
   411  00117D  00                 	db	0
   412  00117E  00                 	db	0
   413  00117F  00                 	db	0
   414  001180  00                 	db	0
   415  001181  00                 	db	0
   416  001182  00                 	db	0
   417  001183  00                 	db	0
   418  001184  00                 	db	0
   419  001185  00                 	db	0
   420  001186  00                 	db	0
   421  001187  00                 	db	0
   422  001188  00                 	db	0
   423  001189  00                 	db	0
   424  00118A  00                 	db	0
   425  00118B  00                 	db	0
   426  00118C  00                 	db	0
   427  00118D  00                 	db	0
   428  00118E  00                 	db	0
   429  00118F  00                 	db	0
   430  001190  00                 	db	0
   431  001191  00                 	db	0
   432  001192  00                 	db	0
   433  001193  00                 	db	0
   434  001194  00                 	db	0
   435  001195  00                 	db	0
   436  001196  00                 	db	0
   437  001197  00                 	db	0
   438  001198  00                 	db	0
   439  001199  00                 	db	0
   440  00119A  00                 	db	0
   441  00119B  00                 	db	0
   442  00119C  00                 	db	0
   443  00119D  00                 	db	0
   444  00119E  00                 	db	0
   445  00119F  00                 	db	0
   446  0011A0  00                 	db	0
   447  0011A1  00                 	db	0
   448  0011A2  00                 	db	0
   449  0011A3  00                 	db	0
   450  0011A4  00                 	db	0
   451  0011A5  00                 	db	0
   452  0011A6  00                 	db	0
   453  0011A7  00                 	db	0
   454  0011A8  00                 	db	0
   455  0011A9  00                 	db	0
   456  0011AA  00                 	db	0
   457  0011AB  00                 	db	0
   458  0011AC  00                 	db	0
   459  0011AD  00                 	db	0
   460  0011AE  00                 	db	0
   461  0011AF  00                 	db	0
   462  0011B0  00                 	db	0
   463  0011B1  00                 	db	0
   464  0011B2  00                 	db	0
   465  0011B3  00                 	db	0
   466  0011B4  00                 	db	0
   467  0011B5  00                 	db	0
   468  0011B6  00                 	db	0
   469  0011B7  00                 	db	0
   470  0011B8  00                 	db	0
   471  0011B9  00                 	db	0
   472  0011BA  00                 	db	0
   473  0011BB  00                 	db	0
   474  0011BC  00                 	db	0
   475  0011BD  00                 	db	0
   476  0011BE  00                 	db	0
   477  0011BF  00                 	db	0
   478  0011C0  00                 	db	0
   479  0011C1  00                 	db	0
   480  0011C2  00                 	db	0
   481  0011C3  00                 	db	0
   482  0011C4  00                 	db	0
   483  0011C5  00                 	db	0
   484  0011C6  00                 	db	0
   485  0011C7  00                 	db	0
   486  0011C8  00                 	db	0
   487  0011C9  00                 	db	0
   488  0011CA  00                 	db	0
   489  0011CB  00                 	db	0
   490  0011CC  00                 	db	0
   491  0011CD  00                 	db	0
   492  0011CE  00                 	db	0
   493  0011CF  00                 	db	0
   494  0011D0  00                 	db	0
   495  0011D1  00                 	db	0
   496  0011D2  00                 	db	0
   497  0011D3  00                 	db	0
   498  0011D4  00                 	db	0
   499  0011D5  00                 	db	0
   500  0011D6  00                 	db	0
   501  0011D7  00                 	db	0
   502  0011D8  00                 	db	0
   503  0011D9  00                 	db	0
   504  0011DA  00                 	db	0
   505  0011DB  00                 	db	0
   506  0011DC  00                 	db	0
   507  0011DD  00                 	db	0
   508  0011DE  00                 	db	0
   509  0011DF  00                 	db	0
   510  0011E0  00                 	db	0
   511  0011E1  00                 	db	0
   512  0011E2  00                 	db	0
   513  0011E3  00                 	db	0
   514  0011E4  00                 	db	0
   515  0011E5  00                 	db	0
   516  0011E6  00                 	db	0
   517  0011E7  00                 	db	0
   518  0011E8  00                 	db	0
   519  0011E9  00                 	db	0
   520  0011EA  00                 	db	0
   521  0011EB  00                 	db	0
   522  0011EC  00                 	db	0
   523  0011ED  00                 	db	0
   524  0011EE  00                 	db	0
   525  0011EF  00                 	db	0
   526  0011F0  00                 	db	0
   527  0011F1  00                 	db	0
   528  0011F2  00                 	db	0
   529  0011F3  00                 	db	0
   530  0011F4  00                 	db	0
   531  0011F5  00                 	db	0
   532  0011F6  00                 	db	0
   533  0011F7  00                 	db	0
   534  0011F8  00                 	db	0
   535  0011F9  00                 	db	0
   536  0011FA  00                 	db	0
   537  0011FB  00                 	db	0
   538  0011FC  00                 	db	0
   539  0011FD  00                 	db	0
   540  0011FE  00                 	db	0
   541  0011FF  00                 	db	0
   542  001200  00                 	db	0
   543  001201  00                 	db	0
   544  001202  00                 	db	0
   545  001203  00                 	db	0
   546  001204  00                 	db	0
   547  001205  00                 	db	0
   548  001206  00                 	db	0
   549  001207  00                 	db	0
   550  001208  00                 	db	0
   551  001209  00                 	db	0
   552  00120A  00                 	db	0
   553  00120B  00                 	db	0
   554  00120C  00                 	db	0
   555  00120D  00                 	db	0
   556  00120E  00                 	db	0
   557  00120F  00                 	db	0
   558  001210  00                 	db	0
   559  001211  00                 	db	0
   560  001212  00                 	db	0
   561  001213  00                 	db	0
   562  001214  00                 	db	0
   563  001215  00                 	db	0
   564  001216  00                 	db	0
   565  001217  00                 	db	0
   566  001218  00                 	db	0
   567  001219  00                 	db	0
   568  00121A  00                 	db	0
   569  00121B  00                 	db	0
   570  00121C  00                 	db	0
   571  00121D  00                 	db	0
   572  00121E  00                 	db	0
   573  00121F  00                 	db	0
   574  001220  00                 	db	0
   575  001221  00                 	db	0
   576  001222  00                 	db	0
   577  001223  00                 	db	0
   578  001224  00                 	db	0
   579  001225  00                 	db	0
   580  001226  00                 	db	0
   581  001227  00                 	db	0
   582  001228  00                 	db	0
   583  001229  00                 	db	0
   584  00122A  00                 	db	0
   585  00122B  00                 	db	0
   586  00122C  00                 	db	0
   587  00122D  00                 	db	0
   588  00122E  00                 	db	0
   589  00122F  00                 	db	0
   590  001230  00                 	db	0
   591  001231  00                 	db	0
   592  001232  00                 	db	0
   593  001233  00                 	db	0
   594  001234  00                 	db	0
   595  001235  00                 	db	0
   596  001236  00                 	db	0
   597  001237  00                 	db	0
   598  001238  00                 	db	0
   599  001239  00                 	db	0
   600  00123A  00                 	db	0
   601  00123B  00                 	db	0
   602  00123C  00                 	db	0
   603  00123D  00                 	db	0
   604  00123E  00                 	db	0
   605  00123F  00                 	db	0
   606  001240  00                 	db	0
   607  001241  00                 	db	0
   608  001242  00                 	db	0
   609  001243  00                 	db	0
   610  001244  00                 	db	0
   611  001245  00                 	db	0
   612  001246  00                 	db	0
   613  001247  00                 	db	0
   614  001248  00                 	db	0
   615  001249  00                 	db	0
   616  00124A  00                 	db	0
   617  00124B  00                 	db	0
   618  00124C  00                 	db	0
   619  00124D  00                 	db	0
   620  00124E  00                 	db	0
   621  00124F  00                 	db	0
   622  001250  00                 	db	0
   623  001251  00                 	db	0
   624  001252  00                 	db	0
   625  001253  00                 	db	0
   626  001254  00                 	db	0
   627  001255  00                 	db	0
   628  001256  00                 	db	0
   629  001257  00                 	db	0
   630  001258  00                 	db	0
   631  001259  00                 	db	0
   632  00125A  00                 	db	0
   633  00125B  00                 	db	0
   634  00125C  00                 	db	0
   635  00125D  00                 	db	0
   636  00125E  00                 	db	0
   637  00125F  00                 	db	0
   638  001260  00                 	db	0
   639  001261  00                 	db	0
   640  001262  00                 	db	0
   641  001263  00                 	db	0
   642  001264  00                 	db	0
   643  001265  00                 	db	0
   644  001266  00                 	db	0
   645  001267  00                 	db	0
   646  001268  00                 	db	0
   647  001269  00                 	db	0
   648  00126A  00                 	db	0
   649  00126B  00                 	db	0
   650  00126C  00                 	db	0
   651  00126D  00                 	db	0
   652  00126E  00                 	db	0
   653  00126F  00                 	db	0
   654  001270  00                 	db	0
   655  001271  00                 	db	0
   656  001272  00                 	db	0
   657  001273  00                 	db	0
   658  001274  00                 	db	0
   659  001275  00                 	db	0
   660  001276  00                 	db	0
   661  001277  00                 	db	0
   662  001278  00                 	db	0
   663  001279  00                 	db	0
   664  00127A  00                 	db	0
   665  00127B  00                 	db	0
   666  00127C  00                 	db	0
   667  00127D  00                 	db	0
   668  00127E  00                 	db	0
   669  00127F  00                 	db	0
   670  001280  00                 	db	0
   671  001281  00                 	db	0
   672  001282  00                 	db	0
   673  001283  00                 	db	0
   674  001284  00                 	db	0
   675  001285  00                 	db	0
   676  001286  00                 	db	0
   677  001287  00                 	db	0
   678  001288  00                 	db	0
   679  001289  00                 	db	0
   680  00128A  00                 	db	0
   681  00128B  00                 	db	0
   682  00128C  00                 	db	0
   683  00128D  00                 	db	0
   684  00128E  00                 	db	0
   685  00128F  00                 	db	0
   686  001290  00                 	db	0
   687  001291  00                 	db	0
   688  001292  00                 	db	0
   689  001293  00                 	db	0
   690  001294  00                 	db	0
   691  001295  00                 	db	0
   692  001296  00                 	db	0
   693  001297  00                 	db	0
   694  001298  00                 	db	0
   695  001299  00                 	db	0
   696  00129A  00                 	db	0
   697  00129B  00                 	db	0
   698  00129C  00                 	db	0
   699  00129D  00                 	db	0
   700  00129E  00                 	db	0
   701  00129F  00                 	db	0
   702  0012A0  00                 	db	0
   703  0012A1  00                 	db	0
   704  0012A2  00                 	db	0
   705  0012A3  00                 	db	0
   706  0012A4  00                 	db	0
   707  0012A5  00                 	db	0
   708  0012A6  00                 	db	0
   709  0012A7  00                 	db	0
   710  0012A8  00                 	db	0
   711  0012A9  00                 	db	0
   712  0012AA  00                 	db	0
   713  0012AB  00                 	db	0
   714  0012AC  00                 	db	0
   715  0012AD  00                 	db	0
   716  0012AE  00                 	db	0
   717  0012AF  00                 	db	0
   718  0012B0  00                 	db	0
   719  0012B1  00                 	db	0
   720  0012B2  00                 	db	0
   721  0012B3  00                 	db	0
   722  0012B4  00                 	db	0
   723  0012B5  00                 	db	0
   724  0012B6  00                 	db	0
   725  0012B7  00                 	db	0
   726  0012B8  00                 	db	0
   727  0012B9  00                 	db	0
   728  0012BA  00                 	db	0
   729  0012BB  00                 	db	0
   730  0012BC  00                 	db	0
   731  0012BD  00                 	db	0
   732  0012BE  00                 	db	0
   733  0012BF  00                 	db	0
   734  0012C0  00                 	db	0
   735  0012C1  00                 	db	0
   736  0012C2  00                 	db	0
   737  0012C3  00                 	db	0
   738  0012C4  00                 	db	0
   739  0012C5  00                 	db	0
   740  0012C6  00                 	db	0
   741  0012C7  00                 	db	0
   742  0012C8  00                 	db	0
   743  0012C9  00                 	db	0
   744  0012CA  00                 	db	0
   745  0012CB  00                 	db	0
   746  0012CC  00                 	db	0
   747  0012CD  00                 	db	0
   748  0012CE  00                 	db	0
   749  0012CF  00                 	db	0
   750  0012D0  00                 	db	0
   751  0012D1  00                 	db	0
   752  0012D2  00                 	db	0
   753  0012D3  00                 	db	0
   754  0012D4  00                 	db	0
   755  0012D5  00                 	db	0
   756  0012D6  00                 	db	0
   757  0012D7  00                 	db	0
   758  0012D8  00                 	db	0
   759  0012D9  00                 	db	0
   760  0012DA  00                 	db	0
   761  0012DB  00                 	db	0
   762  0012DC  00                 	db	0
   763  0012DD  00                 	db	0
   764  0012DE  00                 	db	0
   765  0012DF  00                 	db	0
   766  0012E0  00                 	db	0
   767  0012E1  00                 	db	0
   768  0012E2  00                 	db	0
   769  0012E3  00                 	db	0
   770  0012E4  00                 	db	0
   771  0012E5  00                 	db	0
   772  0012E6  00                 	db	0
   773  0012E7  00                 	db	0
   774  0012E8  00                 	db	0
   775  0012E9  00                 	db	0
   776  0012EA  00                 	db	0
   777  0012EB  00                 	db	0
   778  0012EC  00                 	db	0
   779  0012ED  00                 	db	0
   780  0012EE  00                 	db	0
   781  0012EF  00                 	db	0
   782  0012F0  00                 	db	0
   783  0012F1  00                 	db	0
   784  0012F2  00                 	db	0
   785  0012F3  00                 	db	0
   786  0012F4  00                 	db	0
   787  0012F5  00                 	db	0
   788  0012F6  00                 	db	0
   789  0012F7  00                 	db	0
   790  0012F8  00                 	db	0
   791  0012F9  00                 	db	0
   792  0012FA  00                 	db	0
   793  0012FB  00                 	db	0
   794  0012FC  00                 	db	0
   795  0012FD  00                 	db	0
   796  0012FE  00                 	db	0
   797  0012FF  00                 	db	0
   798  001300  00                 	db	0
   799  001301  00                 	db	0
   800  001302  00                 	db	0
   801  001303  00                 	db	0
   802  001304  00                 	db	0
   803  001305  00                 	db	0
   804  001306  00                 	db	0
   805  001307  00                 	db	0
   806  001308  00                 	db	0
   807  001309  00                 	db	0
   808  00130A  00                 	db	0
   809  00130B  00                 	db	0
   810  00130C  00                 	db	0
   811  00130D  00                 	db	0
   812  00130E  00                 	db	0
   813  00130F  00                 	db	0
   814  001310  00                 	db	0
   815  001311  00                 	db	0
   816  001312  00                 	db	0
   817  001313  00                 	db	0
   818  001314  00                 	db	0
   819  001315  00                 	db	0
   820  001316  00                 	db	0
   821  001317  00                 	db	0
   822  001318  00                 	db	0
   823  001319  00                 	db	0
   824  00131A  00                 	db	0
   825  00131B  00                 	db	0
   826  00131C  00                 	db	0
   827  00131D  00                 	db	0
   828  00131E  00                 	db	0
   829  00131F  00                 	db	0
   830  001320  00                 	db	0
   831  001321  00                 	db	0
   832  001322  00                 	db	0
   833  001323  00                 	db	0
   834  001324  00                 	db	0
   835  001325  00                 	db	0
   836  001326  00                 	db	0
   837  001327  00                 	db	0
   838  001328  00                 	db	0
   839  001329  00                 	db	0
   840  00132A  00                 	db	0
   841  00132B  00                 	db	0
   842  00132C  00                 	db	0
   843  00132D  00                 	db	0
   844  00132E  00                 	db	0
   845  00132F  00                 	db	0
   846  001330  00                 	db	0
   847  001331  00                 	db	0
   848  001332  00                 	db	0
   849  001333  00                 	db	0
   850  001334  00                 	db	0
   851  001335  00                 	db	0
   852  001336  00                 	db	0
   853  001337  00                 	db	0
   854  001338  00                 	db	0
   855  001339  00                 	db	0
   856  00133A  00                 	db	0
   857  00133B  00                 	db	0
   858  00133C  00                 	db	0
   859  00133D  00                 	db	0
   860  00133E  00                 	db	0
   861  00133F  00                 	db	0
   862  001340  00                 	db	0
   863  001341  00                 	db	0
   864  001342  00                 	db	0
   865  001343  00                 	db	0
   866  001344  00                 	db	0
   867  001345  00                 	db	0
   868  001346  00                 	db	0
   869  001347  00                 	db	0
   870  001348  00                 	db	0
   871  001349  00                 	db	0
   872  00134A  00                 	db	0
   873  00134B  00                 	db	0
   874  00134C  00                 	db	0
   875  00134D  00                 	db	0
   876  00134E  00                 	db	0
   877  00134F  00                 	db	0
   878  001350  00                 	db	0
   879  001351  00                 	db	0
   880  001352  00                 	db	0
   881  001353  00                 	db	0
   882  001354  00                 	db	0
   883  001355  00                 	db	0
   884  001356  00                 	db	0
   885  001357  00                 	db	0
   886  001358  00                 	db	0
   887  001359  00                 	db	0
   888  00135A  00                 	db	0
   889  00135B  00                 	db	0
   890  00135C  00                 	db	0
   891  00135D  00                 	db	0
   892  00135E  00                 	db	0
   893  00135F  00                 	db	0
   894  001360  00                 	db	0
   895  001361  00                 	db	0
   896  001362  00                 	db	0
   897  001363  00                 	db	0
   898  001364  00                 	db	0
   899  001365  00                 	db	0
   900  001366  00                 	db	0
   901  001367  00                 	db	0
   902  001368  00                 	db	0
   903  001369  00                 	db	0
   904  00136A  00                 	db	0
   905  00136B  00                 	db	0
   906  00136C  00                 	db	0
   907  00136D  00                 	db	0
   908  00136E  00                 	db	0
   909  00136F  00                 	db	0
   910  001370  00                 	db	0
   911  001371  00                 	db	0
   912  001372  00                 	db	0
   913  001373  00                 	db	0
   914  001374  00                 	db	0
   915  001375  00                 	db	0
   916  001376  00                 	db	0
   917  001377  00                 	db	0
   918  001378  00                 	db	0
   919  001379  00                 	db	0
   920  00137A  00                 	db	0
   921  00137B  00                 	db	0
   922  00137C  00                 	db	0
   923  00137D  00                 	db	0
   924  00137E  00                 	db	0
   925  00137F  00                 	db	0
   926  001380  00                 	db	0
   927  001381  00                 	db	0
   928  001382  00                 	db	0
   929  001383  00                 	db	0
   930  001384  00                 	db	0
   931  001385  00                 	db	0
   932  001386  00                 	db	0
   933  001387  00                 	db	0
   934  001388  00                 	db	0
   935  001389  00                 	db	0
   936  00138A  00                 	db	0
   937  00138B  00                 	db	0
   938  00138C  00                 	db	0
   939  00138D  00                 	db	0
   940  00138E  00                 	db	0
   941  00138F  00                 	db	0
   942  001390  00                 	db	0
   943  001391  00                 	db	0
   944  001392  00                 	db	0
   945  001393  00                 	db	0
   946  001394  00                 	db	0
   947  001395  00                 	db	0
   948  001396  00                 	db	0
   949  001397  00                 	db	0
   950  001398  00                 	db	0
   951  001399  00                 	db	0
   952  00139A  00                 	db	0
   953  00139B  00                 	db	0
   954  00139C  00                 	db	0
   955  00139D  00                 	db	0
   956  00139E  00                 	db	0
   957  00139F  00                 	db	0
   958  0013A0  00                 	db	0
   959  0013A1  00                 	db	0
   960  0013A2  00                 	db	0
   961  0013A3  00                 	db	0
   962  0013A4  00                 	db	0
   963  0013A5  00                 	db	0
   964  0013A6  00                 	db	0
   965  0013A7  00                 	db	0
   966  0013A8  00                 	db	0
   967  0013A9  00                 	db	0
   968  0013AA  00                 	db	0
   969  0013AB  00                 	db	0
   970  0013AC  00                 	db	0
   971  0013AD  00                 	db	0
   972  0013AE  00                 	db	0
   973  0013AF  00                 	db	0
   974  0013B0  00                 	db	0
   975  0013B1  00                 	db	0
   976  0013B2  00                 	db	0
   977  0013B3  00                 	db	0
   978  0013B4  00                 	db	0
   979  0013B5  00                 	db	0
   980  0013B6  00                 	db	0
   981  0013B7  00                 	db	0
   982  0013B8  00                 	db	0
   983  0013B9  00                 	db	0
   984  0013BA  00                 	db	0
   985  0013BB  00                 	db	0
   986  0013BC  00                 	db	0
   987  0013BD  00                 	db	0
   988  0013BE  00                 	db	0
   989  0013BF  00                 	db	0
   990  0013C0  00                 	db	0
   991  0013C1  00                 	db	0
   992  0013C2  00                 	db	0
   993  0013C3  00                 	db	0
   994  0013C4  00                 	db	0
   995  0013C5  00                 	db	0
   996  0013C6  00                 	db	0
   997  0013C7  00                 	db	0
   998  0013C8  00                 	db	0
   999  0013C9  00                 	db	0
  1000  0013CA  00                 	db	0
  1001  0013CB  00                 	db	0
  1002  0013CC  00                 	db	0
  1003  0013CD  00                 	db	0
  1004  0013CE  00                 	db	0
  1005  0013CF  00                 	db	0
  1006  0013D0  00                 	db	0
  1007  0013D1  00                 	db	0
  1008  0013D2  00                 	db	0
  1009  0013D3  00                 	db	0
  1010  0013D4  00                 	db	0
  1011  0013D5  00                 	db	0
  1012  0013D6  00                 	db	0
  1013  0013D7  00                 	db	0
  1014  0013D8  00                 	db	0
  1015  0013D9  00                 	db	0
  1016  0013DA  00                 	db	0
  1017  0013DB  00                 	db	0
  1018  0013DC  00                 	db	0
  1019  0013DD  00                 	db	0
  1020  0013DE  00                 	db	0
  1021  0013DF  00                 	db	0
  1022  0013E0  00                 	db	0
  1023  0013E1  00                 	db	0
  1024  0013E2  00                 	db	0
  1025  0013E3  00                 	db	0
  1026  0013E4  00                 	db	0
  1027  0013E5  00                 	db	0
  1028  0013E6  00                 	db	0
  1029  0013E7  00                 	db	0
  1030  0013E8  00                 	db	0
  1031  0013E9  00                 	db	0
  1032  0013EA  00                 	db	0
  1033  0013EB  00                 	db	0
  1034  0013EC  00                 	db	0
  1035  0013ED  00                 	db	0
  1036  0013EE  00                 	db	0
  1037  0013EF  00                 	db	0
  1038  0013F0  00                 	db	0
  1039  0013F1  00                 	db	0
  1040  0013F2  00                 	db	0
  1041  0013F3  00                 	db	0
  1042  0013F4  00                 	db	0
  1043  0013F5  00                 	db	0
  1044  0013F6  00                 	db	0
  1045  0013F7  00                 	db	0
  1046  0013F8  00                 	db	0
  1047  0013F9  00                 	db	0
  1048  0013FA  00                 	db	0
  1049  0013FB  00                 	db	0
  1050  0013FC  00                 	db	0
  1051  0013FD  00                 	db	0
  1052  0013FE  00                 	db	0
  1053  0013FF  00                 	db	0
  1054  001400  00                 	db	0
  1055  001401  00                 	db	0
  1056  001402  00                 	db	0
  1057  001403  00                 	db	0
  1058  001404  00                 	db	0
  1059  001405  00                 	db	0
  1060  001406  00                 	db	0
  1061  001407  00                 	db	0
  1062  001408  00                 	db	0
  1063  001409  00                 	db	0
  1064  00140A  00                 	db	0
  1065  00140B  00                 	db	0
  1066  00140C  00                 	db	0
  1067  00140D  00                 	db	0
  1068  00140E  00                 	db	0
  1069  00140F  00                 	db	0
  1070  001410  00                 	db	0
  1071  001411  00                 	db	0
  1072  001412  00                 	db	0
  1073  001413  00                 	db	0
  1074  001414  00                 	db	0
  1075  001415  00                 	db	0
  1076  001416  00                 	db	0
  1077  001417  00                 	db	0
  1078  001418  00                 	db	0
  1079  001419  00                 	db	0
  1080  00141A  00                 	db	0
  1081  00141B  00                 	db	0
  1082  00141C  00                 	db	0
  1083  00141D  00                 	db	0
  1084  00141E  00                 	db	0
  1085  00141F  00                 	db	0
  1086  001420  00                 	db	0
  1087  001421  00                 	db	0
  1088  001422  00                 	db	0
  1089  001423  00                 	db	0
  1090  001424  00                 	db	0
  1091  001425  00                 	db	0
  1092  001426  00                 	db	0
  1093  001427  00                 	db	0
  1094  001428  00                 	db	0
  1095  001429  00                 	db	0
  1096  00142A  00                 	db	0
  1097  00142B  00                 	db	0
  1098  00142C  00                 	db	0
  1099  00142D  00                 	db	0
  1100  00142E  00                 	db	0
  1101  00142F  00                 	db	0
  1102  001430  00                 	db	0
  1103  001431  00                 	db	0
  1104  001432  00                 	db	0
  1105  001433  00                 	db	0
  1106  001434  00                 	db	0
  1107  001435  00                 	db	0
  1108  001436  00                 	db	0
  1109  001437  00                 	db	0
  1110  001438  00                 	db	0
  1111  001439  00                 	db	0
  1112  00143A  00                 	db	0
  1113  00143B  00                 	db	0
  1114  00143C  00                 	db	0
  1115  00143D  00                 	db	0
  1116  00143E  00                 	db	0
  1117  00143F  00                 	db	0
  1118  001440  00                 	db	0
  1119  001441  00                 	db	0
  1120  001442  00                 	db	0
  1121  001443  00                 	db	0
  1122  001444  00                 	db	0
  1123  001445  00                 	db	0
  1124  001446  00                 	db	0
  1125  001447  00                 	db	0
  1126  001448  00                 	db	0
  1127  001449  00                 	db	0
  1128  00144A  00                 	db	0
  1129  00144B  00                 	db	0
  1130  00144C  00                 	db	0
  1131  00144D  00                 	db	0
  1132  00144E  00                 	db	0
  1133  00144F  00                 	db	0
  1134  001450  00                 	db	0
  1135  001451  00                 	db	0
  1136  001452  00                 	db	0
  1137  001453  00                 	db	0
  1138  001454  00                 	db	0
  1139  001455  00                 	db	0
  1140  001456  00                 	db	0
  1141  001457  00                 	db	0
  1142  001458  00                 	db	0
  1143  001459  00                 	db	0
  1144  00145A  00                 	db	0
  1145  00145B  00                 	db	0
  1146  00145C  00                 	db	0
  1147  00145D  00                 	db	0
  1148  00145E  00                 	db	0
  1149  00145F  00                 	db	0
  1150  001460  00                 	db	0
  1151  001461  00                 	db	0
  1152  001462  00                 	db	0
  1153  001463  00                 	db	0
  1154  001464  00                 	db	0
  1155  001465  00                 	db	0
  1156  001466  00                 	db	0
  1157  001467  00                 	db	0
  1158  001468  00                 	db	0
  1159  001469  00                 	db	0
  1160  00146A  00                 	db	0
  1161  00146B  00                 	db	0
  1162  00146C  00                 	db	0
  1163  00146D  00                 	db	0
  1164  00146E  00                 	db	0
  1165  00146F  00                 	db	0
  1166  001470  00                 	db	0
  1167  001471  00                 	db	0
  1168  001472  00                 	db	0
  1169  001473  00                 	db	0
  1170  001474  00                 	db	0
  1171  001475  00                 	db	0
  1172  001476  00                 	db	0
  1173  001477  00                 	db	0
  1174  001478  00                 	db	0
  1175  001479  00                 	db	0
  1176  00147A  00                 	db	0
  1177  00147B  00                 	db	0
  1178  00147C  00                 	db	0
  1179  00147D  00                 	db	0
  1180  00147E  00                 	db	0
  1181  00147F  00                 	db	0
  1182  001480  00                 	db	0
  1183  001481  00                 	db	0
  1184  001482  00                 	db	0
  1185  001483  00                 	db	0
  1186  001484  00                 	db	0
  1187  001485  00                 	db	0
  1188  001486  00                 	db	0
  1189  001487  00                 	db	0
  1190  001488  00                 	db	0
  1191  001489  00                 	db	0
  1192  00148A  00                 	db	0
  1193  00148B  00                 	db	0
  1194  00148C  00                 	db	0
  1195  00148D  00                 	db	0
  1196  00148E  00                 	db	0
  1197  00148F  00                 	db	0
  1198  001490  00                 	db	0
  1199  001491  00                 	db	0
  1200  001492  00                 	db	0
  1201  001493  00                 	db	0
  1202  001494  00                 	db	0
  1203  001495  00                 	db	0
  1204  001496  00                 	db	0
  1205  001497  00                 	db	0
  1206  001498  00                 	db	0
  1207  001499  00                 	db	0
  1208  00149A  00                 	db	0
  1209  00149B  00                 	db	0
  1210  00149C  00                 	db	0
  1211  00149D  00                 	db	0
  1212  00149E  00                 	db	0
  1213  00149F  00                 	db	0
  1214  0014A0  00                 	db	0
  1215  0014A1  00                 	db	0
  1216  0014A2  00                 	db	0
  1217  0014A3  00                 	db	0
  1218  0014A4  00                 	db	0
  1219  0014A5  00                 	db	0
  1220  0014A6  00                 	db	0
  1221  0014A7  00                 	db	0
  1222  0014A8  00                 	db	0
  1223  0014A9  00                 	db	0
  1224  0014AA  00                 	db	0
  1225  0014AB  00                 	db	0
  1226  0014AC  00                 	db	0
  1227  0014AD  00                 	db	0
  1228  0014AE  00                 	db	0
  1229  0014AF  00                 	db	0
  1230  0014B0  00                 	db	0
  1231  0014B1  00                 	db	0
  1232  0014B2  00                 	db	0
  1233  0014B3  00                 	db	0
  1234  0014B4  00                 	db	0
  1235  0014B5  00                 	db	0
  1236  0014B6  00                 	db	0
  1237  0014B7  00                 	db	0
  1238  0014B8  00                 	db	0
  1239  0014B9  00                 	db	0
  1240  0014BA  00                 	db	0
  1241  0014BB  00                 	db	0
  1242  0014BC  00                 	db	0
  1243  0014BD  00                 	db	0
  1244  0014BE  00                 	db	0
  1245  0014BF  00                 	db	0
  1246  0014C0  00                 	db	0
  1247  0014C1  00                 	db	0
  1248  0014C2  00                 	db	0
  1249  0014C3  00                 	db	0
  1250  0014C4  00                 	db	0
  1251  0014C5  00                 	db	0
  1252  0014C6  00                 	db	0
  1253  0014C7  00                 	db	0
  1254  0014C8  00                 	db	0
  1255  0014C9  00                 	db	0
  1256  0014CA  00                 	db	0
  1257  0014CB  00                 	db	0
  1258  0014CC  00                 	db	0
  1259  0014CD  00                 	db	0
  1260  0014CE  00                 	db	0
  1261  0014CF  00                 	db	0
  1262  0014D0  00                 	db	0
  1263  0014D1  00                 	db	0
  1264  0014D2  00                 	db	0
  1265  0014D3  00                 	db	0
  1266  0014D4  00                 	db	0
  1267  0014D5  00                 	db	0
  1268  0014D6  00                 	db	0
  1269  0014D7  00                 	db	0
  1270  0014D8  00                 	db	0
  1271  0014D9  00                 	db	0
  1272  0014DA  00                 	db	0
  1273  0014DB  00                 	db	0
  1274  0014DC  00                 	db	0
  1275  0014DD  00                 	db	0
  1276  0014DE  00                 	db	0
  1277  0014DF  00                 	db	0
  1278  0014E0  00                 	db	0
  1279  0014E1  00                 	db	0
  1280  0014E2  00                 	db	0
  1281  0014E3  00                 	db	0
  1282  0014E4  00                 	db	0
  1283  0014E5  00                 	db	0
  1284  0014E6  00                 	db	0
  1285  0014E7  00                 	db	0
  1286  0014E8  00                 	db	0
  1287  0014E9  00                 	db	0
  1288  0014EA  00                 	db	0
  1289  0014EB  00                 	db	0
  1290  0014EC  00                 	db	0
  1291  0014ED  00                 	db	0
  1292  0014EE  00                 	db	0
  1293  0014EF  00                 	db	0
  1294  0014F0  00                 	db	0
  1295  0014F1  00                 	db	0
  1296  0014F2  00                 	db	0
  1297  0014F3  00                 	db	0
  1298  0014F4  00                 	db	0
  1299  0014F5  00                 	db	0
  1300  0014F6  00                 	db	0
  1301  0014F7  00                 	db	0
  1302  0014F8  00                 	db	0
  1303  0014F9  00                 	db	0
  1304  0014FA  00                 	db	0
  1305  0014FB  00                 	db	0
  1306  0014FC  00                 	db	0
  1307  0014FD  00                 	db	0
  1308  0014FE  00                 	db	0
  1309  0014FF  00                 	db	0
  1310  001500  00                 	db	0
  1311  001501  00                 	db	0
  1312  001502  00                 	db	0
  1313  001503  00                 	db	0
  1314  001504  00                 	db	0
  1315  001505  00                 	db	0
  1316  001506  00                 	db	0
  1317  001507  00                 	db	0
  1318  001508  00                 	db	0
  1319  001509  00                 	db	0
  1320  00150A  00                 	db	0
  1321  00150B  00                 	db	0
  1322  00150C  00                 	db	0
  1323  00150D  00                 	db	0
  1324  00150E  00                 	db	0
  1325  00150F  00                 	db	0
  1326  001510  00                 	db	0
  1327  001511  00                 	db	0
  1328  001512  00                 	db	0
  1329  001513  00                 	db	0
  1330  001514  00                 	db	0
  1331  001515  00                 	db	0
  1332  001516  00                 	db	0
  1333  001517  00                 	db	0
  1334  001518  00                 	db	0
  1335  001519  00                 	db	0
  1336  00151A  00                 	db	0
  1337  00151B  00                 	db	0
  1338  00151C  00                 	db	0
  1339  00151D  00                 	db	0
  1340  00151E  00                 	db	0
  1341  00151F  00                 	db	0
  1342  001520  00                 	db	0
  1343  001521  00                 	db	0
  1344  001522  00                 	db	0
  1345  001523  00                 	db	0
  1346  001524  00                 	db	0
  1347  001525  00                 	db	0
  1348  001526  00                 	db	0
  1349  001527  00                 	db	0
  1350  001528  00                 	db	0
  1351  001529  00                 	db	0
  1352  00152A  00                 	db	0
  1353  00152B  00                 	db	0
  1354  00152C  00                 	db	0
  1355  00152D  00                 	db	0
  1356  00152E  00                 	db	0
  1357  00152F  00                 	db	0
  1358  001530  00                 	db	0
  1359  001531  00                 	db	0
  1360  001532  00                 	db	0
  1361  001533  00                 	db	0
  1362  001534  00                 	db	0
  1363  001535  00                 	db	0
  1364  001536  00                 	db	0
  1365  001537  00                 	db	0
  1366  001538  00                 	db	0
  1367  001539  00                 	db	0
  1368  00153A  00                 	db	0
  1369  00153B  00                 	db	0
  1370  00153C  00                 	db	0
  1371  00153D  00                 	db	0
  1372  00153E  00                 	db	0
  1373  00153F  00                 	db	0
  1374  001540  00                 	db	0
  1375  001541  00                 	db	0
  1376  001542  00                 	db	0
  1377  001543  00                 	db	0
  1378  001544  00                 	db	0
  1379  001545  00                 	db	0
  1380  001546  00                 	db	0
  1381  001547  00                 	db	0
  1382  001548  00                 	db	0
  1383  001549  00                 	db	0
  1384  00154A  00                 	db	0
  1385  00154B  00                 	db	0
  1386  00154C  00                 	db	0
  1387  00154D  00                 	db	0
  1388  00154E  00                 	db	0
  1389  00154F  00                 	db	0
  1390  001550  00                 	db	0
  1391  001551  00                 	db	0
  1392  001552  00                 	db	0
  1393  001553  00                 	db	0
  1394  001554  00                 	db	0
  1395  001555  00                 	db	0
  1396  001556  00                 	db	0
  1397  001557  00                 	db	0
  1398  001558  00                 	db	0
  1399  001559  00                 	db	0
  1400  00155A  00                 	db	0
  1401  00155B  00                 	db	0
  1402  00155C  00                 	db	0
  1403  00155D  00                 	db	0
  1404  00155E  00                 	db	0
  1405  00155F  00                 	db	0
  1406  001560  00                 	db	0
  1407  001561  00                 	db	0
  1408  001562  00                 	db	0
  1409  001563  00                 	db	0
  1410  001564  00                 	db	0
  1411  001565  00                 	db	0
  1412  001566  00                 	db	0
  1413  001567  00                 	db	0
  1414  001568  00                 	db	0
  1415  001569  00                 	db	0
  1416  00156A  00                 	db	0
  1417  00156B  00                 	db	0
  1418  00156C  00                 	db	0
  1419  00156D  00                 	db	0
  1420  00156E  00                 	db	0
  1421  00156F  00                 	db	0
  1422  001570  00                 	db	0
  1423  001571  00                 	db	0
  1424  001572  00                 	db	0
  1425  001573  00                 	db	0
  1426  001574  00                 	db	0
  1427  001575  00                 	db	0
  1428  001576  00                 	db	0
  1429  001577  00                 	db	0
  1430  001578  00                 	db	0
  1431  001579  00                 	db	0
  1432  00157A  00                 	db	0
  1433  00157B  00                 	db	0
  1434  00157C  00                 	db	0
  1435  00157D  00                 	db	0
  1436  00157E  00                 	db	0
  1437  00157F  00                 	db	0
  1438  001580  00                 	db	0
  1439  001581  00                 	db	0
  1440  001582  00                 	db	0
  1441  001583  00                 	db	0
  1442  001584  00                 	db	0
  1443  001585  00                 	db	0
  1444  001586  00                 	db	0
  1445  001587  00                 	db	0
  1446  001588  00                 	db	0
  1447  001589  00                 	db	0
  1448  00158A  00                 	db	0
  1449  00158B  00                 	db	0
  1450  00158C  00                 	db	0
  1451  00158D  00                 	db	0
  1452  00158E  00                 	db	0
  1453  00158F  00                 	db	0
  1454  001590  00                 	db	0
  1455  001591  00                 	db	0
  1456  001592  00                 	db	0
  1457  001593  00                 	db	0
  1458  001594  00                 	db	0
  1459  001595  00                 	db	0
  1460  001596  00                 	db	0
  1461  001597  00                 	db	0
  1462  001598  00                 	db	0
  1463  001599  00                 	db	0
  1464  00159A  00                 	db	0
  1465  00159B  00                 	db	0
  1466  00159C  00                 	db	0
  1467  00159D  00                 	db	0
  1468  00159E  00                 	db	0
  1469  00159F  00                 	db	0
  1470  0015A0  00                 	db	0
  1471  0015A1  00                 	db	0
  1472  0015A2  00                 	db	0
  1473  0015A3  00                 	db	0
  1474  0015A4  00                 	db	0
  1475  0015A5  00                 	db	0
  1476  0015A6  00                 	db	0
  1477  0015A7  00                 	db	0
  1478  0015A8  00                 	db	0
  1479  0015A9  00                 	db	0
  1480  0015AA  00                 	db	0
  1481  0015AB  00                 	db	0
  1482  0015AC  00                 	db	0
  1483  0015AD  00                 	db	0
  1484  0015AE  00                 	db	0
  1485  0015AF  00                 	db	0
  1486  0015B0  00                 	db	0
  1487  0015B1  00                 	db	0
  1488  0015B2  00                 	db	0
  1489  0015B3  00                 	db	0
  1490  0015B4  00                 	db	0
  1491  0015B5  00                 	db	0
  1492  0015B6  00                 	db	0
  1493  0015B7  00                 	db	0
  1494  0015B8  00                 	db	0
  1495  0015B9  00                 	db	0
  1496  0015BA  00                 	db	0
  1497  0015BB  00                 	db	0
  1498  0015BC  00                 	db	0
  1499  0015BD  00                 	db	0
  1500  0015BE  00                 	db	0
  1501  0015BF  00                 	db	0
  1502  0015C0  00                 	db	0
  1503  0015C1  00                 	db	0
  1504  0015C2  00                 	db	0
  1505  0015C3  00                 	db	0
  1506  0015C4  00                 	db	0
  1507  0015C5  00                 	db	0
  1508  0015C6  00                 	db	0
  1509  0015C7  00                 	db	0
  1510  0015C8  00                 	db	0
  1511  0015C9  00                 	db	0
  1512  0015CA  00                 	db	0
  1513  0015CB  00                 	db	0
  1514  0015CC  00                 	db	0
  1515  0015CD  00                 	db	0
  1516  0015CE  00                 	db	0
  1517  0015CF  00                 	db	0
  1518  0015D0  00                 	db	0
  1519  0015D1  00                 	db	0
  1520  0015D2  00                 	db	0
  1521  0015D3  00                 	db	0
  1522  0015D4  00                 	db	0
  1523  0015D5  00                 	db	0
  1524  0015D6  00                 	db	0
  1525  0015D7  00                 	db	0
  1526  0015D8  00                 	db	0
  1527  0015D9  00                 	db	0
  1528  0015DA  00                 	db	0
  1529  0015DB  00                 	db	0
  1530  0015DC  00                 	db	0
  1531  0015DD  00                 	db	0
  1532  0015DE  00                 	db	0
  1533  0015DF  00                 	db	0
  1534  0015E0  00                 	db	0
  1535  0015E1  00                 	db	0
  1536  0015E2  00                 	db	0
  1537  0015E3  00                 	db	0
  1538  0015E4  00                 	db	0
  1539  0015E5  00                 	db	0
  1540  0015E6  00                 	db	0
  1541  0015E7  00                 	db	0
  1542  0015E8  00                 	db	0
  1543  0015E9  00                 	db	0
  1544  0015EA  00                 	db	0
  1545  0015EB  00                 	db	0
  1546  0015EC  00                 	db	0
  1547  0015ED  00                 	db	0
  1548  0015EE  00                 	db	0
  1549  0015EF  00                 	db	0
  1550  0015F0  00                 	db	0
  1551  0015F1  00                 	db	0
  1552  0015F2  00                 	db	0
  1553  0015F3  00                 	db	0
  1554  0015F4  00                 	db	0
  1555  0015F5  00                 	db	0
  1556  0015F6  00                 	db	0
  1557  0015F7  00                 	db	0
  1558  0015F8  00                 	db	0
  1559  0015F9  00                 	db	0
  1560  0015FA  00                 	db	0
  1561  0015FB  00                 	db	0
  1562  0015FC  00                 	db	0
  1563  0015FD  00                 	db	0
  1564  0015FE  00                 	db	0
  1565  0015FF  00                 	db	0
  1566  001600  00                 	db	0
  1567  001601  00                 	db	0
  1568  001602  00                 	db	0
  1569  001603  00                 	db	0
  1570  001604  00                 	db	0
  1571  001605  00                 	db	0
  1572  001606  00                 	db	0
  1573  001607  00                 	db	0
  1574  001608  00                 	db	0
  1575  001609  00                 	db	0
  1576  00160A  00                 	db	0
  1577  00160B  00                 	db	0
  1578  00160C  00                 	db	0
  1579  00160D  00                 	db	0
  1580  00160E  00                 	db	0
  1581  00160F  00                 	db	0
  1582  001610  00                 	db	0
  1583  001611  00                 	db	0
  1584  001612  00                 	db	0
  1585  001613  00                 	db	0
  1586  001614  00                 	db	0
  1587  001615  00                 	db	0
  1588  001616  00                 	db	0
  1589  001617  00                 	db	0
  1590  001618  00                 	db	0
  1591  001619  00                 	db	0
  1592  00161A  00                 	db	0
  1593  00161B  00                 	db	0
  1594  00161C  00                 	db	0
  1595  00161D  00                 	db	0
  1596  00161E  00                 	db	0
  1597  00161F  00                 	db	0
  1598  001620  00                 	db	0
  1599  001621  00                 	db	0
  1600  001622  00                 	db	0
  1601  001623  00                 	db	0
  1602  001624  00                 	db	0
  1603  001625  00                 	db	0
  1604  001626  00                 	db	0
  1605  001627  00                 	db	0
  1606  001628  00                 	db	0
  1607  001629  00                 	db	0
  1608  00162A  00                 	db	0
  1609  00162B  00                 	db	0
  1610  00162C  00                 	db	0
  1611  00162D  00                 	db	0
  1612  00162E  00                 	db	0
  1613  00162F  00                 	db	0
  1614  001630  00                 	db	0
  1615  001631  00                 	db	0
  1616  001632  00                 	db	0
  1617  001633  00                 	db	0
  1618  001634  00                 	db	0
  1619  001635  00                 	db	0
  1620  001636  00                 	db	0
  1621  001637  00                 	db	0
  1622  001638  00                 	db	0
  1623  001639  00                 	db	0
  1624  00163A  00                 	db	0
  1625  00163B  00                 	db	0
  1626  00163C  00                 	db	0
  1627  00163D  00                 	db	0
  1628  00163E  00                 	db	0
  1629  00163F  00                 	db	0
  1630  001640  00                 	db	0
  1631  001641  00                 	db	0
  1632  001642  00                 	db	0
  1633  001643  00                 	db	0
  1634  001644  00                 	db	0
  1635  001645  00                 	db	0
  1636  001646  00                 	db	0
  1637  001647  00                 	db	0
  1638  001648  00                 	db	0
  1639  001649  00                 	db	0
  1640  00164A  00                 	db	0
  1641  00164B  00                 	db	0
  1642  00164C  00                 	db	0
  1643  00164D  00                 	db	0
  1644  00164E  00                 	db	0
  1645  00164F  00                 	db	0
  1646  001650  00                 	db	0
  1647  001651  00                 	db	0
  1648  001652  00                 	db	0
  1649  001653  00                 	db	0
  1650  001654  00                 	db	0
  1651  001655  00                 	db	0
  1652  001656  00                 	db	0
  1653  001657  00                 	db	0
  1654  001658  00                 	db	0
  1655  001659  00                 	db	0
  1656  00165A  00                 	db	0
  1657  00165B  00                 	db	0
  1658  00165C  00                 	db	0
  1659  00165D  00                 	db	0
  1660  00165E  00                 	db	0
  1661  00165F  00                 	db	0
  1662  001660  00                 	db	0
  1663  001661  00                 	db	0
  1664  001662  00                 	db	0
  1665  001663  00                 	db	0
  1666  001664  00                 	db	0
  1667  001665  00                 	db	0
  1668  001666  00                 	db	0
  1669  001667  00                 	db	0
  1670  001668  00                 	db	0
  1671  001669  00                 	db	0
  1672  00166A  00                 	db	0
  1673  00166B  00                 	db	0
  1674  00166C  00                 	db	0
  1675  00166D  00                 	db	0
  1676  00166E  00                 	db	0
  1677  00166F  00                 	db	0
  1678  001670  00                 	db	0
  1679  001671  00                 	db	0
  1680  001672  00                 	db	0
  1681  001673  00                 	db	0
  1682  001674  00                 	db	0
  1683  001675  00                 	db	0
  1684  001676  00                 	db	0
  1685  001677  00                 	db	0
  1686  001678  00                 	db	0
  1687  001679  00                 	db	0
  1688  00167A  00                 	db	0
  1689  00167B  00                 	db	0
  1690  00167C  00                 	db	0
  1691  00167D  00                 	db	0
  1692  00167E  00                 	db	0
  1693  00167F  00                 	db	0
  1694  001680  00                 	db	0
  1695  001681  00                 	db	0
  1696  001682  00                 	db	0
  1697  001683  00                 	db	0
  1698  001684  00                 	db	0
  1699  001685  00                 	db	0
  1700  001686  00                 	db	0
  1701  001687  00                 	db	0
  1702  001688  00                 	db	0
  1703  001689  00                 	db	0
  1704  00168A  00                 	db	0
  1705  00168B  00                 	db	0
  1706  00168C  00                 	db	0
  1707  00168D  00                 	db	0
  1708  00168E  00                 	db	0
  1709  00168F  00                 	db	0
  1710  001690  00                 	db	0
  1711  001691  00                 	db	0
  1712  001692  00                 	db	0
  1713  001693  00                 	db	0
  1714  001694  00                 	db	0
  1715  001695  00                 	db	0
  1716  001696  00                 	db	0
  1717  001697  00                 	db	0
  1718  001698  00                 	db	0
  1719  001699  00                 	db	0
  1720  00169A  00                 	db	0
  1721  00169B  00                 	db	0
  1722  00169C  00                 	db	0
  1723  00169D  00                 	db	0
  1724  00169E  00                 	db	0
  1725  00169F  00                 	db	0
  1726  0016A0  00                 	db	0
  1727  0016A1  00                 	db	0
  1728  0016A2  00                 	db	0
  1729  0016A3  00                 	db	0
  1730  0016A4  00                 	db	0
  1731  0016A5  00                 	db	0
  1732  0016A6  00                 	db	0
  1733  0016A7  00                 	db	0
  1734  0016A8  00                 	db	0
  1735  0016A9  00                 	db	0
  1736  0016AA  00                 	db	0
  1737  0016AB  00                 	db	0
  1738  0016AC  00                 	db	0
  1739  0016AD  00                 	db	0
  1740  0016AE  00                 	db	0
  1741  0016AF  00                 	db	0
  1742  0016B0  00                 	db	0
  1743  0016B1  00                 	db	0
  1744  0016B2  00                 	db	0
  1745  0016B3  00                 	db	0
  1746  0016B4  00                 	db	0
  1747  0016B5  00                 	db	0
  1748  0016B6  00                 	db	0
  1749  0016B7  00                 	db	0
  1750  0016B8  00                 	db	0
  1751  0016B9  00                 	db	0
  1752  0016BA  00                 	db	0
  1753  0016BB  00                 	db	0
  1754  0016BC  00                 	db	0
  1755  0016BD  00                 	db	0
  1756  0016BE  00                 	db	0
  1757  0016BF  00                 	db	0
  1758  0016C0  00                 	db	0
  1759  0016C1  00                 	db	0
  1760  0016C2  00                 	db	0
  1761  0016C3  00                 	db	0
  1762  0016C4  00                 	db	0
  1763  0016C5  00                 	db	0
  1764  0016C6  00                 	db	0
  1765  0016C7  00                 	db	0
  1766  0016C8  00                 	db	0
  1767  0016C9  00                 	db	0
  1768  0016CA  00                 	db	0
  1769  0016CB  00                 	db	0
  1770  0016CC  00                 	db	0
  1771  0016CD  00                 	db	0
  1772  0016CE  00                 	db	0
  1773  0016CF  00                 	db	0
  1774  0016D0  00                 	db	0
  1775  0016D1  00                 	db	0
  1776  0016D2  00                 	db	0
  1777  0016D3  00                 	db	0
  1778  0016D4  00                 	db	0
  1779  0016D5  00                 	db	0
  1780  0016D6  00                 	db	0
  1781  0016D7  00                 	db	0
  1782  0016D8  00                 	db	0
  1783  0016D9  00                 	db	0
  1784  0016DA  00                 	db	0
  1785  0016DB  00                 	db	0
  1786  0016DC  00                 	db	0
  1787  0016DD  00                 	db	0
  1788  0016DE  00                 	db	0
  1789  0016DF  00                 	db	0
  1790  0016E0  00                 	db	0
  1791  0016E1  00                 	db	0
  1792  0016E2  00                 	db	0
  1793  0016E3  00                 	db	0
  1794  0016E4  00                 	db	0
  1795  0016E5  00                 	db	0
  1796  0016E6  00                 	db	0
  1797  0016E7  00                 	db	0
  1798  0016E8  00                 	db	0
  1799  0016E9  00                 	db	0
  1800  0016EA  00                 	db	0
  1801  0016EB  00                 	db	0
  1802  0016EC  00                 	db	0
  1803  0016ED  00                 	db	0
  1804  0016EE  00                 	db	0
  1805  0016EF  00                 	db	0
  1806  0016F0  00                 	db	0
  1807  0016F1  00                 	db	0
  1808  0016F2  00                 	db	0
  1809  0016F3  00                 	db	0
  1810  0016F4  00                 	db	0
  1811  0016F5  00                 	db	0
  1812  0016F6  00                 	db	0
  1813  0016F7  00                 	db	0
  1814  0016F8  00                 	db	0
  1815  0016F9  00                 	db	0
  1816  0016FA  00                 	db	0
  1817  0016FB  00                 	db	0
  1818  0016FC  00                 	db	0
  1819  0016FD  00                 	db	0
  1820  0016FE  00                 	db	0
  1821  0016FF  00                 	db	0
  1822  001700  00                 	db	0
  1823  001701  00                 	db	0
  1824  001702  00                 	db	0
  1825  001703  00                 	db	0
  1826  001704  00                 	db	0
  1827  001705  00                 	db	0
  1828  001706  00                 	db	0
  1829  001707  00                 	db	0
  1830  001708  00                 	db	0
  1831  001709  00                 	db	0
  1832  00170A  00                 	db	0
  1833  00170B  00                 	db	0
  1834  00170C  00                 	db	0
  1835  00170D  00                 	db	0
  1836  00170E  00                 	db	0
  1837  00170F  00                 	db	0
  1838  001710  00                 	db	0
  1839  001711  00                 	db	0
  1840  001712  00                 	db	0
  1841  001713  00                 	db	0
  1842  001714  00                 	db	0
  1843  001715  00                 	db	0
  1844  001716  00                 	db	0
  1845  001717  00                 	db	0
  1846  001718  00                 	db	0
  1847  001719  00                 	db	0
  1848  00171A  00                 	db	0
  1849  00171B  00                 	db	0
  1850  00171C  00                 	db	0
  1851  00171D  00                 	db	0
  1852  00171E  00                 	db	0
  1853  00171F  00                 	db	0
  1854  001720  00                 	db	0
  1855  001721  00                 	db	0
  1856  001722  00                 	db	0
  1857  001723  00                 	db	0
  1858  001724  00                 	db	0
  1859  001725  00                 	db	0
  1860  001726  00                 	db	0
  1861  001727  00                 	db	0
  1862  001728  00                 	db	0
  1863  001729  00                 	db	0
  1864  00172A  00                 	db	0
  1865  00172B  00                 	db	0
  1866  00172C  00                 	db	0
  1867  00172D  00                 	db	0
  1868  00172E  00                 	db	0
  1869  00172F  00                 	db	0
  1870  001730  00                 	db	0
  1871  001731  00                 	db	0
  1872  001732  00                 	db	0
  1873  001733  00                 	db	0
  1874  001734  00                 	db	0
  1875  001735  00                 	db	0
  1876  001736  00                 	db	0
  1877  001737  00                 	db	0
  1878  001738  00                 	db	0
  1879  001739  00                 	db	0
  1880  00173A  00                 	db	0
  1881  00173B  00                 	db	0
  1882  00173C  00                 	db	0
  1883  00173D  00                 	db	0
  1884  00173E  00                 	db	0
  1885  00173F  00                 	db	0
  1886  001740  00                 	db	0
  1887  001741  00                 	db	0
  1888  001742  00                 	db	0
  1889  001743  00                 	db	0
  1890  001744  00                 	db	0
  1891  001745  00                 	db	0
  1892  001746  00                 	db	0
  1893  001747  00                 	db	0
  1894  001748  00                 	db	0
  1895  001749  00                 	db	0
  1896  00174A  00                 	db	0
  1897  00174B  00                 	db	0
  1898  00174C  00                 	db	0
  1899  00174D  00                 	db	0
  1900  00174E  00                 	db	0
  1901  00174F  00                 	db	0
  1902  001750  00                 	db	0
  1903  001751  00                 	db	0
  1904  001752  00                 	db	0
  1905  001753  00                 	db	0
  1906  001754  00                 	db	0
  1907  001755  00                 	db	0
  1908  001756  00                 	db	0
  1909  001757  00                 	db	0
  1910  001758  00                 	db	0
  1911  001759  00                 	db	0
  1912  00175A  00                 	db	0
  1913  00175B  00                 	db	0
  1914  00175C  00                 	db	0
  1915  00175D  00                 	db	0
  1916  00175E  00                 	db	0
  1917  00175F  00                 	db	0
  1918  001760  00                 	db	0
  1919  001761  00                 	db	0
  1920  001762  00                 	db	0
  1921  001763  00                 	db	0
  1922  001764  00                 	db	0
  1923  001765  00                 	db	0
  1924  001766  00                 	db	0
  1925  001767  00                 	db	0
  1926  001768  00                 	db	0
  1927  001769  00                 	db	0
  1928  00176A  00                 	db	0
  1929  00176B  00                 	db	0
  1930  00176C  00                 	db	0
  1931  00176D  00                 	db	0
  1932  00176E  00                 	db	0
  1933  00176F  00                 	db	0
  1934  001770  00                 	db	0
  1935  001771  00                 	db	0
  1936  001772  00                 	db	0
  1937  001773  00                 	db	0
  1938  001774  00                 	db	0
  1939  001775  00                 	db	0
  1940  001776  00                 	db	0
  1941  001777  00                 	db	0
  1942  001778  00                 	db	0
  1943  001779  00                 	db	0
  1944  00177A  00                 	db	0
  1945  00177B  00                 	db	0
  1946  00177C  00                 	db	0
  1947  00177D  00                 	db	0
  1948  00177E  00                 	db	0
  1949  00177F  00                 	db	0
  1950  001780  00                 	db	0
  1951  001781  00                 	db	0
  1952  001782  00                 	db	0
  1953  001783  00                 	db	0
  1954  001784  00                 	db	0
  1955  001785  00                 	db	0
  1956  001786  00                 	db	0
  1957  001787  00                 	db	0
  1958  001788  00                 	db	0
  1959  001789  00                 	db	0
  1960  00178A  00                 	db	0
  1961  00178B  00                 	db	0
  1962  00178C  00                 	db	0
  1963  00178D  00                 	db	0
  1964  00178E  00                 	db	0
  1965  00178F  00                 	db	0
  1966  001790  00                 	db	0
  1967  001791  00                 	db	0
  1968  001792  00                 	db	0
  1969  001793  00                 	db	0
  1970  001794  00                 	db	0
  1971  001795  00                 	db	0
  1972  001796  00                 	db	0
  1973  001797  00                 	db	0
  1974  001798  00                 	db	0
  1975  001799  00                 	db	0
  1976  00179A  00                 	db	0
  1977  00179B  00                 	db	0
  1978  00179C  00                 	db	0
  1979  00179D  00                 	db	0
  1980  00179E  00                 	db	0
  1981  00179F  00                 	db	0
  1982  0017A0  00                 	db	0
  1983  0017A1  00                 	db	0
  1984  0017A2  00                 	db	0
  1985  0017A3  00                 	db	0
  1986  0017A4  00                 	db	0
  1987  0017A5  00                 	db	0
  1988  0017A6  00                 	db	0
  1989  0017A7  00                 	db	0
  1990  0017A8  00                 	db	0
  1991  0017A9  00                 	db	0
  1992  0017AA  00                 	db	0
  1993  0017AB  00                 	db	0
  1994  0017AC  00                 	db	0
  1995  0017AD  00                 	db	0
  1996  0017AE  00                 	db	0
  1997  0017AF  00                 	db	0
  1998  0017B0  00                 	db	0
  1999  0017B1  00                 	db	0
  2000  0017B2  00                 	db	0
  2001  0017B3  00                 	db	0
  2002  0017B4  00                 	db	0
  2003  0017B5  00                 	db	0
  2004  0017B6  00                 	db	0
  2005  0017B7  00                 	db	0
  2006  0017B8  00                 	db	0
  2007  0017B9  00                 	db	0
  2008  0017BA  00                 	db	0
  2009  0017BB  00                 	db	0
  2010  0017BC  00                 	db	0
  2011  0017BD  00                 	db	0
  2012  0017BE  00                 	db	0
  2013  0017BF  00                 	db	0
  2014  0017C0  00                 	db	0
  2015  0017C1  00                 	db	0
  2016  0017C2  00                 	db	0
  2017  0017C3  00                 	db	0
  2018  0017C4  00                 	db	0
  2019  0017C5  00                 	db	0
  2020  0017C6  00                 	db	0
  2021  0017C7  00                 	db	0
  2022  0017C8  00                 	db	0
  2023  0017C9  00                 	db	0
  2024  0017CA  00                 	db	0
  2025  0017CB  00                 	db	0
  2026  0017CC  00                 	db	0
  2027  0017CD  00                 	db	0
  2028  0017CE  00                 	db	0
  2029  0017CF  00                 	db	0
  2030  0017D0  00                 	db	0
  2031  0017D1  00                 	db	0
  2032  0017D2  00                 	db	0
  2033  0017D3  00                 	db	0
  2034  0017D4  00                 	db	0
  2035  0017D5  00                 	db	0
  2036  0017D6  00                 	db	0
  2037  0017D7  00                 	db	0
  2038  0017D8  00                 	db	0
  2039  0017D9  00                 	db	0
  2040  0017DA  00                 	db	0
  2041  0017DB  00                 	db	0
  2042  0017DC  00                 	db	0
  2043  0017DD  00                 	db	0
  2044  0017DE  00                 	db	0
  2045  0017DF  00                 	db	0
  2046  0017E0  00                 	db	0
  2047  0017E1  00                 	db	0
  2048  0017E2  00                 	db	0
  2049  0017E3  00                 	db	0
  2050  0017E4  00                 	db	0
  2051  0017E5  00                 	db	0
  2052  0017E6  00                 	db	0
  2053  0017E7  00                 	db	0
  2054  0017E8  00                 	db	0
  2055  0017E9  00                 	db	0
  2056  0017EA  00                 	db	0
  2057  0017EB  00                 	db	0
  2058  0017EC  00                 	db	0
  2059  0017ED  00                 	db	0
  2060  0017EE  00                 	db	0
  2061  0017EF  00                 	db	0
  2062  0017F0  00                 	db	0
  2063  0017F1  00                 	db	0
  2064  0017F2  00                 	db	0
  2065  0017F3  00                 	db	0
  2066  0017F4  00                 	db	0
  2067  0017F5  00                 	db	0
  2068  0017F6  00                 	db	0
  2069  0017F7  00                 	db	0
  2070  0017F8  00                 	db	0
  2071  0017F9  00                 	db	0
  2072  0017FA  00                 	db	0
  2073  0017FB  00                 	db	0
  2074  0017FC  00                 	db	0
  2075  0017FD  00                 	db	0
  2076  0017FE  00                 	db	0
  2077  0017FF  00                 	db	0
  2078  001800  00                 	db	0
  2079  001801  00                 	db	0
  2080  001802  00                 	db	0
  2081  001803  00                 	db	0
  2082  001804  00                 	db	0
  2083  001805  00                 	db	0
  2084                           
  2085                           	psect	smallconst
  2086  001000                     __psmallconst:
  2087                           	opt stack 0
  2088  001000  00                 	db	0
  2089  001001                     _virtualMemory_size:
  2090                           	opt stack 0
  2091  001001  0800               	dw	2048
  2092  001003  0000               	dw	0
  2093  001005                     __end_of_virtualMemory_size:
  2094                           	opt stack 0
  2095  0000                     _ANSELD	set	3899
  2096  0000                     _BAUDCON2bits	set	3952
  2097  0000                     _LATA	set	3977
  2098  0000                     _LATAbits	set	3977
  2099  0000                     _LATC	set	3979
  2100  0000                     _LATCbits	set	3979
  2101  0000                     _LATD	set	3980
  2102  0000                     _LATDbits	set	3980
  2103  0000                     _LATE	set	3981
  2104  0000                     _LATEbits	set	3981
  2105  0000                     _OSCCON2bits	set	4050
  2106  0000                     _OSCCONbits	set	4051
  2107  0000                     _RCREG2	set	3956
  2108  0000                     _RCSTA2bits	set	3953
  2109  0000                     _SPBRG2	set	3957
  2110  0000                     _SPBRGH2	set	3958
  2111  0000                     _TRISA	set	3986
  2112  0000                     _TRISC	set	3988
  2113  0000                     _TRISDbits	set	3989
  2114  0000                     _TRISE	set	3990
  2115  0000                     _TXREG2	set	3955
  2116  0000                     _TXSTA2bits	set	3954
  2117                           
  2118                           ; #config settings
  2119  001005  00                 	db	0	; dummy byte at the end
  2120  0000                     
  2121                           	psect	cinit
  2122  002632                     __pcinit:
  2123                           	opt stack 0
  2124  002632                     start_initialization:
  2125                           	opt stack 0
  2126  002632                     __initialization:
  2127                           	opt stack 0
  2128                           
  2129                           ; Clear objects allocated to BANK1 (256 bytes)
  2130  002632  EE01  F000         	lfsr	0,__pbssBANK1
  2131  002636  EE11 F000          	lfsr	1,256
  2132  00263A                     clear_0:
  2133  00263A  6AEE               	clrf	postinc0,c
  2134  00263C  50E5               	movf	postdec1,w,c
  2135  00263E  50E1               	movf	fsr1l,w,c
  2136  002640  E1FC               	bnz	clear_0
  2137  002642  50E2               	movf	fsr1h,w,c
  2138  002644  E1FA               	bnz	clear_0
  2139                           
  2140                           ; Clear objects allocated to COMRAM (15 bytes)
  2141  002646  EE00  F013         	lfsr	0,__pbssCOMRAM
  2142  00264A  0E0F               	movlw	15
  2143  00264C                     clear_1:
  2144  00264C  6AEE               	clrf	postinc0,c
  2145  00264E  06E8               	decf	wreg,f,c
  2146  002650  E1FD               	bnz	clear_1
  2147                           
  2148                           ; Initialize objects allocated to BIGRAM (2048 bytes)
  2149                           ; load TBLPTR registers with __pidataBIGRAM
  2150  002652  0E06               	movlw	low __pidataBIGRAM
  2151  002654  6EF6               	movwf	tblptrl,c
  2152  002656  0E10               	movlw	high __pidataBIGRAM
  2153  002658  6EF7               	movwf	tblptrh,c
  2154  00265A  0E00               	movlw	low (__pidataBIGRAM shr (0+16))
  2155  00265C  6EF8               	movwf	tblptru,c
  2156  00265E  EE02  F000         	lfsr	0,__pdataBIGRAM
  2157  002662  EE18 F000          	lfsr	1,2048
  2158  002666                     copy_data0:
  2159  002666  0009               	tblrd		*+
  2160  002668  CFF5 FFEE          	movff	tablat,postinc0
  2161  00266C  50E5               	movf	postdec1,w,c
  2162  00266E  50E1               	movf	fsr1l,w,c
  2163  002670  E1FA               	bnz	copy_data0
  2164  002672  50E2               	movf	fsr1h,w,c
  2165  002674  E1F8               	bnz	copy_data0
  2166  002676                     end_of_initialization:
  2167                           	opt stack 0
  2168  002676                     __end_of__initialization:
  2169                           	opt stack 0
  2170  002676  0100               	movlb	0
  2171  002678  EFE8  F012         	goto	_main	;jump to C main() function
  2172                           tblptru	equ	0xFF8
  2173                           tblptrh	equ	0xFF7
  2174                           tblptrl	equ	0xFF6
  2175                           tablat	equ	0xFF5
  2176                           postinc0	equ	0xFEE
  2177                           wreg	equ	0xFE8
  2178                           postdec1	equ	0xFE5
  2179                           fsr1h	equ	0xFE2
  2180                           fsr1l	equ	0xFE1
  2181                           
  2182                           	psect	bssCOMRAM
  2183  000013                     __pbssCOMRAM:
  2184                           	opt stack 0
  2185  000013                     wait_ms@timel:
  2186                           	opt stack 0
  2187  000013                     	ds	4
  2188  000017                     _regMX:
  2189                           	opt stack 0
  2190  000017                     	ds	2
  2191  000019                     _regPC:
  2192                           	opt stack 0
  2193  000019                     	ds	2
  2194  00001B                     _haltFlag:
  2195                           	opt stack 0
  2196  00001B                     	ds	1
  2197  00001C                     _immData_1:
  2198                           	opt stack 0
  2199  00001C                     	ds	1
  2200  00001D                     _immData_2:
  2201                           	opt stack 0
  2202  00001D                     	ds	1
  2203  00001E                     _regA:
  2204                           	opt stack 0
  2205  00001E                     	ds	1
  2206  00001F                     _regB:
  2207                           	opt stack 0
  2208  00001F                     	ds	1
  2209  000020                     _regF:
  2210                           	opt stack 0
  2211  000020                     	ds	1
  2212  000021                     _regSP:
  2213                           	opt stack 0
  2214  000021                     	ds	1
  2215                           tblptru	equ	0xFF8
  2216                           tblptrh	equ	0xFF7
  2217                           tblptrl	equ	0xFF6
  2218                           tablat	equ	0xFF5
  2219                           postinc0	equ	0xFEE
  2220                           wreg	equ	0xFE8
  2221                           postdec1	equ	0xFE5
  2222                           fsr1h	equ	0xFE2
  2223                           fsr1l	equ	0xFE1
  2224                           
  2225                           	psect	bssBANK1
  2226  000100                     __pbssBANK1:
  2227                           	opt stack 0
  2228  000100                     _stack:
  2229                           	opt stack 0
  2230  000100                     	ds	256
  2231                           tblptru	equ	0xFF8
  2232                           tblptrh	equ	0xFF7
  2233                           tblptrl	equ	0xFF6
  2234                           tablat	equ	0xFF5
  2235                           postinc0	equ	0xFEE
  2236                           wreg	equ	0xFE8
  2237                           postdec1	equ	0xFE5
  2238                           fsr1h	equ	0xFE2
  2239                           fsr1l	equ	0xFE1
  2240                           
  2241                           	psect	dataBIGRAM
  2242  000200                     __pdataBIGRAM:
  2243                           	opt stack 0
  2244  000200                     _virtualMemory:
  2245                           	opt stack 0
  2246  000200                     	ds	2048
  2247                           tblptru	equ	0xFF8
  2248                           tblptrh	equ	0xFF7
  2249                           tblptrl	equ	0xFF6
  2250                           tablat	equ	0xFF5
  2251                           postinc0	equ	0xFEE
  2252                           wreg	equ	0xFE8
  2253                           postdec1	equ	0xFE5
  2254                           fsr1h	equ	0xFE2
  2255                           fsr1l	equ	0xFE1
  2256                           
  2257                           	psect	cstackCOMRAM
  2258  000001                     __pcstackCOMRAM:
  2259                           	opt stack 0
  2260  000001                     ??_update_immData:
  2261  000001                     ?_immData_toPointer:
  2262                           	opt stack 0
  2263  000001                     hexToChar@number:
  2264                           	opt stack 0
  2265  000001                     setMXbits@value:
  2266                           	opt stack 0
  2267  000001                     getFbits@subRegister:
  2268                           	opt stack 0
  2269  000001                     setFbits@value:
  2270                           	opt stack 0
  2271  000001                     getPortData@portNumber:
  2272                           	opt stack 0
  2273  000001                     getMXbits@regMX_temp:
  2274                           	opt stack 0
  2275  000001                     enableSerial@baudRate:
  2276                           	opt stack 0
  2277                           
  2278                           ; 2 bytes @ 0x0
  2279  000001                     	ds	1
  2280  000002                     ??_setFbits:
  2281  000002                     dispSeg@letter:
  2282                           	opt stack 0
  2283  000002                     getFbits@regF_temp:
  2284                           	opt stack 0
  2285  000002                     setMXbits@value_temp:
  2286                           	opt stack 0
  2287                           
  2288                           ; 2 bytes @ 0x1
  2289  000002                     	ds	1
  2290  000003                     ??_enableSerial:
  2291  000003                     dispSeg@segment:
  2292                           	opt stack 0
  2293  000003                     getMXbits@subRegister:
  2294                           	opt stack 0
  2295  000003                     setFbits@subRegister:
  2296                           	opt stack 0
  2297  000003                     immData_toPointer@pointer:
  2298                           	opt stack 0
  2299                           
  2300                           ; 2 bytes @ 0x2
  2301  000003                     	ds	1
  2302  000004                     setFbits@regF_temp1:
  2303                           	opt stack 0
  2304  000004                     setMXbits@regMX_temp:
  2305                           	opt stack 0
  2306                           
  2307                           ; 2 bytes @ 0x3
  2308  000004                     	ds	1
  2309  000005                     setFbits@regF_temp2:
  2310                           	opt stack 0
  2311  000005                     setPortData@outputData:
  2312                           	opt stack 0
  2313                           
  2314                           ; 1 bytes @ 0x4
  2315  000005                     	ds	1
  2316  000006                     ??_initializeRegisters:
  2317  000006                     setMXbits@subRegister:
  2318                           	opt stack 0
  2319  000006                     setPortData@portNumber:
  2320                           	opt stack 0
  2321                           
  2322                           ; 1 bytes @ 0x5
  2323  000006                     	ds	1
  2324  000007                     setPortData@outputData_temp16:
  2325                           	opt stack 0
  2326                           
  2327                           ; 2 bytes @ 0x6
  2328  000007                     	ds	2
  2329  000009                     ??_processOpcode:
  2330                           
  2331                           ; 0 bytes @ 0x8
  2332  000009                     	ds	3
  2333  00000C                     processOpcode@regPC_temp:
  2334                           	opt stack 0
  2335                           
  2336                           ; 2 bytes @ 0xB
  2337  00000C                     	ds	2
  2338  00000E                     processOpcode@carriedBit:
  2339                           	opt stack 0
  2340                           
  2341                           ; 1 bytes @ 0xD
  2342  00000E                     	ds	1
  2343  00000F                     processOpcode@regA_temp8:
  2344                           	opt stack 0
  2345                           
  2346                           ; 1 bytes @ 0xE
  2347  00000F                     	ds	1
  2348  000010                     processOpcode@regA_temp16:
  2349                           	opt stack 0
  2350                           
  2351                           ; 2 bytes @ 0xF
  2352  000010                     	ds	2
  2353  000012                     ??_main:
  2354                           
  2355                           ; 0 bytes @ 0x11
  2356  000012                     	ds	1
  2357                           tblptru	equ	0xFF8
  2358                           tblptrh	equ	0xFF7
  2359                           tblptrl	equ	0xFF6
  2360                           tablat	equ	0xFF5
  2361                           postinc0	equ	0xFEE
  2362                           wreg	equ	0xFE8
  2363                           postdec1	equ	0xFE5
  2364                           fsr1h	equ	0xFE2
  2365                           fsr1l	equ	0xFE1
  2366                           
  2367 ;;
  2368 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  2369 ;;
  2370 ;; *************** function _main *****************
  2371 ;; Defined at:
  2372 ;;		line 19 in file "source/main.c"
  2373 ;; Parameters:    Size  Location     Type
  2374 ;;		None
  2375 ;; Auto vars:     Size  Location     Type
  2376 ;;		None
  2377 ;; Return value:  Size  Location     Type
  2378 ;;		None               void
  2379 ;; Registers used:
  2380 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2381 ;; Tracked objects:
  2382 ;;		On entry : 0/0
  2383 ;;		On exit  : 0/0
  2384 ;;		Unchanged: 0/0
  2385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2388 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2389 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2390 ;;Total ram usage:        1 bytes
  2391 ;; Hardware stack levels required when called:    3
  2392 ;; This function calls:
  2393 ;;		_dispSeg
  2394 ;;		_initOscillator
  2395 ;;		_initPorts
  2396 ;;		_initializeRegisters
  2397 ;;		_processOpcode
  2398 ;; This function is called by:
  2399 ;;		Startup code after reset
  2400 ;; This function uses a non-reentrant model
  2401 ;;
  2402                           
  2403                           	psect	text0
  2404  0025D0                     __ptext0:
  2405                           	opt stack 0
  2406  0025D0                     _main:
  2407                           	opt stack 27
  2408                           
  2409                           ;main.c: 22: initOscillator();
  2410                           
  2411                           ;incstack = 0
  2412  0025D0  ECA7  F013         	call	_initOscillator	;wreg free
  2413                           
  2414                           ;main.c: 23: initPorts();
  2415  0025D4  EC5C  F013         	call	_initPorts	;wreg free
  2416                           
  2417                           ;main.c: 24: dispSeg(1, '-'); dispSeg(2, '-');
  2418  0025D8  6E12               	movwf	??_main& (0+255),c
  2419  0025DA  0E2D               	movlw	45
  2420  0025DC  6E02               	movwf	dispSeg@letter,c
  2421  0025DE  5012               	movf	??_main& (0+255),w,c
  2422  0025E0  0E01               	movlw	1
  2423  0025E2  ECE5  F00F         	call	_dispSeg
  2424  0025E6  6E12               	movwf	??_main& (0+255),c
  2425  0025E8  0E2D               	movlw	45
  2426  0025EA  6E02               	movwf	dispSeg@letter,c
  2427  0025EC  5012               	movf	??_main& (0+255),w,c
  2428  0025EE  0E02               	movlw	2
  2429  0025F0  ECE5  F00F         	call	_dispSeg
  2430                           
  2431                           ;main.c: 26: initializeRegisters();
  2432  0025F4  ECB0  F012         	call	_initializeRegisters	;wreg free
  2433                           
  2434                           ;main.c: 28: while (haltFlag == 0)
  2435  0025F8  D00D               	goto	l1616
  2436  0025FA                     l1610:
  2437                           
  2438                           ;main.c: 29: {
  2439                           ;main.c: 30: if (regPC > 2047)
  2440  0025FA  0E00               	movlw	0
  2441  0025FC  5C19               	subwf	_regPC,w,c
  2442  0025FE  0E08               	movlw	8
  2443  002600  581A               	subwfb	_regPC+1,w,c
  2444  002602  A0D8               	btfss	status,0,c
  2445  002604  D005               	goto	l1614
  2446                           
  2447                           ;main.c: 31: {
  2448                           ;main.c: 32: regPC = 0;
  2449  002606  0E00               	movlw	0
  2450  002608  6E1A               	movwf	_regPC+1,c
  2451  00260A  0E00               	movlw	0
  2452  00260C  6E19               	movwf	_regPC,c
  2453                           
  2454                           ;main.c: 33: continue;
  2455  00260E  D002               	goto	l1616
  2456  002610                     l1614:
  2457                           
  2458                           ;main.c: 34: }
  2459                           ;main.c: 39: processOpcode();
  2460  002610  EC03  F00C         	call	_processOpcode	;wreg free
  2461  002614                     l1616:
  2462  002614  501B               	movf	_haltFlag,w,c
  2463  002616  B4D8               	btfsc	status,2,c
  2464  002618  D7F0               	goto	l1610
  2465                           
  2466                           ;main.c: 40: }
  2467                           ;main.c: 42: if (haltFlag == 1)
  2468  00261A  041B               	decf	_haltFlag,w,c
  2469  00261C  A4D8               	btfss	status,2,c
  2470  00261E  EF01  F000         	goto	start
  2471                           
  2472                           ;main.c: 43: {
  2473                           ;main.c: 44: dispSeg(2, '0');
  2474  002622  6E12               	movwf	??_main& (0+255),c
  2475  002624  0E30               	movlw	48
  2476  002626  6E02               	movwf	dispSeg@letter,c
  2477  002628  5012               	movf	??_main& (0+255),w,c
  2478  00262A  0E02               	movlw	2
  2479  00262C  ECE5  F00F         	call	_dispSeg
  2480  002630                     l38:
  2481  002630  D7FF               	goto	l38
  2482  002632                     __end_of_main:
  2483                           	opt stack 0
  2484                           tblptru	equ	0xFF8
  2485                           tblptrh	equ	0xFF7
  2486                           tblptrl	equ	0xFF6
  2487                           tablat	equ	0xFF5
  2488                           postinc0	equ	0xFEE
  2489                           wreg	equ	0xFE8
  2490                           postdec1	equ	0xFE5
  2491                           fsr1h	equ	0xFE2
  2492                           fsr1l	equ	0xFE1
  2493                           status	equ	0xFD8
  2494                           
  2495 ;; *************** function _processOpcode *****************
  2496 ;; Defined at:
  2497 ;;		line 240 in file "source/emulator.c"
  2498 ;; Parameters:    Size  Location     Type
  2499 ;;		None
  2500 ;; Auto vars:     Size  Location     Type
  2501 ;;  regA_temp16     2   15[COMRAM] unsigned int 
  2502 ;;  regPC_temp      2   11[COMRAM] unsigned int 
  2503 ;;  regA_temp8      1   14[COMRAM] unsigned char 
  2504 ;;  carriedBit      1   13[COMRAM] unsigned char 
  2505 ;; Return value:  Size  Location     Type
  2506 ;;		None               void
  2507 ;; Registers used:
  2508 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2509 ;; Tracked objects:
  2510 ;;		On entry : 0/0
  2511 ;;		On exit  : 0/0
  2512 ;;		Unchanged: 0/0
  2513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2515 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2516 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2517 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2518 ;;Total ram usage:        9 bytes
  2519 ;; Hardware stack levels used:    1
  2520 ;; Hardware stack levels required when called:    2
  2521 ;; This function calls:
  2522 ;;		_getFbits
  2523 ;;		_getMXbits
  2524 ;;		_getPortData
  2525 ;;		_immData_toPointer
  2526 ;;		_setFbits
  2527 ;;		_setMXbits
  2528 ;;		_setPortData
  2529 ;;		_update_immData
  2530 ;; This function is called by:
  2531 ;;		_main
  2532 ;; This function uses a non-reentrant model
  2533 ;;
  2534                           
  2535                           	psect	text1
  2536  001806                     __ptext1:
  2537                           	opt stack 0
  2538  001806                     _processOpcode:
  2539                           	opt stack 27
  2540                           
  2541                           ;emulator.c: 243: update_immData();
  2542                           
  2543                           ;incstack = 0
  2544  001806  EC20  F012         	call	_update_immData	;wreg free
  2545                           
  2546                           ;emulator.c: 246: uint8_t regA_temp8 = regA;
  2547  00180A  C01E  F00F         	movff	_regA,processOpcode@regA_temp8
  2548                           
  2549                           ;emulator.c: 247: uint16_t regA_temp16 = (uint16_t) regA;
  2550  00180E  C01E  F010         	movff	_regA,processOpcode@regA_temp16
  2551  001812  6A11               	clrf	processOpcode@regA_temp16+1,c
  2552                           
  2553                           ;emulator.c: 248: uint16_t regPC_temp = regPC;
  2554  001814  C019  F00C         	movff	_regPC,processOpcode@regPC_temp
  2555  001818  C01A  F00D         	movff	_regPC+1,processOpcode@regPC_temp+1
  2556                           
  2557                           ;emulator.c: 249: uint8_t carriedBit;
  2558                           ;emulator.c: 252: switch (virtualMemory[regPC])
  2559  00181C  D300               	goto	l1598
  2560  00181E                     l1320:
  2561                           
  2562                           ;emulator.c: 260: setFbits(0, 1);
  2563  00181E  6E09               	movwf	??_processOpcode& (0+255),c
  2564  001820  0E01               	movlw	1
  2565  001822  6E01               	movwf	setFbits@value,c
  2566  001824  5009               	movf	??_processOpcode& (0+255),w,c
  2567  001826  0E00               	movlw	0
  2568  001828  EC3E  F013         	call	_setFbits
  2569                           
  2570                           ;emulator.c: 261: break;
  2571  00182C  D3CB               	goto	l1600
  2572  00182E                     l1322:
  2573                           
  2574                           ;emulator.c: 264: setFbits(0, 0);
  2575  00182E  6E09               	movwf	??_processOpcode& (0+255),c
  2576  001830  0E00               	movlw	0
  2577  001832  6E01               	movwf	setFbits@value,c
  2578  001834  5009               	movf	??_processOpcode& (0+255),w,c
  2579  001836  0E00               	movlw	0
  2580  001838  EC3E  F013         	call	_setFbits
  2581                           
  2582                           ;emulator.c: 265: break;
  2583  00183C  D3C3               	goto	l1600
  2584  00183E                     l1324:
  2585                           
  2586                           ;emulator.c: 268: haltFlag = 1;
  2587  00183E  6E09               	movwf	??_processOpcode& (0+255),c
  2588  001840  0E01               	movlw	1
  2589  001842  6E1B               	movwf	_haltFlag,c
  2590  001844  5009               	movf	??_processOpcode& (0+255),w,c
  2591                           
  2592                           ;emulator.c: 269: break;
  2593  001846  D3BE               	goto	l1600
  2594  001848                     l1326:
  2595                           
  2596                           ;emulator.c: 275: regA = getPortData(regB);
  2597  001848  501F               	movf	_regB,w,c
  2598  00184A  ECB3  F013         	call	_getPortData
  2599  00184E  D1F0               	goto	L11
  2600  001850                     l1328:
  2601                           
  2602                           ;emulator.c: 279: regA = getPortData(immData_1);
  2603  001850  501C               	movf	_immData_1,w,c
  2604  001852  ECB3  F013         	call	_getPortData
  2605  001856  6E1E               	movwf	_regA,c
  2606  001858  D2AC               	goto	L20
  2607  00185A                     l1332:
  2608                           
  2609                           ;emulator.c: 284: setPortData(regB, regA);
  2610  00185A  C01E  F005         	movff	_regA,setPortData@outputData
  2611  00185E  501F               	movf	_regB,w,c
  2612  001860  ECD0  F011         	call	_setPortData
  2613                           
  2614                           ;emulator.c: 285: break;
  2615  001864  D3AF               	goto	l1600
  2616  001866                     l1334:
  2617                           
  2618                           ;emulator.c: 288: setPortData(immData_1, regA);
  2619  001866  C01E  F005         	movff	_regA,setPortData@outputData
  2620  00186A  501C               	movf	_immData_1,w,c
  2621  00186C  ECD0  F011         	call	_setPortData
  2622  001870  D2A0               	goto	L20
  2623  001872                     l1338:
  2624                           
  2625                           ;emulator.c: 293: setPortData(immData_1, immData_2);
  2626  001872  C01D  F005         	movff	_immData_2,setPortData@outputData
  2627  001876  501C               	movf	_immData_1,w,c
  2628  001878  ECD0  F011         	call	_setPortData
  2629  00187C  D11A               	goto	l1472
  2630  00187E                     l1342:
  2631                           
  2632                           ;emulator.c: 301: regA = virtualMemory[regMX];
  2633  00187E  0E00               	movlw	low _virtualMemory
  2634  001880  2417               	addwf	_regMX,w,c
  2635  001882  6ED9               	movwf	fsr2l,c
  2636  001884  0E02               	movlw	high _virtualMemory
  2637  001886  2018               	addwfc	_regMX+1,w,c
  2638  001888  D1D1               	goto	L26
  2639  00188A                     l1344:
  2640                           
  2641                           ;emulator.c: 305: regA = getMXbits(0);
  2642  00188A  0E00               	movlw	0
  2643  00188C  ECBE  F013         	call	_getMXbits
  2644  001890  D1CF               	goto	L11
  2645  001892                     l1346:
  2646                           
  2647                           ;emulator.c: 309: regA = getMXbits(1);
  2648  001892  0E01               	movlw	1
  2649  001894  ECBE  F013         	call	_getMXbits
  2650  001898  D1CB               	goto	L11
  2651  00189A                     l264:
  2652                           
  2653                           ;emulator.c: 313: regA = regSP;
  2654  00189A  C021  F01E         	movff	_regSP,_regA
  2655                           
  2656                           ;emulator.c: 314: break;
  2657  00189E  D392               	goto	l1600
  2658  0018A0                     l265:
  2659                           
  2660                           ;emulator.c: 317: regA = regF;
  2661  0018A0  C020  F01E         	movff	_regF,_regA
  2662                           
  2663                           ;emulator.c: 318: break;
  2664  0018A4  D38F               	goto	l1600
  2665  0018A6                     l266:
  2666                           
  2667                           ;emulator.c: 321: regA = regB;
  2668  0018A6  C01F  F01E         	movff	_regB,_regA
  2669                           
  2670                           ;emulator.c: 322: break;
  2671  0018AA  D38C               	goto	l1600
  2672  0018AC                     l1348:
  2673                           
  2674                           ;emulator.c: 334: virtualMemory[regMX] = regA;
  2675  0018AC  0E00               	movlw	low _virtualMemory
  2676  0018AE  2417               	addwf	_regMX,w,c
  2677  0018B0  6ED9               	movwf	fsr2l,c
  2678  0018B2  0E02               	movlw	high _virtualMemory
  2679  0018B4  2018               	addwfc	_regMX+1,w,c
  2680  0018B6  6EDA               	movwf	fsr2h,c
  2681  0018B8  C01E  FFDF         	movff	_regA,indf2
  2682                           
  2683                           ;emulator.c: 336: break;
  2684  0018BC  D383               	goto	l1600
  2685  0018BE                     l1350:
  2686                           
  2687                           ;emulator.c: 339: setMXbits(0, regA);
  2688  0018BE  C01E  F001         	movff	_regA,setMXbits@value
  2689  0018C2  0E00               	movlw	0
  2690  0018C4  EC74  F013         	call	_setMXbits
  2691                           
  2692                           ;emulator.c: 340: break;
  2693  0018C8  D37D               	goto	l1600
  2694  0018CA                     l1352:
  2695                           
  2696                           ;emulator.c: 343: setMXbits(1, regA);
  2697  0018CA  C01E  F001         	movff	_regA,setMXbits@value
  2698  0018CE  0E01               	movlw	1
  2699  0018D0  EC74  F013         	call	_setMXbits
  2700                           
  2701                           ;emulator.c: 344: break;
  2702  0018D4  D377               	goto	l1600
  2703  0018D6                     l270:
  2704                           
  2705                           ;emulator.c: 347: regSP = regA;
  2706  0018D6  C01E  F021         	movff	_regA,_regSP
  2707                           
  2708                           ;emulator.c: 348: break;
  2709  0018DA  D374               	goto	l1600
  2710  0018DC                     l271:
  2711                           
  2712                           ;emulator.c: 351: regB = regA;
  2713  0018DC  C01E  F01F         	movff	_regA,_regB
  2714                           
  2715                           ;emulator.c: 352: break;
  2716  0018E0  D371               	goto	l1600
  2717  0018E2                     l272:
  2718                           
  2719                           ;emulator.c: 355: regA = immData_1;
  2720  0018E2  C01C  F01E         	movff	_immData_1,_regA
  2721  0018E6  D265               	goto	L20
  2722  0018E8                     l273:
  2723                           
  2724                           ;emulator.c: 361: regA_temp8 = regA;
  2725  0018E8  C01E  F00F         	movff	_regA,processOpcode@regA_temp8
  2726                           
  2727                           ;emulator.c: 362: regA = regB;
  2728  0018EC  C01F  F01E         	movff	_regB,_regA
  2729                           
  2730                           ;emulator.c: 363: regB = regA_temp8;
  2731  0018F0  C00F  F01F         	movff	processOpcode@regA_temp8,_regB
  2732                           
  2733                           ;emulator.c: 364: break;
  2734  0018F4  D367               	goto	l1600
  2735  0018F6                     l1356:
  2736                           
  2737                           ;emulator.c: 370: regA &= regB;
  2738  0018F6  501F               	movf	_regB,w,c
  2739  0018F8  161E               	andwf	_regA,f,c
  2740                           
  2741                           ;emulator.c: 371: break;
  2742  0018FA  D364               	goto	l1600
  2743  0018FC                     l1358:
  2744                           
  2745                           ;emulator.c: 375: regA = regA & regB;
  2746  0018FC  501E               	movf	_regA,w,c
  2747  0018FE  141F               	andwf	_regB,w,c
  2748  001900  D00B               	goto	L10
  2749  001902                     l1362:
  2750                           
  2751                           ;emulator.c: 380: regA |= regB;
  2752  001902  501F               	movf	_regB,w,c
  2753  001904  121E               	iorwf	_regA,f,c
  2754                           
  2755                           ;emulator.c: 381: break;
  2756  001906  D35E               	goto	l1600
  2757  001908                     l1364:
  2758                           
  2759                           ;emulator.c: 385: regA = regA | regB;
  2760  001908  501E               	movf	_regA,w,c
  2761  00190A  101F               	iorwf	_regB,w,c
  2762  00190C  D005               	goto	L10
  2763  00190E                     l1368:
  2764                           
  2765                           ;emulator.c: 390: regA ^= regB;
  2766  00190E  501F               	movf	_regB,w,c
  2767  001910  1A1E               	xorwf	_regA,f,c
  2768                           
  2769                           ;emulator.c: 391: break;
  2770  001912  D358               	goto	l1600
  2771  001914                     l1370:
  2772                           
  2773                           ;emulator.c: 395: regA = regA ^ regB;
  2774  001914  501E               	movf	_regA,w,c
  2775  001916  181F               	xorwf	_regB,w,c
  2776  001918                     L10:
  2777  001918  6E1E               	movwf	_regA,c
  2778  00191A                     l1374:
  2779                           
  2780                           ;emulator.c: 400: regA =~ regA;
  2781  00191A  1E1E               	comf	_regA,f,c
  2782                           
  2783                           ;emulator.c: 401: break;
  2784  00191C  D353               	goto	l1600
  2785  00191E                     l281:
  2786                           
  2787                           ;emulator.c: 405: regA_temp8 = regA;
  2788  00191E  C01E  F00F         	movff	_regA,processOpcode@regA_temp8
  2789                           
  2790                           ;emulator.c: 407: if (regA_temp8 == 1) setFbits(0, 1);
  2791  001922  040F               	decf	processOpcode@regA_temp8,w,c
  2792  001924  A4D8               	btfss	status,2,c
  2793  001926  D008               	goto	l1380
  2794  001928  6E09               	movwf	??_processOpcode& (0+255),c
  2795  00192A  0E01               	movlw	1
  2796  00192C  6E01               	movwf	setFbits@value,c
  2797  00192E  5009               	movf	??_processOpcode& (0+255),w,c
  2798  001930  0E00               	movlw	0
  2799  001932  EC3E  F013         	call	_setFbits
  2800  001936  D346               	goto	l1600
  2801  001938                     l1380:
  2802                           
  2803                           ;emulator.c: 408: else setFbits(0, 0);
  2804  001938  6E09               	movwf	??_processOpcode& (0+255),c
  2805  00193A  0E00               	movlw	0
  2806  00193C  6E01               	movwf	setFbits@value,c
  2807  00193E  5009               	movf	??_processOpcode& (0+255),w,c
  2808  001940  0E00               	movlw	0
  2809  001942  EC3E  F013         	call	_setFbits
  2810  001946  D33E               	goto	l1600
  2811  001948                     l284:
  2812                           
  2813                           ;emulator.c: 416: regA_temp8 = regA;
  2814  001948  C01E  F00F         	movff	_regA,processOpcode@regA_temp8
  2815                           
  2816                           ;emulator.c: 419: if (regA_temp8 == 1) setFbits(0, 1);
  2817  00194C  040F               	decf	processOpcode@regA_temp8,w,c
  2818  00194E  A4D8               	btfss	status,2,c
  2819  001950  D008               	goto	l1386
  2820  001952  6E09               	movwf	??_processOpcode& (0+255),c
  2821  001954  0E01               	movlw	1
  2822  001956  6E01               	movwf	setFbits@value,c
  2823  001958  5009               	movf	??_processOpcode& (0+255),w,c
  2824  00195A  0E00               	movlw	0
  2825  00195C  EC3E  F013         	call	_setFbits
  2826  001960  D331               	goto	l1600
  2827  001962                     l1386:
  2828                           
  2829                           ;emulator.c: 420: else setFbits(0, 0);
  2830  001962  6E09               	movwf	??_processOpcode& (0+255),c
  2831  001964  0E00               	movlw	0
  2832  001966  6E01               	movwf	setFbits@value,c
  2833  001968  5009               	movf	??_processOpcode& (0+255),w,c
  2834  00196A  0E00               	movlw	0
  2835  00196C  EC3E  F013         	call	_setFbits
  2836  001970  D329               	goto	l1600
  2837  001972                     l287:
  2838                           
  2839                           ;emulator.c: 428: carriedBit = regA;
  2840  001972  C01E  F00E         	movff	_regA,processOpcode@carriedBit
  2841                           
  2842                           ;emulator.c: 435: regA = regA + carriedBit;
  2843  001976  501E               	movf	_regA,w,c
  2844  001978  240E               	addwf	processOpcode@carriedBit,w,c
  2845  00197A  D15A               	goto	L11
  2846  00197C                     l288:
  2847                           
  2848                           ;emulator.c: 440: carriedBit = regA;
  2849  00197C  C01E  F00E         	movff	_regA,processOpcode@carriedBit
  2850                           
  2851                           ;emulator.c: 447: regA += carriedBit;
  2852  001980  500E               	movf	processOpcode@carriedBit,w,c
  2853  001982  D1B4               	goto	L12
  2854  001984                     l1392:
  2855                           
  2856                           ;emulator.c: 452: if (regA == regB) setFbits(3, 1);
  2857  001984  501F               	movf	_regB,w,c
  2858  001986  621E               	cpfseq	_regA,c
  2859  001988  D008               	goto	l1396
  2860  00198A  6E09               	movwf	??_processOpcode& (0+255),c
  2861  00198C  0E01               	movlw	1
  2862  00198E  6E01               	movwf	setFbits@value,c
  2863  001990  5009               	movf	??_processOpcode& (0+255),w,c
  2864  001992  0E03               	movlw	3
  2865  001994  EC3E  F013         	call	_setFbits
  2866  001998  D007               	goto	l1398
  2867  00199A                     l1396:
  2868                           
  2869                           ;emulator.c: 453: else setFbits(3, 0);
  2870  00199A  6E09               	movwf	??_processOpcode& (0+255),c
  2871  00199C  0E00               	movlw	0
  2872  00199E  6E01               	movwf	setFbits@value,c
  2873  0019A0  5009               	movf	??_processOpcode& (0+255),w,c
  2874  0019A2  0E03               	movlw	3
  2875  0019A4  EC3E  F013         	call	_setFbits
  2876  0019A8                     l1398:
  2877                           
  2878                           ;emulator.c: 456: if (regA < regB) setFbits(2, 1);
  2879  0019A8  501F               	movf	_regB,w,c
  2880  0019AA  5C1E               	subwf	_regA,w,c
  2881  0019AC  B0D8               	btfsc	status,0,c
  2882  0019AE  D008               	goto	l1402
  2883  0019B0  6E09               	movwf	??_processOpcode& (0+255),c
  2884  0019B2  0E01               	movlw	1
  2885  0019B4  6E01               	movwf	setFbits@value,c
  2886  0019B6  5009               	movf	??_processOpcode& (0+255),w,c
  2887  0019B8  0E02               	movlw	2
  2888  0019BA  EC3E  F013         	call	_setFbits
  2889  0019BE  D007               	goto	l1404
  2890  0019C0                     l1402:
  2891                           
  2892                           ;emulator.c: 457: else setFbits(2, 0);
  2893  0019C0  6E09               	movwf	??_processOpcode& (0+255),c
  2894  0019C2  0E00               	movlw	0
  2895  0019C4  6E01               	movwf	setFbits@value,c
  2896  0019C6  5009               	movf	??_processOpcode& (0+255),w,c
  2897  0019C8  0E02               	movlw	2
  2898  0019CA  EC3E  F013         	call	_setFbits
  2899  0019CE                     l1404:
  2900                           
  2901                           ;emulator.c: 460: if (regA > regB) setFbits(1, 1);
  2902  0019CE  501E               	movf	_regA,w,c
  2903  0019D0  5C1F               	subwf	_regB,w,c
  2904  0019D2  B0D8               	btfsc	status,0,c
  2905  0019D4  D008               	goto	l1408
  2906  0019D6  6E09               	movwf	??_processOpcode& (0+255),c
  2907  0019D8  0E01               	movlw	1
  2908  0019DA  6E01               	movwf	setFbits@value,c
  2909  0019DC  5009               	movf	??_processOpcode& (0+255),w,c
  2910  0019DE  0E01               	movlw	1
  2911  0019E0  EC3E  F013         	call	_setFbits
  2912  0019E4  D2EF               	goto	l1600
  2913  0019E6                     l1408:
  2914                           
  2915                           ;emulator.c: 461: else setFbits(1, 0);
  2916  0019E6  6E09               	movwf	??_processOpcode& (0+255),c
  2917  0019E8  0E00               	movlw	0
  2918  0019EA  6E01               	movwf	setFbits@value,c
  2919  0019EC  5009               	movf	??_processOpcode& (0+255),w,c
  2920  0019EE  0E01               	movlw	1
  2921  0019F0  EC3E  F013         	call	_setFbits
  2922  0019F4  D2E7               	goto	l1600
  2923  0019F6                     l1410:
  2924                           
  2925                           ;emulator.c: 473: regPC = immData_toPointer();
  2926  0019F6  EC9B  F013         	call	_immData_toPointer	;wreg free
  2927  0019FA  D011               	goto	L28
  2928  0019FC                     l1414:
  2929                           
  2930                           ;emulator.c: 478: if (getFbits(3) == 1) regPC = regMX;
  2931  0019FC  0E03               	movlw	3
  2932  0019FE  EC88  F013         	call	_getFbits
  2933  001A02                     L22:
  2934  001A02  6E09               	movwf	??_processOpcode& (0+255),c
  2935  001A04  0409               	decf	??_processOpcode,w,c
  2936  001A06                     L21:
  2937  001A06  A4D8               	btfss	status,2,c
  2938  001A08  D2DD               	goto	l1600
  2939  001A0A  D066               	goto	L13
  2940  001A0C                     l1418:
  2941                           
  2942                           ;emulator.c: 482: if (getFbits(3) == 1) regPC = immData_toPointer();
  2943  001A0C  0E03               	movlw	3
  2944  001A0E  EC88  F013         	call	_getFbits
  2945  001A12  6E09               	movwf	??_processOpcode& (0+255),c
  2946  001A14  0409               	decf	??_processOpcode,w,c
  2947  001A16  A4D8               	btfss	status,2,c
  2948  001A18  D04C               	goto	l1472
  2949  001A1A  EC9B  F013         	call	_immData_toPointer	;wreg free
  2950  001A1E                     L28:
  2951  001A1E  C001  F019         	movff	?_immData_toPointer,_regPC
  2952  001A22  C002  F01A         	movff	?_immData_toPointer+1,_regPC+1
  2953  001A26  D045               	goto	l1472
  2954  001A28                     l1424:
  2955                           
  2956                           ;emulator.c: 487: if (getFbits(3) == 0) regPC = regMX;
  2957  001A28  0E03               	movlw	3
  2958  001A2A  EC88  F013         	call	_getFbits
  2959  001A2E  D036               	goto	L24
  2960  001A30                     l1428:
  2961                           
  2962                           ;emulator.c: 491: if (getFbits(3) == 0) regPC = immData_toPointer();
  2963  001A30  0E03               	movlw	3
  2964  001A32  EC88  F013         	call	_getFbits
  2965  001A36  0900               	iorlw	0
  2966  001A38  A4D8               	btfss	status,2,c
  2967  001A3A  D03B               	goto	l1472
  2968  001A3C  EC9B  F013         	call	_immData_toPointer	;wreg free
  2969  001A40  D7EE               	goto	L28
  2970  001A42                     l1434:
  2971                           
  2972                           ;emulator.c: 496: if (getFbits(1) == 1) regPC = regMX;
  2973  001A42  0E01               	movlw	1
  2974  001A44  EC88  F013         	call	_getFbits
  2975  001A48  D7DC               	goto	L22
  2976  001A4A                     l1438:
  2977                           
  2978                           ;emulator.c: 500: if (getFbits(1) == 1) regPC = immData_toPointer();
  2979  001A4A  0E01               	movlw	1
  2980  001A4C  EC88  F013         	call	_getFbits
  2981  001A50  6E09               	movwf	??_processOpcode& (0+255),c
  2982  001A52  0409               	decf	??_processOpcode,w,c
  2983  001A54  A4D8               	btfss	status,2,c
  2984  001A56  D02D               	goto	l1472
  2985  001A58  EC9B  F013         	call	_immData_toPointer	;wreg free
  2986  001A5C  D7E0               	goto	L28
  2987  001A5E                     l1444:
  2988                           
  2989                           ;emulator.c: 505: if (getFbits(2) == 1) regPC = regMX;
  2990  001A5E  0E02               	movlw	2
  2991  001A60  EC88  F013         	call	_getFbits
  2992  001A64  D7CE               	goto	L22
  2993  001A66                     l1448:
  2994                           
  2995                           ;emulator.c: 509: if (getFbits(2) == 1) regPC = immData_toPointer();
  2996  001A66  0E02               	movlw	2
  2997  001A68  EC88  F013         	call	_getFbits
  2998  001A6C  6E09               	movwf	??_processOpcode& (0+255),c
  2999  001A6E  0409               	decf	??_processOpcode,w,c
  3000  001A70  A4D8               	btfss	status,2,c
  3001  001A72  D01F               	goto	l1472
  3002  001A74  EC9B  F013         	call	_immData_toPointer	;wreg free
  3003  001A78  D7D2               	goto	L28
  3004  001A7A                     l1454:
  3005                           
  3006                           ;emulator.c: 514: if (getFbits(0) == 1) regPC = regMX;
  3007  001A7A  0E00               	movlw	0
  3008  001A7C  EC88  F013         	call	_getFbits
  3009  001A80  D7C0               	goto	L22
  3010  001A82                     l1458:
  3011                           
  3012                           ;emulator.c: 518: if (getFbits(0) == 1) regPC = immData_toPointer();
  3013  001A82  0E00               	movlw	0
  3014  001A84  EC88  F013         	call	_getFbits
  3015  001A88  6E09               	movwf	??_processOpcode& (0+255),c
  3016  001A8A  0409               	decf	??_processOpcode,w,c
  3017  001A8C  A4D8               	btfss	status,2,c
  3018  001A8E  D011               	goto	l1472
  3019  001A90  EC9B  F013         	call	_immData_toPointer	;wreg free
  3020  001A94  D7C4               	goto	L28
  3021  001A96                     l1464:
  3022                           
  3023                           ;emulator.c: 523: if (getFbits(0) == 0) regPC = regMX;
  3024  001A96  0E00               	movlw	0
  3025  001A98  EC88  F013         	call	_getFbits
  3026  001A9C                     L24:
  3027  001A9C  0900               	iorlw	0
  3028  001A9E  D7B3               	goto	L21
  3029  001AA0                     l1468:
  3030                           
  3031                           ;emulator.c: 527: if (getFbits(0) == 0) regPC = immData_toPointer();
  3032  001AA0  0E00               	movlw	0
  3033  001AA2  EC88  F013         	call	_getFbits
  3034  001AA6  0900               	iorlw	0
  3035  001AA8  A4D8               	btfss	status,2,c
  3036  001AAA  D003               	goto	l1472
  3037  001AAC  EC9B  F013         	call	_immData_toPointer	;wreg free
  3038  001AB0  D7B6               	goto	L28
  3039  001AB2                     l1472:
  3040                           
  3041                           ;emulator.c: 528: regPC += 2;
  3042  001AB2  0E02               	movlw	2
  3043  001AB4  2619               	addwf	_regPC,f,c
  3044  001AB6  0E00               	movlw	0
  3045  001AB8  221A               	addwfc	_regPC+1,f,c
  3046                           
  3047                           ;emulator.c: 529: break;
  3048  001ABA  D284               	goto	l1600
  3049  001ABC                     l1474:
  3050                           
  3051                           ;emulator.c: 533: stack[regSP] = regPC;
  3052  001ABC  5021               	movf	_regSP,w,c
  3053  001ABE  0D01               	mullw	1
  3054  001AC0  0101               	movlb	1	; () banked
  3055  001AC2  0E00               	movlw	low _stack
  3056  001AC4  24F3               	addwf	prodl,w,c
  3057  001AC6  6ED9               	movwf	fsr2l,c
  3058  001AC8  0101               	movlb	1	; () banked
  3059  001ACA  0E01               	movlw	high _stack
  3060  001ACC  20F4               	addwfc	prodh,w,c
  3061  001ACE  6EDA               	movwf	fsr2h,c
  3062  001AD0  C019  FFDF         	movff	_regPC,indf2
  3063                           
  3064                           ; BSR set to: 1
  3065                           ;emulator.c: 534: regSP += 2;
  3066  001AD4  0E02               	movlw	2
  3067  001AD6  2621               	addwf	_regSP,f,c
  3068  001AD8                     L13:
  3069                           
  3070                           ; BSR set to: 1
  3071                           ;emulator.c: 535: regPC = regMX;
  3072  001AD8  C017  F019         	movff	_regMX,_regPC
  3073  001ADC  C018  F01A         	movff	_regMX+1,_regPC+1
  3074                           
  3075                           ;emulator.c: 536: break;
  3076  001AE0  D271               	goto	l1600
  3077  001AE2                     l1480:
  3078                           
  3079                           ;emulator.c: 540: stack[regSP] = regPC;
  3080  001AE2  5021               	movf	_regSP,w,c
  3081  001AE4  0D01               	mullw	1
  3082  001AE6  0101               	movlb	1	; () banked
  3083  001AE8  0E00               	movlw	low _stack
  3084  001AEA  24F3               	addwf	prodl,w,c
  3085  001AEC  6ED9               	movwf	fsr2l,c
  3086  001AEE  0101               	movlb	1	; () banked
  3087  001AF0  0E01               	movlw	high _stack
  3088  001AF2  20F4               	addwfc	prodh,w,c
  3089  001AF4  6EDA               	movwf	fsr2h,c
  3090  001AF6  C019  FFDF         	movff	_regPC,indf2
  3091                           
  3092                           ; BSR set to: 1
  3093                           ;emulator.c: 541: regSP += 2;
  3094  001AFA  0E02               	movlw	2
  3095  001AFC  2621               	addwf	_regSP,f,c
  3096                           
  3097                           ; BSR set to: 1
  3098                           ;emulator.c: 542: regPC = immData_toPointer();
  3099  001AFE  EC9B  F013         	call	_immData_toPointer	;wreg free
  3100  001B02  D78D               	goto	L28
  3101  001B04                     l1488:
  3102                           
  3103                           ;emulator.c: 548: regSP -= 2;
  3104  001B04  0E02               	movlw	2
  3105  001B06  5E21               	subwf	_regSP,f,c
  3106                           
  3107                           ;emulator.c: 550: regPC_temp = (uint16_t) stack[regSP];
  3108  001B08  5021               	movf	_regSP,w,c
  3109  001B0A  0D01               	mullw	1
  3110  001B0C  0101               	movlb	1	; () banked
  3111  001B0E  0E00               	movlw	low _stack
  3112  001B10  24F3               	addwf	prodl,w,c
  3113  001B12  6ED9               	movwf	fsr2l,c
  3114  001B14  0101               	movlb	1	; () banked
  3115  001B16  0E01               	movlw	high _stack
  3116  001B18  20F4               	addwfc	prodh,w,c
  3117  001B1A  6EDA               	movwf	fsr2h,c
  3118  001B1C  50DF               	movf	indf2,w,c
  3119  001B1E  6E09               	movwf	??_processOpcode& (0+255),c
  3120  001B20  5009               	movf	??_processOpcode,w,c
  3121  001B22  6E0C               	movwf	processOpcode@regPC_temp,c
  3122  001B24  6A0D               	clrf	processOpcode@regPC_temp+1,c
  3123                           
  3124                           ; BSR set to: 1
  3125                           ;emulator.c: 552: regPC += regPC_temp + (uint16_t) stack[regSP];
  3126  001B26  5021               	movf	_regSP,w,c
  3127  001B28  0D01               	mullw	1
  3128  001B2A  0101               	movlb	1	; () banked
  3129  001B2C  0E00               	movlw	low _stack
  3130  001B2E  24F3               	addwf	prodl,w,c
  3131  001B30  6ED9               	movwf	fsr2l,c
  3132  001B32  0101               	movlb	1	; () banked
  3133  001B34  0E01               	movlw	high _stack
  3134  001B36  20F4               	addwfc	prodh,w,c
  3135  001B38  6EDA               	movwf	fsr2h,c
  3136  001B3A  50DF               	movf	indf2,w,c
  3137  001B3C  6E09               	movwf	??_processOpcode& (0+255),c
  3138  001B3E  5009               	movf	??_processOpcode,w,c
  3139  001B40  240C               	addwf	processOpcode@regPC_temp,w,c
  3140  001B42  6E0A               	movwf	(??_processOpcode+1)& (0+255),c
  3141  001B44  0E00               	movlw	0
  3142  001B46  200D               	addwfc	processOpcode@regPC_temp+1,w,c
  3143  001B48  6E0B               	movwf	(??_processOpcode+2)& (0+255),c
  3144  001B4A  500A               	movf	??_processOpcode+1,w,c
  3145  001B4C  2619               	addwf	_regPC,f,c
  3146  001B4E  500B               	movf	??_processOpcode+2,w,c
  3147  001B50  D7B3               	goto	L15
  3148  001B52                     l1494:
  3149                           
  3150                           ;emulator.c: 560: stack[regSP] = regA;
  3151  001B52  5021               	movf	_regSP,w,c
  3152  001B54  0D01               	mullw	1
  3153  001B56  0101               	movlb	1	; () banked
  3154  001B58  0E00               	movlw	low _stack
  3155  001B5A  24F3               	addwf	prodl,w,c
  3156  001B5C  6ED9               	movwf	fsr2l,c
  3157  001B5E  0101               	movlb	1	; () banked
  3158  001B60  0E01               	movlw	high _stack
  3159  001B62  20F4               	addwfc	prodh,w,c
  3160  001B64  6EDA               	movwf	fsr2h,c
  3161  001B66  C01E  FFDF         	movff	_regA,indf2
  3162  001B6A  D02A               	goto	L17
  3163  001B6C                     l1498:
  3164                           
  3165                           ;emulator.c: 566: stack[regSP] = regB;
  3166  001B6C  5021               	movf	_regSP,w,c
  3167  001B6E  0D01               	mullw	1
  3168  001B70  0101               	movlb	1	; () banked
  3169  001B72  0E00               	movlw	low _stack
  3170  001B74  24F3               	addwf	prodl,w,c
  3171  001B76  6ED9               	movwf	fsr2l,c
  3172  001B78  0101               	movlb	1	; () banked
  3173  001B7A  0E01               	movlw	high _stack
  3174  001B7C  20F4               	addwfc	prodh,w,c
  3175  001B7E  6EDA               	movwf	fsr2h,c
  3176  001B80  C01F  FFDF         	movff	_regB,indf2
  3177  001B84  D01D               	goto	L17
  3178  001B86                     l1502:
  3179                           
  3180                           ;emulator.c: 572: stack[regSP] = regMX;
  3181  001B86  5021               	movf	_regSP,w,c
  3182  001B88  0D01               	mullw	1
  3183  001B8A  0101               	movlb	1	; () banked
  3184  001B8C  0E00               	movlw	low _stack
  3185  001B8E  24F3               	addwf	prodl,w,c
  3186  001B90  6ED9               	movwf	fsr2l,c
  3187  001B92  0101               	movlb	1	; () banked
  3188  001B94  0E01               	movlw	high _stack
  3189  001B96  20F4               	addwfc	prodh,w,c
  3190  001B98  6EDA               	movwf	fsr2h,c
  3191  001B9A  C017  FFDF         	movff	_regMX,indf2
  3192                           
  3193                           ; BSR set to: 1
  3194                           ;emulator.c: 573: regSP += 2;
  3195  001B9E  0E02               	movlw	2
  3196  001BA0  2621               	addwf	_regSP,f,c
  3197                           
  3198                           ;emulator.c: 574: break;
  3199  001BA2  D210               	goto	l1600
  3200  001BA4                     l1506:
  3201                           
  3202                           ;emulator.c: 578: stack[regSP] = getMXbits(0);
  3203  001BA4  5021               	movf	_regSP,w,c
  3204  001BA6  0D01               	mullw	1
  3205  001BA8  0101               	movlb	1	; () banked
  3206  001BAA  0E00               	movlw	low _stack
  3207  001BAC  24F3               	addwf	prodl,w,c
  3208  001BAE  6ED9               	movwf	fsr2l,c
  3209  001BB0  0101               	movlb	1	; () banked
  3210  001BB2  0E01               	movlw	high _stack
  3211  001BB4  20F4               	addwfc	prodh,w,c
  3212  001BB6  6EDA               	movwf	fsr2h,c
  3213  001BB8  0E00               	movlw	0
  3214  001BBA  ECBE  F013         	call	_getMXbits
  3215  001BBE  D00F               	goto	L18
  3216  001BC0                     L17:
  3217                           
  3218                           ;emulator.c: 579: regSP++;
  3219  001BC0  2A21               	incf	_regSP,f,c
  3220                           
  3221                           ;emulator.c: 580: break;
  3222  001BC2  D200               	goto	l1600
  3223  001BC4                     l1510:
  3224                           
  3225                           ;emulator.c: 584: stack[regSP] = getMXbits(1);
  3226  001BC4  5021               	movf	_regSP,w,c
  3227  001BC6  0D01               	mullw	1
  3228  001BC8  0101               	movlb	1	; () banked
  3229  001BCA  0E00               	movlw	low _stack
  3230  001BCC  24F3               	addwf	prodl,w,c
  3231  001BCE  6ED9               	movwf	fsr2l,c
  3232  001BD0  0101               	movlb	1	; () banked
  3233  001BD2  0E01               	movlw	high _stack
  3234  001BD4  20F4               	addwfc	prodh,w,c
  3235  001BD6  6EDA               	movwf	fsr2h,c
  3236  001BD8  0E01               	movlw	1
  3237  001BDA  ECBE  F013         	call	_getMXbits
  3238  001BDE                     L18:
  3239  001BDE  6EDF               	movwf	indf2,c
  3240  001BE0  D7EF               	goto	L17
  3241  001BE2                     l1514:
  3242                           
  3243                           ;emulator.c: 590: stack[regSP] = regF;
  3244  001BE2  5021               	movf	_regSP,w,c
  3245  001BE4  0D01               	mullw	1
  3246  001BE6  0101               	movlb	1	; () banked
  3247  001BE8  0E00               	movlw	low _stack
  3248  001BEA  24F3               	addwf	prodl,w,c
  3249  001BEC  6ED9               	movwf	fsr2l,c
  3250  001BEE  0101               	movlb	1	; () banked
  3251  001BF0  0E01               	movlw	high _stack
  3252  001BF2  20F4               	addwfc	prodh,w,c
  3253  001BF4  6EDA               	movwf	fsr2h,c
  3254  001BF6  C020  FFDF         	movff	_regF,indf2
  3255  001BFA  D7E2               	goto	L17
  3256  001BFC                     l1518:
  3257                           
  3258                           ;emulator.c: 596: stack[regSP] = immData_1;
  3259  001BFC  5021               	movf	_regSP,w,c
  3260  001BFE  0D01               	mullw	1
  3261  001C00  0101               	movlb	1	; () banked
  3262  001C02  0E00               	movlw	low _stack
  3263  001C04  24F3               	addwf	prodl,w,c
  3264  001C06  6ED9               	movwf	fsr2l,c
  3265  001C08  0101               	movlb	1	; () banked
  3266  001C0A  0E01               	movlw	high _stack
  3267  001C0C  20F4               	addwfc	prodh,w,c
  3268  001C0E  6EDA               	movwf	fsr2h,c
  3269  001C10  C01C  FFDF         	movff	_immData_1,indf2
  3270                           
  3271                           ; BSR set to: 1
  3272                           ;emulator.c: 597: regSP++;
  3273  001C14  2A21               	incf	_regSP,f,c
  3274  001C16  D0CD               	goto	L20
  3275  001C18                     l1524:
  3276                           
  3277                           ;emulator.c: 602: regSP--;
  3278  001C18  0621               	decf	_regSP,f,c
  3279                           
  3280                           ;emulator.c: 604: regA = stack[regSP];
  3281  001C1A  5021               	movf	_regSP,w,c
  3282  001C1C  0D01               	mullw	1
  3283  001C1E  0101               	movlb	1	; () banked
  3284  001C20  0E00               	movlw	low _stack
  3285  001C22  24F3               	addwf	prodl,w,c
  3286  001C24  6ED9               	movwf	fsr2l,c
  3287  001C26  0101               	movlb	1	; () banked
  3288  001C28  0E01               	movlw	high _stack
  3289  001C2A  20F4               	addwfc	prodh,w,c
  3290  001C2C                     L26:
  3291  001C2C  6EDA               	movwf	fsr2h,c
  3292  001C2E  50DF               	movf	indf2,w,c
  3293  001C30                     L11:
  3294  001C30  6E1E               	movwf	_regA,c
  3295                           
  3296                           ;emulator.c: 605: break;
  3297  001C32  D1C8               	goto	l1600
  3298  001C34                     l1528:
  3299                           
  3300                           ;emulator.c: 608: regSP--;
  3301  001C34  0621               	decf	_regSP,f,c
  3302                           
  3303                           ;emulator.c: 610: regB = stack[regSP];
  3304  001C36  5021               	movf	_regSP,w,c
  3305  001C38  0D01               	mullw	1
  3306  001C3A  0101               	movlb	1	; () banked
  3307  001C3C  0E00               	movlw	low _stack
  3308  001C3E  24F3               	addwf	prodl,w,c
  3309  001C40  6ED9               	movwf	fsr2l,c
  3310  001C42  0101               	movlb	1	; () banked
  3311  001C44  0E01               	movlw	high _stack
  3312  001C46  20F4               	addwfc	prodh,w,c
  3313  001C48  6EDA               	movwf	fsr2h,c
  3314  001C4A  50DF               	movf	indf2,w,c
  3315  001C4C  6E1F               	movwf	_regB,c
  3316                           
  3317                           ;emulator.c: 611: break;
  3318  001C4E  D1BA               	goto	l1600
  3319  001C50                     l1532:
  3320                           
  3321                           ;emulator.c: 614: regSP -= 2;
  3322  001C50  0E02               	movlw	2
  3323  001C52  5E21               	subwf	_regSP,f,c
  3324                           
  3325                           ;emulator.c: 616: regMX = stack[regSP];
  3326  001C54  5021               	movf	_regSP,w,c
  3327  001C56  0D01               	mullw	1
  3328  001C58  0101               	movlb	1	; () banked
  3329  001C5A  0E00               	movlw	low _stack
  3330  001C5C  24F3               	addwf	prodl,w,c
  3331  001C5E  6ED9               	movwf	fsr2l,c
  3332  001C60  0101               	movlb	1	; () banked
  3333  001C62  0E01               	movlw	high _stack
  3334  001C64  20F4               	addwfc	prodh,w,c
  3335  001C66  6EDA               	movwf	fsr2h,c
  3336  001C68  50DF               	movf	indf2,w,c
  3337  001C6A  6E09               	movwf	??_processOpcode& (0+255),c
  3338  001C6C  5009               	movf	??_processOpcode,w,c
  3339  001C6E  6E17               	movwf	_regMX,c
  3340  001C70  6A18               	clrf	_regMX+1,c
  3341                           
  3342                           ;emulator.c: 617: break;
  3343  001C72  D1A8               	goto	l1600
  3344  001C74                     l1536:
  3345                           
  3346                           ;emulator.c: 620: regSP--;
  3347  001C74  0621               	decf	_regSP,f,c
  3348                           
  3349                           ;emulator.c: 622: setMXbits(0, stack[regSP]);
  3350  001C76  5021               	movf	_regSP,w,c
  3351  001C78  0D01               	mullw	1
  3352  001C7A  0101               	movlb	1	; () banked
  3353  001C7C  0E00               	movlw	low _stack
  3354  001C7E  24F3               	addwf	prodl,w,c
  3355  001C80  6ED9               	movwf	fsr2l,c
  3356  001C82  0101               	movlb	1	; () banked
  3357  001C84  0E01               	movlw	high _stack
  3358  001C86  20F4               	addwfc	prodh,w,c
  3359  001C88  6EDA               	movwf	fsr2h,c
  3360  001C8A  50DF               	movf	indf2,w,c
  3361  001C8C  6E01               	movwf	setMXbits@value,c
  3362  001C8E  0E00               	movlw	0
  3363  001C90  EC74  F013         	call	_setMXbits
  3364                           
  3365                           ;emulator.c: 623: break;
  3366  001C94  D197               	goto	l1600
  3367  001C96                     l1540:
  3368                           
  3369                           ;emulator.c: 626: regSP--;
  3370  001C96  0621               	decf	_regSP,f,c
  3371                           
  3372                           ;emulator.c: 628: setMXbits(1, stack[regSP]);
  3373  001C98  5021               	movf	_regSP,w,c
  3374  001C9A  0D01               	mullw	1
  3375  001C9C  0101               	movlb	1	; () banked
  3376  001C9E  0E00               	movlw	low _stack
  3377  001CA0  24F3               	addwf	prodl,w,c
  3378  001CA2  6ED9               	movwf	fsr2l,c
  3379  001CA4  0101               	movlb	1	; () banked
  3380  001CA6  0E01               	movlw	high _stack
  3381  001CA8  20F4               	addwfc	prodh,w,c
  3382  001CAA  6EDA               	movwf	fsr2h,c
  3383  001CAC  50DF               	movf	indf2,w,c
  3384  001CAE  6E01               	movwf	setMXbits@value,c
  3385  001CB0  0E01               	movlw	1
  3386  001CB2  EC74  F013         	call	_setMXbits
  3387                           
  3388                           ;emulator.c: 629: break;
  3389  001CB6  D186               	goto	l1600
  3390  001CB8                     l1544:
  3391                           
  3392                           ;emulator.c: 636: regA_temp16 += (uint16_t) regB;
  3393  001CB8  501F               	movf	_regB,w,c
  3394  001CBA  2610               	addwf	processOpcode@regA_temp16,f,c
  3395  001CBC  0E00               	movlw	0
  3396  001CBE  2211               	addwfc	processOpcode@regA_temp16+1,f,c
  3397                           
  3398                           ;emulator.c: 637: if (regA_temp16 > 255) setFbits(4, 1);
  3399  001CC0  0E00               	movlw	0
  3400  001CC2  5C10               	subwf	processOpcode@regA_temp16,w,c
  3401  001CC4  0E01               	movlw	1
  3402  001CC6  5811               	subwfb	processOpcode@regA_temp16+1,w,c
  3403  001CC8  A0D8               	btfss	status,0,c
  3404  001CCA  D008               	goto	l1548
  3405  001CCC  6E09               	movwf	??_processOpcode& (0+255),c
  3406  001CCE  0E01               	movlw	1
  3407  001CD0  6E01               	movwf	setFbits@value,c
  3408  001CD2  5009               	movf	??_processOpcode& (0+255),w,c
  3409  001CD4  0E04               	movlw	4
  3410  001CD6  EC3E  F013         	call	_setFbits
  3411  001CDA  D007               	goto	l1550
  3412  001CDC                     l1548:
  3413                           
  3414                           ;emulator.c: 638: else setFbits(4, 0);
  3415  001CDC  6E09               	movwf	??_processOpcode& (0+255),c
  3416  001CDE  0E00               	movlw	0
  3417  001CE0  6E01               	movwf	setFbits@value,c
  3418  001CE2  5009               	movf	??_processOpcode& (0+255),w,c
  3419  001CE4  0E04               	movlw	4
  3420  001CE6  EC3E  F013         	call	_setFbits
  3421  001CEA                     l1550:
  3422                           
  3423                           ;emulator.c: 639: regA += regB;
  3424  001CEA  501F               	movf	_regB,w,c
  3425  001CEC                     L12:
  3426  001CEC  261E               	addwf	_regA,f,c
  3427                           
  3428                           ;emulator.c: 640: break;
  3429  001CEE  D16A               	goto	l1600
  3430  001CF0                     l1552:
  3431                           
  3432                           ;emulator.c: 644: regA_temp16 += (uint16_t) immData_1;
  3433  001CF0  501C               	movf	_immData_1,w,c
  3434  001CF2  2610               	addwf	processOpcode@regA_temp16,f,c
  3435  001CF4  0E00               	movlw	0
  3436  001CF6  2211               	addwfc	processOpcode@regA_temp16+1,f,c
  3437                           
  3438                           ;emulator.c: 645: if (regA_temp16 > 255) setFbits(4, 1);
  3439  001CF8  0E00               	movlw	0
  3440  001CFA  5C10               	subwf	processOpcode@regA_temp16,w,c
  3441  001CFC  0E01               	movlw	1
  3442  001CFE  5811               	subwfb	processOpcode@regA_temp16+1,w,c
  3443  001D00  A0D8               	btfss	status,0,c
  3444  001D02  D008               	goto	l1556
  3445  001D04  6E09               	movwf	??_processOpcode& (0+255),c
  3446  001D06  0E01               	movlw	1
  3447  001D08  6E01               	movwf	setFbits@value,c
  3448  001D0A  5009               	movf	??_processOpcode& (0+255),w,c
  3449  001D0C  0E04               	movlw	4
  3450  001D0E  EC3E  F013         	call	_setFbits
  3451  001D12  D007               	goto	l1558
  3452  001D14                     l1556:
  3453                           
  3454                           ;emulator.c: 646: else setFbits(4, 0);
  3455  001D14  6E09               	movwf	??_processOpcode& (0+255),c
  3456  001D16  0E00               	movlw	0
  3457  001D18  6E01               	movwf	setFbits@value,c
  3458  001D1A  5009               	movf	??_processOpcode& (0+255),w,c
  3459  001D1C  0E04               	movlw	4
  3460  001D1E  EC3E  F013         	call	_setFbits
  3461  001D22                     l1558:
  3462                           
  3463                           ;emulator.c: 648: regA += immData_1;
  3464  001D22  501C               	movf	_immData_1,w,c
  3465  001D24  261E               	addwf	_regA,f,c
  3466  001D26  D045               	goto	L20
  3467  001D28                     l343:
  3468                           
  3469                           ;emulator.c: 655: regA_temp16 = regA;
  3470  001D28  C01E  F010         	movff	_regA,processOpcode@regA_temp16
  3471  001D2C  6A11               	clrf	processOpcode@regA_temp16+1,c
  3472                           
  3473                           ;emulator.c: 657: regA_temp16 += 255;
  3474  001D2E  0EFF               	movlw	255
  3475  001D30  2610               	addwf	processOpcode@regA_temp16,f,c
  3476  001D32  0E00               	movlw	0
  3477  001D34  2211               	addwfc	processOpcode@regA_temp16+1,f,c
  3478                           
  3479                           ;emulator.c: 658: regA_temp16 -= regB;
  3480  001D36  501F               	movf	_regB,w,c
  3481  001D38  5E10               	subwf	processOpcode@regA_temp16,f,c
  3482  001D3A  0E00               	movlw	0
  3483  001D3C  5A11               	subwfb	processOpcode@regA_temp16+1,f,c
  3484                           
  3485                           ;emulator.c: 659: if (regA_temp16 < 255) setFbits(4, 1);
  3486  001D3E  0EFF               	movlw	255
  3487  001D40  5C10               	subwf	processOpcode@regA_temp16,w,c
  3488  001D42  0E00               	movlw	0
  3489  001D44  5811               	subwfb	processOpcode@regA_temp16+1,w,c
  3490  001D46  B0D8               	btfsc	status,0,c
  3491  001D48  D008               	goto	l1566
  3492  001D4A  6E09               	movwf	??_processOpcode& (0+255),c
  3493  001D4C  0E01               	movlw	1
  3494  001D4E  6E01               	movwf	setFbits@value,c
  3495  001D50  5009               	movf	??_processOpcode& (0+255),w,c
  3496  001D52  0E04               	movlw	4
  3497  001D54  EC3E  F013         	call	_setFbits
  3498  001D58  D007               	goto	l1568
  3499  001D5A                     l1566:
  3500                           
  3501                           ;emulator.c: 660: else setFbits(4, 0);
  3502  001D5A  6E09               	movwf	??_processOpcode& (0+255),c
  3503  001D5C  0E00               	movlw	0
  3504  001D5E  6E01               	movwf	setFbits@value,c
  3505  001D60  5009               	movf	??_processOpcode& (0+255),w,c
  3506  001D62  0E04               	movlw	4
  3507  001D64  EC3E  F013         	call	_setFbits
  3508  001D68                     l1568:
  3509                           
  3510                           ;emulator.c: 661: regA -= regB;
  3511  001D68  501F               	movf	_regB,w,c
  3512  001D6A  5E1E               	subwf	_regA,f,c
  3513                           
  3514                           ;emulator.c: 662: break;
  3515  001D6C  D12B               	goto	l1600
  3516  001D6E                     l346:
  3517                           
  3518                           ;emulator.c: 666: regA_temp16 = regA;
  3519  001D6E  C01E  F010         	movff	_regA,processOpcode@regA_temp16
  3520  001D72  6A11               	clrf	processOpcode@regA_temp16+1,c
  3521                           
  3522                           ;emulator.c: 668: regA_temp16 += 255;
  3523  001D74  0EFF               	movlw	255
  3524  001D76  2610               	addwf	processOpcode@regA_temp16,f,c
  3525  001D78  0E00               	movlw	0
  3526  001D7A  2211               	addwfc	processOpcode@regA_temp16+1,f,c
  3527                           
  3528                           ;emulator.c: 669: regA_temp16 -= immData_1;
  3529  001D7C  501C               	movf	_immData_1,w,c
  3530  001D7E  5E10               	subwf	processOpcode@regA_temp16,f,c
  3531  001D80  0E00               	movlw	0
  3532  001D82  5A11               	subwfb	processOpcode@regA_temp16+1,f,c
  3533                           
  3534                           ;emulator.c: 670: if (regA_temp16 < 255) setFbits(4, 1);
  3535  001D84  0EFF               	movlw	255
  3536  001D86  5C10               	subwf	processOpcode@regA_temp16,w,c
  3537  001D88  0E00               	movlw	0
  3538  001D8A  5811               	subwfb	processOpcode@regA_temp16+1,w,c
  3539  001D8C  B0D8               	btfsc	status,0,c
  3540  001D8E  D008               	goto	l1574
  3541  001D90  6E09               	movwf	??_processOpcode& (0+255),c
  3542  001D92  0E01               	movlw	1
  3543  001D94  6E01               	movwf	setFbits@value,c
  3544  001D96  5009               	movf	??_processOpcode& (0+255),w,c
  3545  001D98  0E04               	movlw	4
  3546  001D9A  EC3E  F013         	call	_setFbits
  3547  001D9E  D007               	goto	l1576
  3548  001DA0                     l1574:
  3549                           
  3550                           ;emulator.c: 671: else setFbits(4, 0);
  3551  001DA0  6E09               	movwf	??_processOpcode& (0+255),c
  3552  001DA2  0E00               	movlw	0
  3553  001DA4  6E01               	movwf	setFbits@value,c
  3554  001DA6  5009               	movf	??_processOpcode& (0+255),w,c
  3555  001DA8  0E04               	movlw	4
  3556  001DAA  EC3E  F013         	call	_setFbits
  3557  001DAE                     l1576:
  3558                           
  3559                           ;emulator.c: 672: regA -= immData_1;
  3560  001DAE  501C               	movf	_immData_1,w,c
  3561  001DB0  5E1E               	subwf	_regA,f,c
  3562  001DB2                     L20:
  3563                           
  3564                           ;emulator.c: 673: regPC++;
  3565  001DB2  4A19               	infsnz	_regPC,f,c
  3566  001DB4  2A1A               	incf	_regPC+1,f,c
  3567                           
  3568                           ;emulator.c: 674: break;
  3569  001DB6  D106               	goto	l1600
  3570  001DB8                     l1580:
  3571                           
  3572                           ;emulator.c: 678: regA_temp16 = regA + 1;
  3573  001DB8  0E01               	movlw	1
  3574  001DBA  241E               	addwf	_regA,w,c
  3575  001DBC  6E10               	movwf	processOpcode@regA_temp16,c
  3576  001DBE  6A11               	clrf	processOpcode@regA_temp16+1,c
  3577  001DC0  0E00               	movlw	0
  3578  001DC2  2211               	addwfc	processOpcode@regA_temp16+1,f,c
  3579                           
  3580                           ;emulator.c: 679: if (regA_temp16 > 255) setFbits(4, 1);
  3581  001DC4  0E00               	movlw	0
  3582  001DC6  5C10               	subwf	processOpcode@regA_temp16,w,c
  3583  001DC8  0E01               	movlw	1
  3584  001DCA  5811               	subwfb	processOpcode@regA_temp16+1,w,c
  3585  001DCC  A0D8               	btfss	status,0,c
  3586  001DCE  D008               	goto	l1584
  3587  001DD0  6E09               	movwf	??_processOpcode& (0+255),c
  3588  001DD2  0E01               	movlw	1
  3589  001DD4  6E01               	movwf	setFbits@value,c
  3590  001DD6  5009               	movf	??_processOpcode& (0+255),w,c
  3591  001DD8  0E04               	movlw	4
  3592  001DDA  EC3E  F013         	call	_setFbits
  3593  001DDE  D007               	goto	l1586
  3594  001DE0                     l1584:
  3595                           
  3596                           ;emulator.c: 680: else setFbits(4, 0);
  3597  001DE0  6E09               	movwf	??_processOpcode& (0+255),c
  3598  001DE2  0E00               	movlw	0
  3599  001DE4  6E01               	movwf	setFbits@value,c
  3600  001DE6  5009               	movf	??_processOpcode& (0+255),w,c
  3601  001DE8  0E04               	movlw	4
  3602  001DEA  EC3E  F013         	call	_setFbits
  3603  001DEE                     l1586:
  3604                           
  3605                           ;emulator.c: 681: regA++;
  3606  001DEE  2A1E               	incf	_regA,f,c
  3607                           
  3608                           ;emulator.c: 682: break;
  3609  001DF0  D0E9               	goto	l1600
  3610  001DF2                     l1588:
  3611                           
  3612                           ;emulator.c: 686: regA_temp8 = regA - 1;
  3613  001DF2  041E               	decf	_regA,w,c
  3614  001DF4  6E0F               	movwf	processOpcode@regA_temp8,c
  3615                           
  3616                           ;emulator.c: 687: if (regA_temp8 == 255) setFbits(4, 1);
  3617  001DF6  280F               	incf	processOpcode@regA_temp8,w,c
  3618  001DF8  A4D8               	btfss	status,2,c
  3619  001DFA  D008               	goto	l1592
  3620  001DFC  6E09               	movwf	??_processOpcode& (0+255),c
  3621  001DFE  0E01               	movlw	1
  3622  001E00  6E01               	movwf	setFbits@value,c
  3623  001E02  5009               	movf	??_processOpcode& (0+255),w,c
  3624  001E04  0E04               	movlw	4
  3625  001E06  EC3E  F013         	call	_setFbits
  3626  001E0A  D007               	goto	l1594
  3627  001E0C                     l1592:
  3628                           
  3629                           ;emulator.c: 688: else setFbits(4, 0);
  3630  001E0C  6E09               	movwf	??_processOpcode& (0+255),c
  3631  001E0E  0E00               	movlw	0
  3632  001E10  6E01               	movwf	setFbits@value,c
  3633  001E12  5009               	movf	??_processOpcode& (0+255),w,c
  3634  001E14  0E04               	movlw	4
  3635  001E16  EC3E  F013         	call	_setFbits
  3636  001E1A                     l1594:
  3637                           
  3638                           ;emulator.c: 689: regA--;
  3639  001E1A  061E               	decf	_regA,f,c
  3640                           
  3641                           ;emulator.c: 690: break;
  3642  001E1C  D0D3               	goto	l1600
  3643  001E1E                     l1598:
  3644  001E1E  0E00               	movlw	low _virtualMemory
  3645  001E20  2419               	addwf	_regPC,w,c
  3646  001E22  6ED9               	movwf	fsr2l,c
  3647  001E24  0E02               	movlw	high _virtualMemory
  3648  001E26  201A               	addwfc	_regPC+1,w,c
  3649  001E28  6EDA               	movwf	fsr2h,c
  3650  001E2A  50DF               	movf	indf2,w,c
  3651                           
  3652                           ; Switch size 1, requested type "space"
  3653                           ; Number of cases is 68, Range of values is 1 to 85
  3654                           ; switch strategies available:
  3655                           ; Name         Instructions Cycles
  3656                           ; simple_byte          205   103 (average)
  3657                           ;	Chosen strategy is simple_byte
  3658  001E2C  0A01               	xorlw	1	; case 1
  3659  001E2E  B4D8               	btfsc	status,2,c
  3660  001E30  D4F6               	goto	l1320
  3661  001E32  0A03               	xorlw	3	; case 2
  3662  001E34  B4D8               	btfsc	status,2,c
  3663  001E36  D4FB               	goto	l1322
  3664  001E38  0A01               	xorlw	1	; case 3
  3665  001E3A  B4D8               	btfsc	status,2,c
  3666  001E3C  D505               	goto	l1326
  3667  001E3E  0A07               	xorlw	7	; case 4
  3668  001E40  B4D8               	btfsc	status,2,c
  3669  001E42  D506               	goto	l1328
  3670  001E44  0A01               	xorlw	1	; case 5
  3671  001E46  B4D8               	btfsc	status,2,c
  3672  001E48  D508               	goto	l1332
  3673  001E4A  0A03               	xorlw	3	; case 6
  3674  001E4C  B4D8               	btfsc	status,2,c
  3675  001E4E  D50B               	goto	l1334
  3676  001E50  0A01               	xorlw	1	; case 7
  3677  001E52  B4D8               	btfsc	status,2,c
  3678  001E54  D50E               	goto	l1338
  3679  001E56  0A0F               	xorlw	15	; case 8
  3680  001E58  B4D8               	btfsc	status,2,c
  3681  001E5A  D4F1               	goto	l1324
  3682  001E5C  0A18               	xorlw	24	; case 16
  3683  001E5E  B4D8               	btfsc	status,2,c
  3684  001E60  D50E               	goto	l1342
  3685  001E62  0A01               	xorlw	1	; case 17
  3686  001E64  B4D8               	btfsc	status,2,c
  3687  001E66  D511               	goto	l1344
  3688  001E68  0A03               	xorlw	3	; case 18
  3689  001E6A  B4D8               	btfsc	status,2,c
  3690  001E6C  D512               	goto	l1346
  3691  001E6E  0A01               	xorlw	1	; case 19
  3692  001E70  B4D8               	btfsc	status,2,c
  3693  001E72  D513               	goto	l264
  3694  001E74  0A07               	xorlw	7	; case 20
  3695  001E76  B4D8               	btfsc	status,2,c
  3696  001E78  D513               	goto	l265
  3697  001E7A  0A01               	xorlw	1	; case 21
  3698  001E7C  B4D8               	btfsc	status,2,c
  3699  001E7E  D513               	goto	l266
  3700  001E80  0A03               	xorlw	3	; case 22
  3701  001E82  B4D8               	btfsc	status,2,c
  3702  001E84  D513               	goto	l1348
  3703  001E86  0A01               	xorlw	1	; case 23
  3704  001E88  B4D8               	btfsc	status,2,c
  3705  001E8A  D519               	goto	l1350
  3706  001E8C  0A0F               	xorlw	15	; case 24
  3707  001E8E  B4D8               	btfsc	status,2,c
  3708  001E90  D51C               	goto	l1352
  3709  001E92  0A01               	xorlw	1	; case 25
  3710  001E94  B4D8               	btfsc	status,2,c
  3711  001E96  D51F               	goto	l270
  3712  001E98  0A03               	xorlw	3	; case 26
  3713  001E9A  B4D8               	btfsc	status,2,c
  3714  001E9C  D51F               	goto	l271
  3715  001E9E  0A01               	xorlw	1	; case 27
  3716  001EA0  B4D8               	btfsc	status,2,c
  3717  001EA2  D51F               	goto	l272
  3718  001EA4  0A07               	xorlw	7	; case 28
  3719  001EA6  B4D8               	btfsc	status,2,c
  3720  001EA8  D51F               	goto	l273
  3721  001EAA  0A3C               	xorlw	60	; case 32
  3722  001EAC  B4D8               	btfsc	status,2,c
  3723  001EAE  D523               	goto	l1356
  3724  001EB0  0A01               	xorlw	1	; case 33
  3725  001EB2  B4D8               	btfsc	status,2,c
  3726  001EB4  D523               	goto	l1358
  3727  001EB6  0A03               	xorlw	3	; case 34
  3728  001EB8  B4D8               	btfsc	status,2,c
  3729  001EBA  D523               	goto	l1362
  3730  001EBC  0A01               	xorlw	1	; case 35
  3731  001EBE  B4D8               	btfsc	status,2,c
  3732  001EC0  D523               	goto	l1364
  3733  001EC2  0A07               	xorlw	7	; case 36
  3734  001EC4  B4D8               	btfsc	status,2,c
  3735  001EC6  D526               	goto	l1370
  3736  001EC8  0A01               	xorlw	1	; case 37
  3737  001ECA  B4D8               	btfsc	status,2,c
  3738  001ECC  D526               	goto	l1374
  3739  001ECE  0A03               	xorlw	3	; case 38
  3740  001ED0  B4D8               	btfsc	status,2,c
  3741  001ED2  D525               	goto	l281
  3742  001ED4  0A01               	xorlw	1	; case 39
  3743  001ED6  B4D8               	btfsc	status,2,c
  3744  001ED8  D537               	goto	l284
  3745  001EDA  0A0F               	xorlw	15	; case 40
  3746  001EDC  B4D8               	btfsc	status,2,c
  3747  001EDE  D549               	goto	l287
  3748  001EE0  0A01               	xorlw	1	; case 41
  3749  001EE2  B4D8               	btfsc	status,2,c
  3750  001EE4  D54B               	goto	l288
  3751  001EE6  0A03               	xorlw	3	; case 42
  3752  001EE8  B4D8               	btfsc	status,2,c
  3753  001EEA  D54C               	goto	l1392
  3754  001EEC  0A01               	xorlw	1	; case 43
  3755  001EEE  B4D8               	btfsc	status,2,c
  3756  001EF0  D50E               	goto	l1368
  3757  001EF2  0A1B               	xorlw	27	; case 48
  3758  001EF4  B4D8               	btfsc	status,2,c
  3759  001EF6  D5F0               	goto	L13
  3760  001EF8  0A01               	xorlw	1	; case 49
  3761  001EFA  B4D8               	btfsc	status,2,c
  3762  001EFC  D57C               	goto	l1410
  3763  001EFE  0A03               	xorlw	3	; case 50
  3764  001F00  B4D8               	btfsc	status,2,c
  3765  001F02  D57C               	goto	l1414
  3766  001F04  0A01               	xorlw	1	; case 51
  3767  001F06  B4D8               	btfsc	status,2,c
  3768  001F08  D581               	goto	l1418
  3769  001F0A  0A07               	xorlw	7	; case 52
  3770  001F0C  B4D8               	btfsc	status,2,c
  3771  001F0E  D58C               	goto	l1424
  3772  001F10  0A01               	xorlw	1	; case 53
  3773  001F12  B4D8               	btfsc	status,2,c
  3774  001F14  D58D               	goto	l1428
  3775  001F16  0A03               	xorlw	3	; case 54
  3776  001F18  B4D8               	btfsc	status,2,c
  3777  001F1A  D593               	goto	l1434
  3778  001F1C  0A01               	xorlw	1	; case 55
  3779  001F1E  B4D8               	btfsc	status,2,c
  3780  001F20  D594               	goto	l1438
  3781  001F22  0A0F               	xorlw	15	; case 56
  3782  001F24  B4D8               	btfsc	status,2,c
  3783  001F26  D59B               	goto	l1444
  3784  001F28  0A01               	xorlw	1	; case 57
  3785  001F2A  B4D8               	btfsc	status,2,c
  3786  001F2C  D59C               	goto	l1448
  3787  001F2E  0A03               	xorlw	3	; case 58
  3788  001F30  B4D8               	btfsc	status,2,c
  3789  001F32  D5A3               	goto	l1454
  3790  001F34  0A01               	xorlw	1	; case 59
  3791  001F36  B4D8               	btfsc	status,2,c
  3792  001F38  D5A4               	goto	l1458
  3793  001F3A  0A07               	xorlw	7	; case 60
  3794  001F3C  B4D8               	btfsc	status,2,c
  3795  001F3E  D5AB               	goto	l1464
  3796  001F40  0A01               	xorlw	1	; case 61
  3797  001F42  B4D8               	btfsc	status,2,c
  3798  001F44  D5AD               	goto	l1468
  3799  001F46  0A03               	xorlw	3	; case 62
  3800  001F48  B4D8               	btfsc	status,2,c
  3801  001F4A  D5B8               	goto	l1474
  3802  001F4C  0A01               	xorlw	1	; case 63
  3803  001F4E  B4D8               	btfsc	status,2,c
  3804  001F50  D5C8               	goto	l1480
  3805  001F52  0A7F               	xorlw	127	; case 64
  3806  001F54  B4D8               	btfsc	status,2,c
  3807  001F56  D5D6               	goto	l1488
  3808  001F58  0A01               	xorlw	1	; case 65
  3809  001F5A  B4D8               	btfsc	status,2,c
  3810  001F5C  D5FA               	goto	l1494
  3811  001F5E  0A03               	xorlw	3	; case 66
  3812  001F60  B4D8               	btfsc	status,2,c
  3813  001F62  D604               	goto	l1498
  3814  001F64  0A01               	xorlw	1	; case 67
  3815  001F66  B4D8               	btfsc	status,2,c
  3816  001F68  D60E               	goto	l1502
  3817  001F6A  0A07               	xorlw	7	; case 68
  3818  001F6C  B4D8               	btfsc	status,2,c
  3819  001F6E  D61A               	goto	l1506
  3820  001F70  0A01               	xorlw	1	; case 69
  3821  001F72  B4D8               	btfsc	status,2,c
  3822  001F74  D627               	goto	l1510
  3823  001F76  0A03               	xorlw	3	; case 70
  3824  001F78  B4D8               	btfsc	status,2,c
  3825  001F7A  D633               	goto	l1514
  3826  001F7C  0A01               	xorlw	1	; case 71
  3827  001F7E  B4D8               	btfsc	status,2,c
  3828  001F80  D63D               	goto	l1518
  3829  001F82  0A0F               	xorlw	15	; case 72
  3830  001F84  B4D8               	btfsc	status,2,c
  3831  001F86  D648               	goto	l1524
  3832  001F88  0A01               	xorlw	1	; case 73
  3833  001F8A  B4D8               	btfsc	status,2,c
  3834  001F8C  D653               	goto	l1528
  3835  001F8E  0A03               	xorlw	3	; case 74
  3836  001F90  B4D8               	btfsc	status,2,c
  3837  001F92  D65E               	goto	l1532
  3838  001F94  0A01               	xorlw	1	; case 75
  3839  001F96  B4D8               	btfsc	status,2,c
  3840  001F98  D66D               	goto	l1536
  3841  001F9A  0A07               	xorlw	7	; case 76
  3842  001F9C  B4D8               	btfsc	status,2,c
  3843  001F9E  D67B               	goto	l1540
  3844  001FA0  0A1C               	xorlw	28	; case 80
  3845  001FA2  B4D8               	btfsc	status,2,c
  3846  001FA4  D689               	goto	l1544
  3847  001FA6  0A01               	xorlw	1	; case 81
  3848  001FA8  B4D8               	btfsc	status,2,c
  3849  001FAA  D6A2               	goto	l1552
  3850  001FAC  0A03               	xorlw	3	; case 82
  3851  001FAE  B4D8               	btfsc	status,2,c
  3852  001FB0  D6BB               	goto	l343
  3853  001FB2  0A01               	xorlw	1	; case 83
  3854  001FB4  B4D8               	btfsc	status,2,c
  3855  001FB6  D6DB               	goto	l346
  3856  001FB8  0A07               	xorlw	7	; case 84
  3857  001FBA  B4D8               	btfsc	status,2,c
  3858  001FBC  D6FD               	goto	l1580
  3859  001FBE  0A01               	xorlw	1	; case 85
  3860  001FC0  B4D8               	btfsc	status,2,c
  3861  001FC2  D717               	goto	l1588
  3862  001FC4                     l1600:
  3863                           
  3864                           ;emulator.c: 694: regPC++;
  3865  001FC4  4A19               	infsnz	_regPC,f,c
  3866  001FC6  2A1A               	incf	_regPC+1,f,c
  3867  001FC8  0012               	return	
  3868  001FCA                     __end_of_processOpcode:
  3869                           	opt stack 0
  3870                           tblptru	equ	0xFF8
  3871                           tblptrh	equ	0xFF7
  3872                           tblptrl	equ	0xFF6
  3873                           tablat	equ	0xFF5
  3874                           prodh	equ	0xFF4
  3875                           prodl	equ	0xFF3
  3876                           postinc0	equ	0xFEE
  3877                           wreg	equ	0xFE8
  3878                           postdec1	equ	0xFE5
  3879                           fsr1h	equ	0xFE2
  3880                           fsr1l	equ	0xFE1
  3881                           indf2	equ	0xFDF
  3882                           fsr2h	equ	0xFDA
  3883                           fsr2l	equ	0xFD9
  3884                           status	equ	0xFD8
  3885                           
  3886 ;; *************** function _update_immData *****************
  3887 ;; Defined at:
  3888 ;;		line 223 in file "source/emulator.c"
  3889 ;; Parameters:    Size  Location     Type
  3890 ;;		None
  3891 ;; Auto vars:     Size  Location     Type
  3892 ;;		None
  3893 ;; Return value:  Size  Location     Type
  3894 ;;		None               void
  3895 ;; Registers used:
  3896 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3897 ;; Tracked objects:
  3898 ;;		On entry : 0/0
  3899 ;;		On exit  : 0/0
  3900 ;;		Unchanged: 0/0
  3901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3904 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3905 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3906 ;;Total ram usage:        2 bytes
  3907 ;; Hardware stack levels used:    1
  3908 ;; This function calls:
  3909 ;;		Nothing
  3910 ;; This function is called by:
  3911 ;;		_processOpcode
  3912 ;; This function uses a non-reentrant model
  3913 ;;
  3914                           
  3915                           	psect	text2
  3916  002440                     __ptext2:
  3917                           	opt stack 0
  3918  002440                     _update_immData:
  3919                           	opt stack 28
  3920                           
  3921                           ;emulator.c: 226: if (regPC + 1 == 2047 + 1) immData_1 = 0;
  3922                           
  3923                           ;incstack = 0
  3924  002440  0E01               	movlw	1
  3925  002442  2419               	addwf	_regPC,w,c
  3926  002444  6E01               	movwf	??_update_immData& (0+255),c
  3927  002446  0E00               	movlw	0
  3928  002448  201A               	addwfc	_regPC+1,w,c
  3929  00244A  6E02               	movwf	(??_update_immData+1)& (0+255),c
  3930  00244C  5002               	movf	??_update_immData+1,w,c
  3931  00244E  0A08               	xorlw	8
  3932  002450  1001               	iorwf	??_update_immData,w,c
  3933  002452  A4D8               	btfss	status,2,c
  3934  002454  D004               	goto	l1176
  3935  002456  6E01               	movwf	??_update_immData& (0+255),c
  3936  002458  0E00               	movlw	0
  3937  00245A  6E1C               	movwf	_immData_1,c
  3938  00245C  5001               	movf	??_update_immData& (0+255),w,c
  3939  00245E                     l1176:
  3940                           
  3941                           ;emulator.c: 227: if (regPC + 2 == 2047 + 1) immData_2 = 0;
  3942  00245E  0E02               	movlw	2
  3943  002460  2419               	addwf	_regPC,w,c
  3944  002462  6E01               	movwf	??_update_immData& (0+255),c
  3945  002464  0E00               	movlw	0
  3946  002466  201A               	addwfc	_regPC+1,w,c
  3947  002468  6E02               	movwf	(??_update_immData+1)& (0+255),c
  3948  00246A  5002               	movf	??_update_immData+1,w,c
  3949  00246C  0A08               	xorlw	8
  3950  00246E  1001               	iorwf	??_update_immData,w,c
  3951  002470  A4D8               	btfss	status,2,c
  3952  002472  D004               	goto	l1180
  3953  002474  6E01               	movwf	??_update_immData& (0+255),c
  3954  002476  0E00               	movlw	0
  3955  002478  6E1D               	movwf	_immData_2,c
  3956  00247A  5001               	movf	??_update_immData& (0+255),w,c
  3957  00247C                     l1180:
  3958                           
  3959                           ;emulator.c: 228: if (regPC + 2 == 2047 + 2) immData_2 = 1;
  3960  00247C  0E02               	movlw	2
  3961  00247E  2419               	addwf	_regPC,w,c
  3962  002480  6E01               	movwf	??_update_immData& (0+255),c
  3963  002482  0E00               	movlw	0
  3964  002484  201A               	addwfc	_regPC+1,w,c
  3965  002486  6E02               	movwf	(??_update_immData+1)& (0+255),c
  3966  002488  0401               	decf	??_update_immData,w,c
  3967  00248A  0E08               	movlw	8
  3968  00248C  B4D8               	btfsc	status,2,c
  3969  00248E  1802               	xorwf	??_update_immData+1,w,c
  3970  002490  A4D8               	btfss	status,2,c
  3971  002492  D004               	goto	l1184
  3972  002494  6E01               	movwf	??_update_immData& (0+255),c
  3973  002496  0E01               	movlw	1
  3974  002498  6E1D               	movwf	_immData_2,c
  3975  00249A  5001               	movf	??_update_immData& (0+255),w,c
  3976  00249C                     l1184:
  3977                           
  3978                           ;emulator.c: 232: immData_1 = virtualMemory[regPC + 1];
  3979  00249C  0E01               	movlw	1
  3980  00249E  2419               	addwf	_regPC,w,c
  3981  0024A0  6E01               	movwf	??_update_immData& (0+255),c
  3982  0024A2  0E00               	movlw	0
  3983  0024A4  201A               	addwfc	_regPC+1,w,c
  3984  0024A6  6E02               	movwf	(??_update_immData+1)& (0+255),c
  3985  0024A8  0E00               	movlw	low _virtualMemory
  3986  0024AA  2401               	addwf	??_update_immData,w,c
  3987  0024AC  6ED9               	movwf	fsr2l,c
  3988  0024AE  0E02               	movlw	high _virtualMemory
  3989  0024B0  2002               	addwfc	??_update_immData+1,w,c
  3990  0024B2  6EDA               	movwf	fsr2h,c
  3991  0024B4  50DF               	movf	indf2,w,c
  3992  0024B6  6E1C               	movwf	_immData_1,c
  3993                           
  3994                           ;emulator.c: 233: immData_2 = virtualMemory[regPC + 2];
  3995  0024B8  0E02               	movlw	2
  3996  0024BA  2419               	addwf	_regPC,w,c
  3997  0024BC  6E01               	movwf	??_update_immData& (0+255),c
  3998  0024BE  0E00               	movlw	0
  3999  0024C0  201A               	addwfc	_regPC+1,w,c
  4000  0024C2  6E02               	movwf	(??_update_immData+1)& (0+255),c
  4001  0024C4  0E00               	movlw	low _virtualMemory
  4002  0024C6  2401               	addwf	??_update_immData,w,c
  4003  0024C8  6ED9               	movwf	fsr2l,c
  4004  0024CA  0E02               	movlw	high _virtualMemory
  4005  0024CC  2002               	addwfc	??_update_immData+1,w,c
  4006  0024CE  6EDA               	movwf	fsr2h,c
  4007  0024D0  50DF               	movf	indf2,w,c
  4008  0024D2  6E1D               	movwf	_immData_2,c
  4009  0024D4  0012               	return	
  4010  0024D6                     __end_of_update_immData:
  4011                           	opt stack 0
  4012                           tblptru	equ	0xFF8
  4013                           tblptrh	equ	0xFF7
  4014                           tblptrl	equ	0xFF6
  4015                           tablat	equ	0xFF5
  4016                           prodh	equ	0xFF4
  4017                           prodl	equ	0xFF3
  4018                           postinc0	equ	0xFEE
  4019                           wreg	equ	0xFE8
  4020                           postdec1	equ	0xFE5
  4021                           fsr1h	equ	0xFE2
  4022                           fsr1l	equ	0xFE1
  4023                           indf2	equ	0xFDF
  4024                           fsr2h	equ	0xFDA
  4025                           fsr2l	equ	0xFD9
  4026                           status	equ	0xFD8
  4027                           
  4028 ;; *************** function _setPortData *****************
  4029 ;; Defined at:
  4030 ;;		line 195 in file "source/emulator.c"
  4031 ;; Parameters:    Size  Location     Type
  4032 ;;  portNumber      1    wreg     unsigned char 
  4033 ;;  outputData      1    4[COMRAM] unsigned char 
  4034 ;; Auto vars:     Size  Location     Type
  4035 ;;  portNumber      1    5[COMRAM] unsigned char 
  4036 ;;  outputData_t    2    6[COMRAM] unsigned int 
  4037 ;; Return value:  Size  Location     Type
  4038 ;;		None               void
  4039 ;; Registers used:
  4040 ;;		wreg, status,2, status,0, cstack
  4041 ;; Tracked objects:
  4042 ;;		On entry : 0/0
  4043 ;;		On exit  : 0/0
  4044 ;;		Unchanged: 0/0
  4045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4046 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4047 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4049 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4050 ;;Total ram usage:        4 bytes
  4051 ;; Hardware stack levels used:    1
  4052 ;; Hardware stack levels required when called:    1
  4053 ;; This function calls:
  4054 ;;		_dispSeg
  4055 ;;		_enableSerial
  4056 ;;		_hexToChar
  4057 ;; This function is called by:
  4058 ;;		_processOpcode
  4059 ;; This function uses a non-reentrant model
  4060 ;;
  4061                           
  4062                           	psect	text3
  4063  0023A0                     __ptext3:
  4064                           	opt stack 0
  4065  0023A0                     _setPortData:
  4066                           	opt stack 27
  4067                           
  4068                           ;incstack = 0
  4069                           ;setPortData@portNumber stored from wreg
  4070  0023A0  CFE8 F006          	movff	wreg,setPortData@portNumber
  4071                           
  4072                           ;emulator.c: 197: uint16_t outputData_temp16;
  4073                           ;emulator.c: 198: switch (portNumber)
  4074  0023A4  D03F               	goto	l1310
  4075  0023A6                     l231:
  4076                           
  4077                           ;emulator.c: 201: if (outputData == 0) outputData_temp16 = 1200;
  4078  0023A6  6605               	tstfsz	setPortData@outputData,c
  4079  0023A8  D004               	goto	l1286
  4080  0023AA  0E04               	movlw	4
  4081  0023AC  6E08               	movwf	setPortData@outputData_temp16+1,c
  4082  0023AE  0EB0               	movlw	176
  4083  0023B0  6E07               	movwf	setPortData@outputData_temp16,c
  4084  0023B2                     l1286:
  4085                           
  4086                           ;emulator.c: 202: if (outputData == 1) outputData_temp16 = 2400;
  4087  0023B2  0405               	decf	setPortData@outputData,w,c
  4088  0023B4  A4D8               	btfss	status,2,c
  4089  0023B6  D004               	goto	l1290
  4090  0023B8  0E09               	movlw	9
  4091  0023BA  6E08               	movwf	setPortData@outputData_temp16+1,c
  4092  0023BC  0E60               	movlw	96
  4093  0023BE  6E07               	movwf	setPortData@outputData_temp16,c
  4094  0023C0                     l1290:
  4095                           
  4096                           ;emulator.c: 203: if (outputData == 2) outputData_temp16 = 9600;
  4097  0023C0  5005               	movf	setPortData@outputData,w,c
  4098  0023C2  0A02               	xorlw	2
  4099  0023C4  A4D8               	btfss	status,2,c
  4100  0023C6  D004               	goto	l1294
  4101  0023C8  0E25               	movlw	37
  4102  0023CA  6E08               	movwf	setPortData@outputData_temp16+1,c
  4103  0023CC  0E80               	movlw	128
  4104  0023CE  6E07               	movwf	setPortData@outputData_temp16,c
  4105  0023D0                     l1294:
  4106                           
  4107                           ;emulator.c: 204: if (outputData == 3) outputData_temp16 = 10417;
  4108  0023D0  5005               	movf	setPortData@outputData,w,c
  4109  0023D2  0A03               	xorlw	3
  4110  0023D4  A4D8               	btfss	status,2,c
  4111  0023D6  D004               	goto	l1298
  4112  0023D8  0E28               	movlw	40
  4113  0023DA  6E08               	movwf	setPortData@outputData_temp16+1,c
  4114  0023DC  0EB1               	movlw	177
  4115  0023DE  6E07               	movwf	setPortData@outputData_temp16,c
  4116  0023E0                     l1298:
  4117                           
  4118                           ;emulator.c: 205: if (outputData == 4) outputData_temp16 = 19200;
  4119  0023E0  5005               	movf	setPortData@outputData,w,c
  4120  0023E2  0A04               	xorlw	4
  4121  0023E4  A4D8               	btfss	status,2,c
  4122  0023E6  D004               	goto	l1302
  4123  0023E8  0E4B               	movlw	75
  4124  0023EA  6E08               	movwf	setPortData@outputData_temp16+1,c
  4125  0023EC  0E00               	movlw	0
  4126  0023EE  6E07               	movwf	setPortData@outputData_temp16,c
  4127  0023F0                     l1302:
  4128                           
  4129                           ;emulator.c: 206: enableSerial(outputData_temp16);
  4130  0023F0  C007  F001         	movff	setPortData@outputData_temp16,enableSerial@baudRate
  4131  0023F4  C008  F002         	movff	setPortData@outputData_temp16+1,enableSerial@baudRate+1
  4132  0023F8  EC6B  F012         	call	_enableSerial	;wreg free
  4133                           
  4134                           ;emulator.c: 207: break;
  4135  0023FC  0012               	return	
  4136  0023FE                     l238:
  4137                           
  4138                           ;emulator.c: 210: TXREG2 = outputData;
  4139  0023FE  C005  FF73         	movff	setPortData@outputData,3955	;volatile
  4140                           
  4141                           ;emulator.c: 211: break;
  4142  002402  0012               	return	
  4143  002404                     l1304:
  4144                           
  4145                           ;emulator.c: 214: dispSeg(1, hexToChar(outputData));
  4146  002404  5005               	movf	setPortData@outputData,w,c
  4147  002406  EC74  F011         	call	_hexToChar
  4148  00240A  6E02               	movwf	dispSeg@letter,c
  4149  00240C  0E01               	movlw	1
  4150  00240E  ECE5  F00F         	call	_dispSeg
  4151                           
  4152                           ;emulator.c: 215: break;
  4153  002412  0012               	return	
  4154  002414                     l1306:
  4155                           
  4156                           ;emulator.c: 218: dispSeg(2, hexToChar(outputData));
  4157  002414  5005               	movf	setPortData@outputData,w,c
  4158  002416  EC74  F011         	call	_hexToChar
  4159  00241A  6E02               	movwf	dispSeg@letter,c
  4160  00241C  0E02               	movlw	2
  4161  00241E  ECE5  F00F         	call	_dispSeg
  4162                           
  4163                           ;emulator.c: 219: break;
  4164  002422  0012               	return	
  4165  002424                     l1310:
  4166  002424  5006               	movf	setPortData@portNumber,w,c
  4167                           
  4168                           ; Switch size 1, requested type "space"
  4169                           ; Number of cases is 4, Range of values is 0 to 4
  4170                           ; switch strategies available:
  4171                           ; Name         Instructions Cycles
  4172                           ; simple_byte           13     7 (average)
  4173                           ;	Chosen strategy is simple_byte
  4174  002426  0A00               	xorlw	0	; case 0
  4175  002428  B4D8               	btfsc	status,2,c
  4176  00242A  D7BD               	goto	l231
  4177  00242C  0A01               	xorlw	1	; case 1
  4178  00242E  B4D8               	btfsc	status,2,c
  4179  002430  D7E6               	goto	l238
  4180  002432  0A02               	xorlw	2	; case 3
  4181  002434  B4D8               	btfsc	status,2,c
  4182  002436  D7E6               	goto	l1304
  4183  002438  0A07               	xorlw	7	; case 4
  4184  00243A  A4D8               	btfss	status,2,c
  4185  00243C  0012               	return	
  4186  00243E  D7EA               	goto	l1306
  4187  002440                     __end_of_setPortData:
  4188                           	opt stack 0
  4189                           tblptru	equ	0xFF8
  4190                           tblptrh	equ	0xFF7
  4191                           tblptrl	equ	0xFF6
  4192                           tablat	equ	0xFF5
  4193                           prodh	equ	0xFF4
  4194                           prodl	equ	0xFF3
  4195                           postinc0	equ	0xFEE
  4196                           wreg	equ	0xFE8
  4197                           postdec1	equ	0xFE5
  4198                           fsr1h	equ	0xFE2
  4199                           fsr1l	equ	0xFE1
  4200                           indf2	equ	0xFDF
  4201                           fsr2h	equ	0xFDA
  4202                           fsr2l	equ	0xFD9
  4203                           status	equ	0xFD8
  4204                           
  4205 ;; *************** function _hexToChar *****************
  4206 ;; Defined at:
  4207 ;;		line 63 in file "source/system.c"
  4208 ;; Parameters:    Size  Location     Type
  4209 ;;  number          1    wreg     unsigned char 
  4210 ;; Auto vars:     Size  Location     Type
  4211 ;;  number          1    0[COMRAM] unsigned char 
  4212 ;; Return value:  Size  Location     Type
  4213 ;;                  1    wreg      unsigned char 
  4214 ;; Registers used:
  4215 ;;		wreg, status,2, status,0
  4216 ;; Tracked objects:
  4217 ;;		On entry : 0/0
  4218 ;;		On exit  : 0/0
  4219 ;;		Unchanged: 0/0
  4220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4222 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4224 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4225 ;;Total ram usage:        1 bytes
  4226 ;; Hardware stack levels used:    1
  4227 ;; This function calls:
  4228 ;;		Nothing
  4229 ;; This function is called by:
  4230 ;;		_setPortData
  4231 ;; This function uses a non-reentrant model
  4232 ;;
  4233                           
  4234                           	psect	text4
  4235  0022E8                     __ptext4:
  4236                           	opt stack 0
  4237  0022E8                     _hexToChar:
  4238                           	opt stack 27
  4239                           
  4240                           ;incstack = 0
  4241                           ;hexToChar@number stored from wreg
  4242  0022E8  CFE8 F001          	movff	wreg,hexToChar@number
  4243                           
  4244                           ;system.c: 65: number = number << 4;
  4245  0022EC  3801               	swapf	hexToChar@number,w,c
  4246  0022EE  0BF0               	andlw	240
  4247  0022F0  6E01               	movwf	hexToChar@number,c
  4248                           
  4249                           ;system.c: 66: number = number >> 4;
  4250  0022F2  3801               	swapf	hexToChar@number,w,c
  4251  0022F4  0B0F               	andlw	15
  4252  0022F6  6E01               	movwf	hexToChar@number,c
  4253                           
  4254                           ;system.c: 67: switch (number)
  4255  0022F8  D020               	goto	l1064
  4256  0022FA                     l998:
  4257                           
  4258                           ;system.c: 70: return '0';
  4259  0022FA  0E30               	movlw	48
  4260  0022FC  0012               	return	
  4261  0022FE                     l1002:
  4262                           
  4263                           ;system.c: 72: return '1';
  4264  0022FE  0E31               	movlw	49
  4265  002300  0012               	return	
  4266  002302                     l1006:
  4267                           
  4268                           ;system.c: 74: return '2';
  4269  002302  0E32               	movlw	50
  4270  002304  0012               	return	
  4271  002306                     l1010:
  4272                           
  4273                           ;system.c: 76: return '3';
  4274  002306  0E33               	movlw	51
  4275  002308  0012               	return	
  4276  00230A                     l1014:
  4277                           
  4278                           ;system.c: 78: return '4';
  4279  00230A  0E34               	movlw	52
  4280  00230C  0012               	return	
  4281  00230E                     l1018:
  4282                           
  4283                           ;system.c: 80: return '5';
  4284  00230E  0E35               	movlw	53
  4285  002310  0012               	return	
  4286  002312                     l1022:
  4287                           
  4288                           ;system.c: 82: return '6';
  4289  002312  0E36               	movlw	54
  4290  002314  0012               	return	
  4291  002316                     l1026:
  4292                           
  4293                           ;system.c: 84: return '7';
  4294  002316  0E37               	movlw	55
  4295  002318  0012               	return	
  4296  00231A                     l1030:
  4297                           
  4298                           ;system.c: 86: return '8';
  4299  00231A  0E38               	movlw	56
  4300  00231C  0012               	return	
  4301  00231E                     l1034:
  4302                           
  4303                           ;system.c: 88: return '9';
  4304  00231E  0E39               	movlw	57
  4305  002320  0012               	return	
  4306  002322                     l1038:
  4307                           
  4308                           ;system.c: 90: return 'A';
  4309  002322  0E41               	movlw	65
  4310  002324  0012               	return	
  4311  002326                     l1042:
  4312                           
  4313                           ;system.c: 92: return 'B';
  4314  002326  0E42               	movlw	66
  4315  002328  0012               	return	
  4316  00232A                     l1046:
  4317                           
  4318                           ;system.c: 94: return 'C';
  4319  00232A  0E43               	movlw	67
  4320  00232C  0012               	return	
  4321  00232E                     l1050:
  4322                           
  4323                           ;system.c: 96: return 'D';
  4324  00232E  0E44               	movlw	68
  4325  002330  0012               	return	
  4326  002332                     l1054:
  4327                           
  4328                           ;system.c: 98: return 'E';
  4329  002332  0E45               	movlw	69
  4330  002334  0012               	return	
  4331  002336                     l1058:
  4332                           
  4333                           ;system.c: 100: return 'F';
  4334  002336  0E46               	movlw	70
  4335  002338  0012               	return	
  4336  00233A                     l1064:
  4337  00233A  5001               	movf	hexToChar@number,w,c
  4338                           
  4339                           ; Switch size 1, requested type "space"
  4340                           ; Number of cases is 16, Range of values is 0 to 15
  4341                           ; switch strategies available:
  4342                           ; Name         Instructions Cycles
  4343                           ; simple_byte           49    25 (average)
  4344                           ;	Chosen strategy is simple_byte
  4345  00233C  0A00               	xorlw	0	; case 0
  4346  00233E  B4D8               	btfsc	status,2,c
  4347  002340  D7DC               	goto	l998
  4348  002342  0A01               	xorlw	1	; case 1
  4349  002344  B4D8               	btfsc	status,2,c
  4350  002346  D7DB               	goto	l1002
  4351  002348  0A03               	xorlw	3	; case 2
  4352  00234A  B4D8               	btfsc	status,2,c
  4353  00234C  D7DA               	goto	l1006
  4354  00234E  0A01               	xorlw	1	; case 3
  4355  002350  B4D8               	btfsc	status,2,c
  4356  002352  D7D9               	goto	l1010
  4357  002354  0A07               	xorlw	7	; case 4
  4358  002356  B4D8               	btfsc	status,2,c
  4359  002358  D7D8               	goto	l1014
  4360  00235A  0A01               	xorlw	1	; case 5
  4361  00235C  B4D8               	btfsc	status,2,c
  4362  00235E  D7D7               	goto	l1018
  4363  002360  0A03               	xorlw	3	; case 6
  4364  002362  B4D8               	btfsc	status,2,c
  4365  002364  D7D6               	goto	l1022
  4366  002366  0A01               	xorlw	1	; case 7
  4367  002368  B4D8               	btfsc	status,2,c
  4368  00236A  D7D5               	goto	l1026
  4369  00236C  0A0F               	xorlw	15	; case 8
  4370  00236E  B4D8               	btfsc	status,2,c
  4371  002370  D7D4               	goto	l1030
  4372  002372  0A01               	xorlw	1	; case 9
  4373  002374  B4D8               	btfsc	status,2,c
  4374  002376  D7D3               	goto	l1034
  4375  002378  0A03               	xorlw	3	; case 10
  4376  00237A  B4D8               	btfsc	status,2,c
  4377  00237C  D7D2               	goto	l1038
  4378  00237E  0A01               	xorlw	1	; case 11
  4379  002380  B4D8               	btfsc	status,2,c
  4380  002382  D7D1               	goto	l1042
  4381  002384  0A07               	xorlw	7	; case 12
  4382  002386  B4D8               	btfsc	status,2,c
  4383  002388  D7D0               	goto	l1046
  4384  00238A  0A01               	xorlw	1	; case 13
  4385  00238C  B4D8               	btfsc	status,2,c
  4386  00238E  D7CF               	goto	l1050
  4387  002390  0A03               	xorlw	3	; case 14
  4388  002392  B4D8               	btfsc	status,2,c
  4389  002394  D7CE               	goto	l1054
  4390  002396  0A01               	xorlw	1	; case 15
  4391  002398  B4D8               	btfsc	status,2,c
  4392  00239A  D7CD               	goto	l1058
  4393                           
  4394                           ;system.c: 102: return 0;
  4395  00239C  0E00               	movlw	0
  4396  00239E  0012               	return	
  4397  0023A0                     __end_of_hexToChar:
  4398                           	opt stack 0
  4399                           tblptru	equ	0xFF8
  4400                           tblptrh	equ	0xFF7
  4401                           tblptrl	equ	0xFF6
  4402                           tablat	equ	0xFF5
  4403                           prodh	equ	0xFF4
  4404                           prodl	equ	0xFF3
  4405                           postinc0	equ	0xFEE
  4406                           wreg	equ	0xFE8
  4407                           postdec1	equ	0xFE5
  4408                           fsr1h	equ	0xFE2
  4409                           fsr1l	equ	0xFE1
  4410                           indf2	equ	0xFDF
  4411                           fsr2h	equ	0xFDA
  4412                           fsr2l	equ	0xFD9
  4413                           status	equ	0xFD8
  4414                           
  4415 ;; *************** function _enableSerial *****************
  4416 ;; Defined at:
  4417 ;;		line 21 in file "source/serial.c"
  4418 ;; Parameters:    Size  Location     Type
  4419 ;;  baudRate        2    0[COMRAM] unsigned int 
  4420 ;; Auto vars:     Size  Location     Type
  4421 ;;		None
  4422 ;; Return value:  Size  Location     Type
  4423 ;;		None               void
  4424 ;; Registers used:
  4425 ;;		wreg, status,2, status,0
  4426 ;; Tracked objects:
  4427 ;;		On entry : 0/0
  4428 ;;		On exit  : 0/0
  4429 ;;		Unchanged: 0/0
  4430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4431 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4433 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4434 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4435 ;;Total ram usage:        4 bytes
  4436 ;; Hardware stack levels used:    1
  4437 ;; This function calls:
  4438 ;;		Nothing
  4439 ;; This function is called by:
  4440 ;;		_setPortData
  4441 ;; This function uses a non-reentrant model
  4442 ;;
  4443                           
  4444                           	psect	text5
  4445  0024D6                     __ptext5:
  4446                           	opt stack 0
  4447  0024D6                     _enableSerial:
  4448                           	opt stack 27
  4449                           
  4450                           ;serial.c: 23: LATDbits.LD3 = 1;
  4451                           
  4452                           ;incstack = 0
  4453  0024D6  868C               	bsf	3980,3,c	;volatile
  4454                           
  4455                           ;serial.c: 26: switch (baudRate) {
  4456  0024D8  D00B               	goto	l1130
  4457  0024DA                     l1120:
  4458                           
  4459                           ;serial.c: 31: SPBRG2 = 103;
  4460  0024DA  0E67               	movlw	103
  4461  0024DC  D007               	goto	L33
  4462  0024DE                     l1122:
  4463                           
  4464                           ;serial.c: 34: SPBRG2 = 25;
  4465  0024DE  0E19               	movlw	25
  4466  0024E0  D005               	goto	L33
  4467  0024E2                     l1124:
  4468                           
  4469                           ;serial.c: 37: SPBRG2 = 23;
  4470  0024E2  0E17               	movlw	23
  4471  0024E4  D003               	goto	L33
  4472  0024E6                     l1126:
  4473                           
  4474                           ;serial.c: 40: SPBRG2 = 12;
  4475  0024E6  0E0C               	movlw	12
  4476  0024E8  D001               	goto	L33
  4477  0024EA                     l1128:
  4478                           
  4479                           ;serial.c: 43: SPBRG2 = 207;
  4480  0024EA  0ECF               	movlw	207
  4481  0024EC                     L33:
  4482  0024EC  6E75               	movwf	3957,c	;volatile
  4483                           
  4484                           ;serial.c: 44: }
  4485  0024EE  D02C               	goto	l1132
  4486  0024F0                     l1130:
  4487  0024F0  C001  F003         	movff	enableSerial@baudRate,??_enableSerial
  4488  0024F4  C002  F004         	movff	enableSerial@baudRate+1,??_enableSerial+1
  4489                           
  4490                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 5 sub-sw
      +                          itches
  4491                           ; Switch size 1, requested type "space"
  4492                           ; Number of cases is 5, Range of values is 4 to 75
  4493                           ; switch strategies available:
  4494                           ; Name         Instructions Cycles
  4495                           ; simple_byte           16     9 (average)
  4496                           ;	Chosen strategy is simple_byte
  4497  0024F8  5004               	movf	??_enableSerial+1,w,c
  4498  0024FA  0A04               	xorlw	4	; case 4
  4499  0024FC  B4D8               	btfsc	status,2,c
  4500  0024FE  D00D               	goto	l1722
  4501  002500  0A0D               	xorlw	13	; case 9
  4502  002502  B4D8               	btfsc	status,2,c
  4503  002504  D00D               	goto	l1724
  4504  002506  0A2C               	xorlw	44	; case 37
  4505  002508  B4D8               	btfsc	status,2,c
  4506  00250A  D00F               	goto	l1726
  4507  00250C  0A0D               	xorlw	13	; case 40
  4508  00250E  B4D8               	btfsc	status,2,c
  4509  002510  D011               	goto	l1728
  4510  002512  0A63               	xorlw	99	; case 75
  4511  002514  B4D8               	btfsc	status,2,c
  4512  002516  D013               	goto	l1730
  4513  002518  D7E8               	goto	l1128
  4514  00251A                     l1722:
  4515                           
  4516                           ; Switch size 1, requested type "space"
  4517                           ; Number of cases is 1, Range of values is 176 to 176
  4518                           ; switch strategies available:
  4519                           ; Name         Instructions Cycles
  4520                           ; simple_byte            4     3 (average)
  4521                           ;	Chosen strategy is simple_byte
  4522  00251A  5003               	movf	??_enableSerial,w,c
  4523  00251C  0AB0               	xorlw	176	; case 176
  4524  00251E  D7E5               	goto	l1128
  4525  002520                     l1724:
  4526                           
  4527                           ; Switch size 1, requested type "space"
  4528                           ; Number of cases is 1, Range of values is 96 to 96
  4529                           ; switch strategies available:
  4530                           ; Name         Instructions Cycles
  4531                           ; simple_byte            4     3 (average)
  4532                           ;	Chosen strategy is simple_byte
  4533  002520  5003               	movf	??_enableSerial,w,c
  4534  002522  0A60               	xorlw	96	; case 96
  4535  002524  B4D8               	btfsc	status,2,c
  4536  002526  D7D9               	goto	l1120
  4537  002528  D7E0               	goto	l1128
  4538  00252A                     l1726:
  4539                           
  4540                           ; Switch size 1, requested type "space"
  4541                           ; Number of cases is 1, Range of values is 128 to 128
  4542                           ; switch strategies available:
  4543                           ; Name         Instructions Cycles
  4544                           ; simple_byte            4     3 (average)
  4545                           ;	Chosen strategy is simple_byte
  4546  00252A  5003               	movf	??_enableSerial,w,c
  4547  00252C  0A80               	xorlw	128	; case 128
  4548  00252E  B4D8               	btfsc	status,2,c
  4549  002530  D7D6               	goto	l1122
  4550  002532  D7DB               	goto	l1128
  4551  002534                     l1728:
  4552                           
  4553                           ; Switch size 1, requested type "space"
  4554                           ; Number of cases is 1, Range of values is 177 to 177
  4555                           ; switch strategies available:
  4556                           ; Name         Instructions Cycles
  4557                           ; simple_byte            4     3 (average)
  4558                           ;	Chosen strategy is simple_byte
  4559  002534  5003               	movf	??_enableSerial,w,c
  4560  002536  0AB1               	xorlw	177	; case 177
  4561  002538  B4D8               	btfsc	status,2,c
  4562  00253A  D7D3               	goto	l1124
  4563  00253C  D7D6               	goto	l1128
  4564  00253E                     l1730:
  4565                           
  4566                           ; Switch size 1, requested type "space"
  4567                           ; Number of cases is 1, Range of values is 0 to 0
  4568                           ; switch strategies available:
  4569                           ; Name         Instructions Cycles
  4570                           ; simple_byte            4     3 (average)
  4571                           ;	Chosen strategy is simple_byte
  4572  00253E  5003               	movf	??_enableSerial,w,c
  4573  002540  0A00               	xorlw	0	; case 0
  4574  002542  B4D8               	btfsc	status,2,c
  4575  002544  D7D0               	goto	l1126
  4576  002546  D7D1               	goto	l1128
  4577  002548                     l1132:
  4578                           
  4579                           ;serial.c: 46: SPBRGH2 = 0;
  4580  002548  0E00               	movlw	0
  4581  00254A  6E76               	movwf	3958,c	;volatile
  4582                           
  4583                           ;serial.c: 47: TXSTA2bits.BRGH = 0;
  4584  00254C  9472               	bcf	3954,2,c	;volatile
  4585                           
  4586                           ;serial.c: 48: BAUDCON2bits.BRG16 = 0;
  4587  00254E  9670               	bcf	3952,3,c	;volatile
  4588                           
  4589                           ;serial.c: 50: TXSTA2bits.TX9 = 0;
  4590  002550  9C72               	bcf	3954,6,c	;volatile
  4591                           
  4592                           ;serial.c: 51: RCSTA2bits.RX9 = 0;
  4593  002552  9C71               	bcf	3953,6,c	;volatile
  4594                           
  4595                           ;serial.c: 53: TXSTA2bits.SYNC = 0;
  4596  002554  9872               	bcf	3954,4,c	;volatile
  4597                           
  4598                           ;serial.c: 54: BAUDCON2bits.DTRXP = 0;
  4599  002556  9A70               	bcf	3952,5,c	;volatile
  4600                           
  4601                           ;serial.c: 56: TXSTA2bits.TXEN = 1;
  4602  002558  8A72               	bsf	3954,5,c	;volatile
  4603                           
  4604                           ;serial.c: 57: RCSTA2bits.CREN = 1;
  4605  00255A  8871               	bsf	3953,4,c	;volatile
  4606                           
  4607                           ;serial.c: 59: RCSTA2bits.SPEN = 1;
  4608  00255C  8E71               	bsf	3953,7,c	;volatile
  4609  00255E  0012               	return	
  4610  002560                     __end_of_enableSerial:
  4611                           	opt stack 0
  4612                           tblptru	equ	0xFF8
  4613                           tblptrh	equ	0xFF7
  4614                           tblptrl	equ	0xFF6
  4615                           tablat	equ	0xFF5
  4616                           prodh	equ	0xFF4
  4617                           prodl	equ	0xFF3
  4618                           postinc0	equ	0xFEE
  4619                           wreg	equ	0xFE8
  4620                           postdec1	equ	0xFE5
  4621                           fsr1h	equ	0xFE2
  4622                           fsr1l	equ	0xFE1
  4623                           indf2	equ	0xFDF
  4624                           fsr2h	equ	0xFDA
  4625                           fsr2l	equ	0xFD9
  4626                           status	equ	0xFD8
  4627                           
  4628 ;; *************** function _dispSeg *****************
  4629 ;; Defined at:
  4630 ;;		line 13 in file "source/segment.c"
  4631 ;; Parameters:    Size  Location     Type
  4632 ;;  segment         1    wreg     unsigned char 
  4633 ;;  letter          1    1[COMRAM] unsigned char 
  4634 ;; Auto vars:     Size  Location     Type
  4635 ;;  segment         1    2[COMRAM] unsigned char 
  4636 ;; Return value:  Size  Location     Type
  4637 ;;		None               void
  4638 ;; Registers used:
  4639 ;;		wreg, status,2, status,0
  4640 ;; Tracked objects:
  4641 ;;		On entry : 0/0
  4642 ;;		On exit  : 0/0
  4643 ;;		Unchanged: 0/0
  4644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4645 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4646 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4648 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4649 ;;Total ram usage:        2 bytes
  4650 ;; Hardware stack levels used:    1
  4651 ;; This function calls:
  4652 ;;		Nothing
  4653 ;; This function is called by:
  4654 ;;		_main
  4655 ;;		_setPortData
  4656 ;;		_cycleSegDisplays
  4657 ;; This function uses a non-reentrant model
  4658 ;;
  4659                           
  4660                           	psect	text6
  4661  001FCA                     __ptext6:
  4662                           	opt stack 0
  4663  001FCA                     _dispSeg:
  4664                           	opt stack 27
  4665                           
  4666                           ;incstack = 0
  4667                           ;dispSeg@segment stored from wreg
  4668  001FCA  CFE8 F003          	movff	wreg,dispSeg@segment
  4669                           
  4670                           ;segment.c: 15: switch (letter) {
  4671  001FCE  D154               	goto	l1264
  4672  001FD0                     l1190:
  4673                           
  4674                           ;segment.c: 17: if (segment == 1) {
  4675  001FD0  0403               	decf	dispSeg@segment,w,c
  4676  001FD2  A4D8               	btfss	status,2,c
  4677  001FD4  D007               	goto	l54
  4678                           
  4679                           ;segment.c: 18: LATAbits.LA2 = LATAbits.LA3 = LATAbits.LA4 = LATAbits.LA5 = LATEbits.LE0
      +                           = LATAbits.LA0 = LATAbits.LA1 = 0;
  4680  001FD6  9289               	bcf	3977,1,c	;volatile
  4681  001FD8  9089               	bcf	3977,0,c	;volatile
  4682  001FDA  908D               	bcf	3981,0,c	;volatile
  4683  001FDC  9A89               	bcf	3977,5,c	;volatile
  4684  001FDE  9889               	bcf	3977,4,c	;volatile
  4685  001FE0  9689               	bcf	3977,3,c	;volatile
  4686  001FE2  9489               	bcf	3977,2,c	;volatile
  4687  001FE4                     l54:
  4688                           
  4689                           ;segment.c: 19: }
  4690                           ;segment.c: 20: LATAbits.LA7 = LATAbits.LA6 = LATCbits.LC2 = LATCbits.LC0 = LATCbits.LC1
      +                           = LATEbits.LE1 = LATEbits.LE2 = 0;
  4691  001FE4  948D               	bcf	3981,2,c	;volatile
  4692  001FE6  928D               	bcf	3981,1,c	;volatile
  4693  001FE8  928B               	bcf	3979,1,c	;volatile
  4694  001FEA  908B               	bcf	3979,0,c	;volatile
  4695  001FEC  948B               	bcf	3979,2,c	;volatile
  4696  001FEE  9C89               	bcf	3977,6,c	;volatile
  4697  001FF0  9E89               	bcf	3977,7,c	;volatile
  4698                           
  4699                           ;segment.c: 21: break;
  4700  001FF2  0012               	return	
  4701  001FF4                     l1194:
  4702                           
  4703                           ;segment.c: 23: if (segment == 1) {
  4704  001FF4  0403               	decf	dispSeg@segment,w,c
  4705  001FF6  A4D8               	btfss	status,2,c
  4706  001FF8  D007               	goto	l57
  4707                           
  4708                           ;segment.c: 24: LATAbits.LA1 = 1;
  4709  001FFA  8289               	bsf	3977,1,c	;volatile
  4710                           
  4711                           ;segment.c: 25: LATAbits.LA2 = LATAbits.LA3 = LATAbits.LA4 = LATAbits.LA5 = LATEbits.LE0
      +                           = LATAbits.LA0 = 0;
  4712  001FFC  9089               	bcf	3977,0,c	;volatile
  4713  001FFE  908D               	bcf	3981,0,c	;volatile
  4714  002000  9A89               	bcf	3977,5,c	;volatile
  4715  002002  9889               	bcf	3977,4,c	;volatile
  4716  002004  9689               	bcf	3977,3,c	;volatile
  4717  002006  9489               	bcf	3977,2,c	;volatile
  4718  002008                     l57:
  4719                           
  4720                           ;segment.c: 26: }
  4721                           ;segment.c: 27: LATEbits.LE2 = 1;
  4722  002008  848D               	bsf	3981,2,c	;volatile
  4723                           
  4724                           ;segment.c: 28: LATAbits.LA7 = LATAbits.LA6 = LATCbits.LC2 = LATCbits.LC0 = LATCbits.LC1
      +                           = LATEbits.LE1 = 0;
  4725  00200A  928D               	bcf	3981,1,c	;volatile
  4726  00200C  928B               	bcf	3979,1,c	;volatile
  4727  00200E  908B               	bcf	3979,0,c	;volatile
  4728  002010  948B               	bcf	3979,2,c	;volatile
  4729  002012  9C89               	bcf	3977,6,c	;volatile
  4730  002014  9E89               	bcf	3977,7,c	;volatile
  4731                           
  4732                           ;segment.c: 29: break;
  4733  002016  0012               	return	
  4734  002018                     l1198:
  4735                           
  4736                           ;segment.c: 31: if (segment == 1) {
  4737  002018  0403               	decf	dispSeg@segment,w,c
  4738  00201A  A4D8               	btfss	status,2,c
  4739  00201C  D008               	goto	l59
  4740                           
  4741                           ;segment.c: 32: LATAbits.LA2 = LATAbits.LA3 = LATAbits.LA4 = LATAbits.LA5 = LATEbits.LE0
      +                           = LATAbits.LA0 = 1;
  4742  00201E  8089               	bsf	3977,0,c	;volatile
  4743  002020  808D               	bsf	3981,0,c	;volatile
  4744  002022  8A89               	bsf	3977,5,c	;volatile
  4745  002024  8889               	bsf	3977,4,c	;volatile
  4746  002026  8689               	bsf	3977,3,c	;volatile
  4747  002028  8489               	bsf	3977,2,c	;volatile
  4748                           
  4749                           ;segment.c: 33: LATAbits.LA1 = 0;
  4750  00202A  9289               	bcf	3977,1,c	;volatile
  4751                           
  4752                           ;segment.c: 34: return;
  4753  00202C  0012               	return	
  4754  00202E                     l59:
  4755                           
  4756                           ;segment.c: 35: }
  4757                           ;segment.c: 36: LATAbits.LA7 = LATAbits.LA6 = LATCbits.LC2 = LATCbits.LC0 = LATCbits.LC1
      +                           = LATEbits.LE1 = 1;
  4758  00202E  828D               	bsf	3981,1,c	;volatile
  4759  002030  828B               	bsf	3979,1,c	;volatile
  4760  002032  808B               	bsf	3979,0,c	;volatile
  4761  002034  848B               	bsf	3979,2,c	;volatile
  4762  002036  8C89               	bsf	3977,6,c	;volatile
  4763  002038  8E89               	bsf	3977,7,c	;volatile
  4764                           
  4765                           ;segment.c: 37: LATEbits.LE2 = 0;
  4766  00203A  948D               	bcf	3981,2,c	;volatile
  4767                           
  4768                           ;segment.c: 38: break;
  4769  00203C  0012               	return	
  4770  00203E                     l1202:
  4771                           
  4772                           ;segment.c: 40: if (segment == 1) {
  4773  00203E  0403               	decf	dispSeg@segment,w,c
  4774  002040  A4D8               	btfss	status,2,c
  4775  002042  D008               	goto	l62
  4776                           
  4777                           ;segment.c: 41: LATAbits.LA3 = LATAbits.LA4 = 1;
  4778  002044  8889               	bsf	3977,4,c	;volatile
  4779  002046  8689               	bsf	3977,3,c	;volatile
  4780                           
  4781                           ;segment.c: 42: LATAbits.LA2 = LATAbits.LA5 = LATEbits.LE0 = LATAbits.LA0 = LATAbits.LA1
      +                           = 0;
  4782  002048  9289               	bcf	3977,1,c	;volatile
  4783  00204A  9089               	bcf	3977,0,c	;volatile
  4784  00204C  908D               	bcf	3981,0,c	;volatile
  4785  00204E  9A89               	bcf	3977,5,c	;volatile
  4786  002050  9489               	bcf	3977,2,c	;volatile
  4787                           
  4788                           ;segment.c: 43: return;
  4789  002052  0012               	return	
  4790  002054                     l62:
  4791                           
  4792                           ;segment.c: 44: }
  4793                           ;segment.c: 45: LATAbits.LA6 = LATCbits.LC2 = 1;
  4794  002054  848B               	bsf	3979,2,c	;volatile
  4795  002056  8C89               	bsf	3977,6,c	;volatile
  4796                           
  4797                           ;segment.c: 46: LATAbits.LA7 = LATCbits.LC0 = LATCbits.LC1 = LATEbits.LE1 = LATEbits.LE2
      +                           = 0;
  4798  002058  948D               	bcf	3981,2,c	;volatile
  4799  00205A  928D               	bcf	3981,1,c	;volatile
  4800  00205C  928B               	bcf	3979,1,c	;volatile
  4801  00205E  908B               	bcf	3979,0,c	;volatile
  4802  002060  9E89               	bcf	3977,7,c	;volatile
  4803                           
  4804                           ;segment.c: 47: break;
  4805  002062  0012               	return	
  4806  002064                     l1206:
  4807                           
  4808                           ;segment.c: 49: if (segment == 1) {
  4809  002064  0403               	decf	dispSeg@segment,w,c
  4810  002066  A4D8               	btfss	status,2,c
  4811  002068  D008               	goto	l64
  4812                           
  4813                           ;segment.c: 50: LATAbits.LA2 = LATAbits.LA3 = LATAbits.LA1 = LATEbits.LE0 = LATAbits.LA5
      +                           = 1;
  4814  00206A  8A89               	bsf	3977,5,c	;volatile
  4815  00206C  808D               	bsf	3981,0,c	;volatile
  4816  00206E  8289               	bsf	3977,1,c	;volatile
  4817  002070  8689               	bsf	3977,3,c	;volatile
  4818  002072  8489               	bsf	3977,2,c	;volatile
  4819                           
  4820                           ;segment.c: 51: LATAbits.LA4 = LATAbits.LA0 = 0;
  4821  002074  9089               	bcf	3977,0,c	;volatile
  4822  002076  9889               	bcf	3977,4,c	;volatile
  4823                           
  4824                           ;segment.c: 52: return;
  4825  002078  0012               	return	
  4826  00207A                     l64:
  4827                           
  4828                           ;segment.c: 53: }
  4829                           ;segment.c: 54: LATAbits.LA7 = LATAbits.LA6 = LATEbits.LE2 = LATCbits.LC1 = LATCbits.LC0
      +                           = 1;
  4830  00207A  808B               	bsf	3979,0,c	;volatile
  4831  00207C  828B               	bsf	3979,1,c	;volatile
  4832  00207E  848D               	bsf	3981,2,c	;volatile
  4833  002080  8C89               	bsf	3977,6,c	;volatile
  4834  002082  8E89               	bsf	3977,7,c	;volatile
  4835                           
  4836                           ;segment.c: 55: LATCbits.LC2 = LATEbits.LE1 = 0;
  4837  002084  928D               	bcf	3981,1,c	;volatile
  4838  002086  948B               	bcf	3979,2,c	;volatile
  4839                           
  4840                           ;segment.c: 56: break;
  4841  002088  0012               	return	
  4842  00208A                     l1210:
  4843                           
  4844                           ;segment.c: 58: if (segment == 1) {
  4845  00208A  0403               	decf	dispSeg@segment,w,c
  4846  00208C  A4D8               	btfss	status,2,c
  4847  00208E  D008               	goto	l66
  4848                           
  4849                           ;segment.c: 59: LATAbits.LA2 = LATAbits.LA3 = LATAbits.LA1 = LATAbits.LA4 = LATAbits.LA5
      +                           = 1;
  4850  002090  8A89               	bsf	3977,5,c	;volatile
  4851  002092  8889               	bsf	3977,4,c	;volatile
  4852  002094  8289               	bsf	3977,1,c	;volatile
  4853  002096  8689               	bsf	3977,3,c	;volatile
  4854  002098  8489               	bsf	3977,2,c	;volatile
  4855                           
  4856                           ;segment.c: 60: LATEbits.LE0 = LATAbits.LA0 = 0;
  4857  00209A  9089               	bcf	3977,0,c	;volatile
  4858  00209C  908D               	bcf	3981,0,c	;volatile
  4859                           
  4860                           ;segment.c: 61: return;
  4861  00209E  0012               	return	
  4862  0020A0                     l66:
  4863                           
  4864                           ;segment.c: 62: }
  4865                           ;segment.c: 63: LATAbits.LA7 = LATAbits.LA6 = LATEbits.LE2 = LATCbits.LC2 = LATCbits.LC0
      +                           = 1;
  4866  0020A0  808B               	bsf	3979,0,c	;volatile
  4867  0020A2  848B               	bsf	3979,2,c	;volatile
  4868  0020A4  848D               	bsf	3981,2,c	;volatile
  4869  0020A6  8C89               	bsf	3977,6,c	;volatile
  4870  0020A8  8E89               	bsf	3977,7,c	;volatile
  4871                           
  4872                           ;segment.c: 64: LATCbits.LC1 = LATEbits.LE1 = 0;
  4873  0020AA  928D               	bcf	3981,1,c	;volatile
  4874  0020AC  928B               	bcf	3979,1,c	;volatile
  4875                           
  4876                           ;segment.c: 65: break;
  4877  0020AE  0012               	return	
  4878  0020B0                     l1214:
  4879                           
  4880                           ;segment.c: 67: if (segment == 1) {
  4881  0020B0  0403               	decf	dispSeg@segment,w,c
  4882  0020B2  A4D8               	btfss	status,2,c
  4883  0020B4  D008               	goto	l68
  4884                           
  4885                           ;segment.c: 68: LATAbits.LA0 = LATAbits.LA1 = LATAbits.LA3 = LATAbits.LA4 = 1;
  4886  0020B6  8889               	bsf	3977,4,c	;volatile
  4887  0020B8  8689               	bsf	3977,3,c	;volatile
  4888  0020BA  8289               	bsf	3977,1,c	;volatile
  4889  0020BC  8089               	bsf	3977,0,c	;volatile
  4890                           
  4891                           ;segment.c: 69: LATAbits.LA2 = LATAbits.LA5 = LATEbits.LE0 = 0;
  4892  0020BE  908D               	bcf	3981,0,c	;volatile
  4893  0020C0  9A89               	bcf	3977,5,c	;volatile
  4894  0020C2  9489               	bcf	3977,2,c	;volatile
  4895                           
  4896                           ;segment.c: 70: return;
  4897  0020C4  0012               	return	
  4898  0020C6                     l68:
  4899                           
  4900                           ;segment.c: 71: }
  4901                           ;segment.c: 72: LATEbits.LE1 = LATEbits.LE2 = LATAbits.LA6 = LATCbits.LC2 = 1;
  4902  0020C6  848B               	bsf	3979,2,c	;volatile
  4903  0020C8  8C89               	bsf	3977,6,c	;volatile
  4904  0020CA  848D               	bsf	3981,2,c	;volatile
  4905  0020CC  828D               	bsf	3981,1,c	;volatile
  4906                           
  4907                           ;segment.c: 73: LATAbits.LA7 = LATCbits.LC0 = LATCbits.LC1 = 0;
  4908  0020CE  928B               	bcf	3979,1,c	;volatile
  4909  0020D0  908B               	bcf	3979,0,c	;volatile
  4910  0020D2  9E89               	bcf	3977,7,c	;volatile
  4911                           
  4912                           ;segment.c: 74: break;
  4913  0020D4  0012               	return	
  4914  0020D6                     l1218:
  4915                           
  4916                           ;segment.c: 76: if (segment == 1) {
  4917  0020D6  0403               	decf	dispSeg@segment,w,c
  4918  0020D8  A4D8               	btfss	status,2,c
  4919  0020DA  D008               	goto	l70
  4920                           
  4921                           ;segment.c: 77: LATAbits.LA2 = LATAbits.LA0 = LATAbits.LA1 = LATAbits.LA4 = LATAbits.LA5
      +                           = 1;
  4922  0020DC  8A89               	bsf	3977,5,c	;volatile
  4923  0020DE  8889               	bsf	3977,4,c	;volatile
  4924  0020E0  8289               	bsf	3977,1,c	;volatile
  4925  0020E2  8089               	bsf	3977,0,c	;volatile
  4926  0020E4  8489               	bsf	3977,2,c	;volatile
  4927                           
  4928                           ;segment.c: 78: LATAbits.LA3 = LATEbits.LE0 = 0;
  4929  0020E6  908D               	bcf	3981,0,c	;volatile
  4930  0020E8  9689               	bcf	3977,3,c	;volatile
  4931                           
  4932                           ;segment.c: 79: return;
  4933  0020EA  0012               	return	
  4934  0020EC                     l70:
  4935                           
  4936                           ;segment.c: 80: }
  4937                           ;segment.c: 81: LATAbits.LA7 = LATEbits.LE1 = LATEbits.LE2 = LATCbits.LC2 = LATCbits.LC0
      +                           = 1;
  4938  0020EC  808B               	bsf	3979,0,c	;volatile
  4939  0020EE  848B               	bsf	3979,2,c	;volatile
  4940  0020F0  848D               	bsf	3981,2,c	;volatile
  4941  0020F2  828D               	bsf	3981,1,c	;volatile
  4942  0020F4  8E89               	bsf	3977,7,c	;volatile
  4943                           
  4944                           ;segment.c: 82: LATAbits.LA6 = LATCbits.LC1 = 0;
  4945  0020F6  928B               	bcf	3979,1,c	;volatile
  4946  0020F8  9C89               	bcf	3977,6,c	;volatile
  4947                           
  4948                           ;segment.c: 83: break;
  4949  0020FA  0012               	return	
  4950  0020FC                     l1222:
  4951                           
  4952                           ;segment.c: 85: if (segment == 1) {
  4953  0020FC  0403               	decf	dispSeg@segment,w,c
  4954  0020FE  A4D8               	btfss	status,2,c
  4955  002100  D008               	goto	l72
  4956                           
  4957                           ;segment.c: 86: LATAbits.LA2 = LATAbits.LA0 = LATAbits.LA1 = LATAbits.LA4 = LATAbits.LA5
      +                           = LATEbits.LE0 = 1;
  4958  002102  808D               	bsf	3981,0,c	;volatile
  4959  002104  8A89               	bsf	3977,5,c	;volatile
  4960  002106  8889               	bsf	3977,4,c	;volatile
  4961  002108  8289               	bsf	3977,1,c	;volatile
  4962  00210A  8089               	bsf	3977,0,c	;volatile
  4963  00210C  8489               	bsf	3977,2,c	;volatile
  4964                           
  4965                           ;segment.c: 87: LATAbits.LA3 = 0;
  4966  00210E  9689               	bcf	3977,3,c	;volatile
  4967                           
  4968                           ;segment.c: 88: return;
  4969  002110  0012               	return	
  4970  002112                     l72:
  4971                           
  4972                           ;segment.c: 89: }
  4973                           ;segment.c: 90: LATAbits.LA7 = LATEbits.LE1 = LATEbits.LE2 = LATCbits.LC2 = LATCbits.LC0
      +                           = LATCbits.LC1 = 1;
  4974  002112  828B               	bsf	3979,1,c	;volatile
  4975  002114  808B               	bsf	3979,0,c	;volatile
  4976  002116  848B               	bsf	3979,2,c	;volatile
  4977  002118  848D               	bsf	3981,2,c	;volatile
  4978  00211A  828D               	bsf	3981,1,c	;volatile
  4979  00211C  8E89               	bsf	3977,7,c	;volatile
  4980                           
  4981                           ;segment.c: 91: LATAbits.LA6 = 0;
  4982  00211E  9C89               	bcf	3977,6,c	;volatile
  4983                           
  4984                           ;segment.c: 92: break;
  4985  002120  0012               	return	
  4986  002122                     l1226:
  4987                           
  4988                           ;segment.c: 94: if (segment == 1) {
  4989  002122  0403               	decf	dispSeg@segment,w,c
  4990  002124  A4D8               	btfss	status,2,c
  4991  002126  D008               	goto	l74
  4992                           
  4993                           ;segment.c: 95: LATAbits.LA2 = LATAbits.LA3 = LATAbits.LA4 = 1;
  4994  002128  8889               	bsf	3977,4,c	;volatile
  4995  00212A  8689               	bsf	3977,3,c	;volatile
  4996  00212C  8489               	bsf	3977,2,c	;volatile
  4997                           
  4998                           ;segment.c: 96: LATAbits.LA5 = LATEbits.LE0 = LATAbits.LA0 = LATAbits.LA1 = 0;
  4999  00212E  9289               	bcf	3977,1,c	;volatile
  5000  002130  9089               	bcf	3977,0,c	;volatile
  5001  002132  908D               	bcf	3981,0,c	;volatile
  5002  002134  9A89               	bcf	3977,5,c	;volatile
  5003                           
  5004                           ;segment.c: 97: return;
  5005  002136  0012               	return	
  5006  002138                     l74:
  5007                           
  5008                           ;segment.c: 98: }
  5009                           ;segment.c: 99: LATAbits.LA7 = LATAbits.LA6 = LATCbits.LC2 = 1;
  5010  002138  848B               	bsf	3979,2,c	;volatile
  5011  00213A  8C89               	bsf	3977,6,c	;volatile
  5012  00213C  8E89               	bsf	3977,7,c	;volatile
  5013                           
  5014                           ;segment.c: 100: LATCbits.LC0 = LATCbits.LC1 = LATEbits.LE1 = LATEbits.LE2 = 0;
  5015  00213E  948D               	bcf	3981,2,c	;volatile
  5016  002140  928D               	bcf	3981,1,c	;volatile
  5017  002142  928B               	bcf	3979,1,c	;volatile
  5018  002144  908B               	bcf	3979,0,c	;volatile
  5019                           
  5020                           ;segment.c: 101: break;
  5021  002146  0012               	return	
  5022  002148                     l1230:
  5023                           
  5024                           ;segment.c: 103: if (segment == 1) {
  5025  002148  0403               	decf	dispSeg@segment,w,c
  5026  00214A  A4D8               	btfss	status,2,c
  5027  00214C  D008               	goto	l76
  5028                           
  5029                           ;segment.c: 104: LATAbits.LA2 = LATAbits.LA3 = LATAbits.LA4 = LATAbits.LA5 = LATEbits.LE
      +                          0 = LATAbits.LA0 = LATAbits.LA1 = 1;
  5030  00214E  8289               	bsf	3977,1,c	;volatile
  5031  002150  8089               	bsf	3977,0,c	;volatile
  5032  002152  808D               	bsf	3981,0,c	;volatile
  5033  002154  8A89               	bsf	3977,5,c	;volatile
  5034  002156  8889               	bsf	3977,4,c	;volatile
  5035  002158  8689               	bsf	3977,3,c	;volatile
  5036  00215A  8489               	bsf	3977,2,c	;volatile
  5037                           
  5038                           ;segment.c: 105: return;
  5039  00215C  0012               	return	
  5040  00215E                     l76:
  5041                           
  5042                           ;segment.c: 106: }
  5043                           ;segment.c: 107: LATAbits.LA7 = LATAbits.LA6 = LATCbits.LC2 = LATCbits.LC0 = LATCbits.LC
      +                          1 = LATEbits.LE1 = LATEbits.LE2 = 1;
  5044  00215E  848D               	bsf	3981,2,c	;volatile
  5045  002160  828D               	bsf	3981,1,c	;volatile
  5046  002162  828B               	bsf	3979,1,c	;volatile
  5047  002164  808B               	bsf	3979,0,c	;volatile
  5048  002166  848B               	bsf	3979,2,c	;volatile
  5049  002168  8C89               	bsf	3977,6,c	;volatile
  5050  00216A  8E89               	bsf	3977,7,c	;volatile
  5051                           
  5052                           ;segment.c: 108: break;
  5053  00216C  0012               	return	
  5054  00216E                     l1234:
  5055                           
  5056                           ;segment.c: 110: if (segment == 1) {
  5057  00216E  0403               	decf	dispSeg@segment,w,c
  5058  002170  A4D8               	btfss	status,2,c
  5059  002172  D008               	goto	l78
  5060                           
  5061                           ;segment.c: 111: LATAbits.LA2 = LATAbits.LA3 = LATAbits.LA4 = LATAbits.LA5 = LATAbits.LA
      +                          0 = LATAbits.LA1 = 1;
  5062  002174  8289               	bsf	3977,1,c	;volatile
  5063  002176  8089               	bsf	3977,0,c	;volatile
  5064  002178  8A89               	bsf	3977,5,c	;volatile
  5065  00217A  8889               	bsf	3977,4,c	;volatile
  5066  00217C  8689               	bsf	3977,3,c	;volatile
  5067  00217E  8489               	bsf	3977,2,c	;volatile
  5068                           
  5069                           ;segment.c: 112: LATEbits.LE0 = 0;
  5070  002180  908D               	bcf	3981,0,c	;volatile
  5071                           
  5072                           ;segment.c: 113: return;
  5073  002182  0012               	return	
  5074  002184                     l78:
  5075                           
  5076                           ;segment.c: 114: }
  5077                           ;segment.c: 115: LATAbits.LA7 = LATAbits.LA6 = LATCbits.LC2 = LATCbits.LC0 = LATEbits.LE
      +                          1 = LATEbits.LE2 = 1;
  5078  002184  848D               	bsf	3981,2,c	;volatile
  5079  002186  828D               	bsf	3981,1,c	;volatile
  5080  002188  808B               	bsf	3979,0,c	;volatile
  5081  00218A  848B               	bsf	3979,2,c	;volatile
  5082  00218C  8C89               	bsf	3977,6,c	;volatile
  5083  00218E  8E89               	bsf	3977,7,c	;volatile
  5084                           
  5085                           ;segment.c: 116: LATCbits.LC1 = 0;
  5086  002190  928B               	bcf	3979,1,c	;volatile
  5087                           
  5088                           ;segment.c: 117: break;
  5089  002192  0012               	return	
  5090  002194                     l1238:
  5091                           
  5092                           ;segment.c: 119: if (segment == 1) {
  5093  002194  0403               	decf	dispSeg@segment,w,c
  5094  002196  A4D8               	btfss	status,2,c
  5095  002198  D008               	goto	l80
  5096                           
  5097                           ;segment.c: 120: LATAbits.LA2 = LATAbits.LA3 = LATAbits.LA4 = LATEbits.LE0 = LATAbits.LA
      +                          0 = LATAbits.LA1 = 1;
  5098  00219A  8289               	bsf	3977,1,c	;volatile
  5099  00219C  8089               	bsf	3977,0,c	;volatile
  5100  00219E  808D               	bsf	3981,0,c	;volatile
  5101  0021A0  8889               	bsf	3977,4,c	;volatile
  5102  0021A2  8689               	bsf	3977,3,c	;volatile
  5103  0021A4  8489               	bsf	3977,2,c	;volatile
  5104                           
  5105                           ;segment.c: 121: LATAbits.LA5 = 0;
  5106  0021A6  9A89               	bcf	3977,5,c	;volatile
  5107                           
  5108                           ;segment.c: 122: return;
  5109  0021A8  0012               	return	
  5110  0021AA                     l80:
  5111                           
  5112                           ;segment.c: 123: }
  5113                           ;segment.c: 124: LATAbits.LA7 = LATAbits.LA6 = LATCbits.LC2 = LATCbits.LC1 = LATEbits.LE
      +                          1 = LATEbits.LE2 = 1;
  5114  0021AA  848D               	bsf	3981,2,c	;volatile
  5115  0021AC  828D               	bsf	3981,1,c	;volatile
  5116  0021AE  828B               	bsf	3979,1,c	;volatile
  5117  0021B0  848B               	bsf	3979,2,c	;volatile
  5118  0021B2  8C89               	bsf	3977,6,c	;volatile
  5119  0021B4  8E89               	bsf	3977,7,c	;volatile
  5120                           
  5121                           ;segment.c: 125: LATCbits.LC0 = 0;
  5122  0021B6  908B               	bcf	3979,0,c	;volatile
  5123                           
  5124                           ;segment.c: 126: break;
  5125  0021B8  0012               	return	
  5126  0021BA                     l1242:
  5127                           
  5128                           ;segment.c: 128: if (segment == 1) {
  5129  0021BA  0403               	decf	dispSeg@segment,w,c
  5130  0021BC  A4D8               	btfss	status,2,c
  5131  0021BE  D008               	goto	l82
  5132                           
  5133                           ;segment.c: 129: LATAbits.LA4 = LATAbits.LA5 = LATEbits.LE0 = LATAbits.LA0 = LATAbits.LA
      +                          1 = 1;
  5134  0021C0  8289               	bsf	3977,1,c	;volatile
  5135  0021C2  8089               	bsf	3977,0,c	;volatile
  5136  0021C4  808D               	bsf	3981,0,c	;volatile
  5137  0021C6  8A89               	bsf	3977,5,c	;volatile
  5138  0021C8  8889               	bsf	3977,4,c	;volatile
  5139                           
  5140                           ;segment.c: 130: LATAbits.LA2 = LATAbits.LA3 = 0;
  5141  0021CA  9689               	bcf	3977,3,c	;volatile
  5142  0021CC  9489               	bcf	3977,2,c	;volatile
  5143                           
  5144                           ;segment.c: 131: return;
  5145  0021CE  0012               	return	
  5146  0021D0                     l82:
  5147                           
  5148                           ;segment.c: 132: }
  5149                           ;segment.c: 133: LATCbits.LC2 = LATCbits.LC0 = LATCbits.LC1 = LATEbits.LE1 = LATEbits.LE
      +                          2 = 1;
  5150  0021D0  848D               	bsf	3981,2,c	;volatile
  5151  0021D2  828D               	bsf	3981,1,c	;volatile
  5152  0021D4  828B               	bsf	3979,1,c	;volatile
  5153  0021D6  808B               	bsf	3979,0,c	;volatile
  5154  0021D8  848B               	bsf	3979,2,c	;volatile
  5155                           
  5156                           ;segment.c: 134: LATAbits.LA7 = LATAbits.LA6 = 0;
  5157  0021DA  9C89               	bcf	3977,6,c	;volatile
  5158  0021DC  9E89               	bcf	3977,7,c	;volatile
  5159                           
  5160                           ;segment.c: 135: break;
  5161  0021DE  0012               	return	
  5162  0021E0                     l1246:
  5163                           
  5164                           ;segment.c: 137: if (segment == 1) {
  5165  0021E0  0403               	decf	dispSeg@segment,w,c
  5166  0021E2  A4D8               	btfss	status,2,c
  5167  0021E4  D008               	goto	l84
  5168                           
  5169                           ;segment.c: 138: LATAbits.LA2 = LATAbits.LA5 = LATEbits.LE0 = LATAbits.LA0 = 1;
  5170  0021E6  8089               	bsf	3977,0,c	;volatile
  5171  0021E8  808D               	bsf	3981,0,c	;volatile
  5172  0021EA  8A89               	bsf	3977,5,c	;volatile
  5173  0021EC  8489               	bsf	3977,2,c	;volatile
  5174                           
  5175                           ;segment.c: 139: LATAbits.LA3 = LATAbits.LA4 = LATAbits.LA1 = 0;
  5176  0021EE  9289               	bcf	3977,1,c	;volatile
  5177  0021F0  9889               	bcf	3977,4,c	;volatile
  5178  0021F2  9689               	bcf	3977,3,c	;volatile
  5179                           
  5180                           ;segment.c: 140: return;
  5181  0021F4  0012               	return	
  5182  0021F6                     l84:
  5183                           
  5184                           ;segment.c: 141: }
  5185                           ;segment.c: 142: LATAbits.LA7 = LATCbits.LC0 = LATCbits.LC1 = LATEbits.LE1 = 1;
  5186  0021F6  828D               	bsf	3981,1,c	;volatile
  5187  0021F8  828B               	bsf	3979,1,c	;volatile
  5188  0021FA  808B               	bsf	3979,0,c	;volatile
  5189  0021FC  8E89               	bsf	3977,7,c	;volatile
  5190                           
  5191                           ;segment.c: 143: LATAbits.LA6 = LATCbits.LC2 = LATEbits.LE2 = 0;
  5192  0021FE  948D               	bcf	3981,2,c	;volatile
  5193  002200  948B               	bcf	3979,2,c	;volatile
  5194  002202  9C89               	bcf	3977,6,c	;volatile
  5195                           
  5196                           ;segment.c: 144: break;
  5197  002204  0012               	return	
  5198  002206                     l1250:
  5199                           
  5200                           ;segment.c: 146: if (segment == 1) {
  5201  002206  0403               	decf	dispSeg@segment,w,c
  5202  002208  A4D8               	btfss	status,2,c
  5203  00220A  D008               	goto	l86
  5204                           
  5205                           ;segment.c: 147: LATAbits.LA3 = LATAbits.LA4 = LATAbits.LA5 = LATEbits.LE0 = LATAbits.LA
      +                          1 = 1;
  5206  00220C  8289               	bsf	3977,1,c	;volatile
  5207  00220E  808D               	bsf	3981,0,c	;volatile
  5208  002210  8A89               	bsf	3977,5,c	;volatile
  5209  002212  8889               	bsf	3977,4,c	;volatile
  5210  002214  8689               	bsf	3977,3,c	;volatile
  5211                           
  5212                           ;segment.c: 148: LATAbits.LA2 = LATAbits.LA0 = 0;
  5213  002216  9089               	bcf	3977,0,c	;volatile
  5214  002218  9489               	bcf	3977,2,c	;volatile
  5215                           
  5216                           ;segment.c: 149: return;
  5217  00221A  0012               	return	
  5218  00221C                     l86:
  5219                           
  5220                           ;segment.c: 150: }
  5221                           ;segment.c: 151: LATAbits.LA6 = LATCbits.LC2 = LATCbits.LC0 = LATCbits.LC1 = LATEbits.LE
      +                          2 = 1;
  5222  00221C  848D               	bsf	3981,2,c	;volatile
  5223  00221E  828B               	bsf	3979,1,c	;volatile
  5224  002220  808B               	bsf	3979,0,c	;volatile
  5225  002222  848B               	bsf	3979,2,c	;volatile
  5226  002224  8C89               	bsf	3977,6,c	;volatile
  5227                           
  5228                           ;segment.c: 152: LATAbits.LA7 = LATEbits.LE1 = 0;
  5229  002226  928D               	bcf	3981,1,c	;volatile
  5230  002228  9E89               	bcf	3977,7,c	;volatile
  5231                           
  5232                           ;segment.c: 153: break;
  5233  00222A  0012               	return	
  5234  00222C                     l1254:
  5235                           
  5236                           ;segment.c: 155: if (segment == 1) {
  5237  00222C  0403               	decf	dispSeg@segment,w,c
  5238  00222E  A4D8               	btfss	status,2,c
  5239  002230  D008               	goto	l88
  5240                           
  5241                           ;segment.c: 156: LATAbits.LA2 = LATAbits.LA5 = LATEbits.LE0 = LATAbits.LA0 = LATAbits.LA
      +                          1 = 1;
  5242  002232  8289               	bsf	3977,1,c	;volatile
  5243  002234  8089               	bsf	3977,0,c	;volatile
  5244  002236  808D               	bsf	3981,0,c	;volatile
  5245  002238  8A89               	bsf	3977,5,c	;volatile
  5246  00223A  8489               	bsf	3977,2,c	;volatile
  5247                           
  5248                           ;segment.c: 157: LATAbits.LA3 = LATAbits.LA4 = 0;
  5249  00223C  9889               	bcf	3977,4,c	;volatile
  5250  00223E  9689               	bcf	3977,3,c	;volatile
  5251                           
  5252                           ;segment.c: 158: return;
  5253  002240  0012               	return	
  5254  002242                     l88:
  5255                           
  5256                           ;segment.c: 159: }
  5257                           ;segment.c: 160: LATAbits.LA7 = LATCbits.LC0 = LATCbits.LC1 = LATEbits.LE1 = LATEbits.LE
      +                          2 = 1;
  5258  002242  848D               	bsf	3981,2,c	;volatile
  5259  002244  828D               	bsf	3981,1,c	;volatile
  5260  002246  828B               	bsf	3979,1,c	;volatile
  5261  002248  808B               	bsf	3979,0,c	;volatile
  5262  00224A  8E89               	bsf	3977,7,c	;volatile
  5263                           
  5264                           ;segment.c: 161: LATAbits.LA6 = LATCbits.LC2 = 0;
  5265  00224C  948B               	bcf	3979,2,c	;volatile
  5266  00224E  9C89               	bcf	3977,6,c	;volatile
  5267                           
  5268                           ;segment.c: 162: break;
  5269  002250  0012               	return	
  5270  002252                     l1258:
  5271                           
  5272                           ;segment.c: 164: if (segment == 1) {
  5273  002252  0403               	decf	dispSeg@segment,w,c
  5274  002254  A4D8               	btfss	status,2,c
  5275  002256  D008               	goto	l90
  5276                           
  5277                           ;segment.c: 165: LATAbits.LA2 = LATEbits.LE0 = LATAbits.LA0 = LATAbits.LA1 = 1;
  5278  002258  8289               	bsf	3977,1,c	;volatile
  5279  00225A  8089               	bsf	3977,0,c	;volatile
  5280  00225C  808D               	bsf	3981,0,c	;volatile
  5281  00225E  8489               	bsf	3977,2,c	;volatile
  5282                           
  5283                           ;segment.c: 166: LATAbits.LA3 = LATAbits.LA4 = LATAbits.LA5 = 0;
  5284  002260  9A89               	bcf	3977,5,c	;volatile
  5285  002262  9889               	bcf	3977,4,c	;volatile
  5286  002264  9689               	bcf	3977,3,c	;volatile
  5287                           
  5288                           ;segment.c: 167: return;
  5289  002266  0012               	return	
  5290  002268                     l90:
  5291                           
  5292                           ;segment.c: 168: }
  5293                           ;segment.c: 169: LATAbits.LA7 = LATCbits.LC1 = LATEbits.LE1 = LATEbits.LE2 = 1;
  5294  002268  848D               	bsf	3981,2,c	;volatile
  5295  00226A  828D               	bsf	3981,1,c	;volatile
  5296  00226C  828B               	bsf	3979,1,c	;volatile
  5297  00226E  8E89               	bsf	3977,7,c	;volatile
  5298                           
  5299                           ;segment.c: 170: LATAbits.LA6 = LATCbits.LC2 = LATCbits.LC0 = 0;
  5300  002270  908B               	bcf	3979,0,c	;volatile
  5301  002272  948B               	bcf	3979,2,c	;volatile
  5302  002274  9C89               	bcf	3977,6,c	;volatile
  5303                           
  5304                           ;segment.c: 171: break;
  5305  002276  0012               	return	
  5306  002278                     l1264:
  5307  002278  5002               	movf	dispSeg@letter,w,c
  5308                           
  5309                           ; Switch size 1, requested type "space"
  5310                           ; Number of cases is 18, Range of values is 45 to 120
  5311                           ; switch strategies available:
  5312                           ; Name         Instructions Cycles
  5313                           ; simple_byte           55    28 (average)
  5314                           ;	Chosen strategy is simple_byte
  5315  00227A  0A2D               	xorlw	45	; case 45
  5316  00227C  B4D8               	btfsc	status,2,c
  5317  00227E  D6BA               	goto	l1194
  5318  002280  0A1D               	xorlw	29	; case 48
  5319  002282  B4D8               	btfsc	status,2,c
  5320  002284  D6C9               	goto	l1198
  5321  002286  0A01               	xorlw	1	; case 49
  5322  002288  B4D8               	btfsc	status,2,c
  5323  00228A  D6D9               	goto	l1202
  5324  00228C  0A03               	xorlw	3	; case 50
  5325  00228E  B4D8               	btfsc	status,2,c
  5326  002290  D6E9               	goto	l1206
  5327  002292  0A01               	xorlw	1	; case 51
  5328  002294  B4D8               	btfsc	status,2,c
  5329  002296  D6F9               	goto	l1210
  5330  002298  0A07               	xorlw	7	; case 52
  5331  00229A  B4D8               	btfsc	status,2,c
  5332  00229C  D709               	goto	l1214
  5333  00229E  0A01               	xorlw	1	; case 53
  5334  0022A0  B4D8               	btfsc	status,2,c
  5335  0022A2  D719               	goto	l1218
  5336  0022A4  0A03               	xorlw	3	; case 54
  5337  0022A6  B4D8               	btfsc	status,2,c
  5338  0022A8  D729               	goto	l1222
  5339  0022AA  0A01               	xorlw	1	; case 55
  5340  0022AC  B4D8               	btfsc	status,2,c
  5341  0022AE  D739               	goto	l1226
  5342  0022B0  0A0F               	xorlw	15	; case 56
  5343  0022B2  B4D8               	btfsc	status,2,c
  5344  0022B4  D749               	goto	l1230
  5345  0022B6  0A01               	xorlw	1	; case 57
  5346  0022B8  B4D8               	btfsc	status,2,c
  5347  0022BA  D759               	goto	l1234
  5348  0022BC  0A58               	xorlw	88	; case 97
  5349  0022BE  B4D8               	btfsc	status,2,c
  5350  0022C0  D769               	goto	l1238
  5351  0022C2  0A03               	xorlw	3	; case 98
  5352  0022C4  B4D8               	btfsc	status,2,c
  5353  0022C6  D779               	goto	l1242
  5354  0022C8  0A01               	xorlw	1	; case 99
  5355  0022CA  B4D8               	btfsc	status,2,c
  5356  0022CC  D789               	goto	l1246
  5357  0022CE  0A07               	xorlw	7	; case 100
  5358  0022D0  B4D8               	btfsc	status,2,c
  5359  0022D2  D799               	goto	l1250
  5360  0022D4  0A01               	xorlw	1	; case 101
  5361  0022D6  B4D8               	btfsc	status,2,c
  5362  0022D8  D7A9               	goto	l1254
  5363  0022DA  0A03               	xorlw	3	; case 102
  5364  0022DC  B4D8               	btfsc	status,2,c
  5365  0022DE  D7B9               	goto	l1258
  5366  0022E0  0A1E               	xorlw	30	; case 120
  5367  0022E2  A4D8               	btfss	status,2,c
  5368  0022E4  0012               	return	
  5369  0022E6  D674               	goto	l1190
  5370  0022E8                     __end_of_dispSeg:
  5371                           	opt stack 0
  5372                           tblptru	equ	0xFF8
  5373                           tblptrh	equ	0xFF7
  5374                           tblptrl	equ	0xFF6
  5375                           tablat	equ	0xFF5
  5376                           prodh	equ	0xFF4
  5377                           prodl	equ	0xFF3
  5378                           postinc0	equ	0xFEE
  5379                           wreg	equ	0xFE8
  5380                           postdec1	equ	0xFE5
  5381                           fsr1h	equ	0xFE2
  5382                           fsr1l	equ	0xFE1
  5383                           indf2	equ	0xFDF
  5384                           fsr2h	equ	0xFDA
  5385                           fsr2l	equ	0xFD9
  5386                           status	equ	0xFD8
  5387                           
  5388 ;; *************** function _setMXbits *****************
  5389 ;; Defined at:
  5390 ;;		line 37 in file "source/emulator.c"
  5391 ;; Parameters:    Size  Location     Type
  5392 ;;  subRegister     1    wreg     unsigned char 
  5393 ;;  value           1    0[COMRAM] unsigned char 
  5394 ;; Auto vars:     Size  Location     Type
  5395 ;;  subRegister     1    5[COMRAM] unsigned char 
  5396 ;;  regMX_temp      2    3[COMRAM] unsigned int 
  5397 ;;  value_temp      2    1[COMRAM] unsigned int 
  5398 ;; Return value:  Size  Location     Type
  5399 ;;		None               void
  5400 ;; Registers used:
  5401 ;;		wreg, status,2, status,0
  5402 ;; Tracked objects:
  5403 ;;		On entry : 0/0
  5404 ;;		On exit  : 0/0
  5405 ;;		Unchanged: 0/0
  5406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5407 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5408 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5410 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5411 ;;Total ram usage:        6 bytes
  5412 ;; Hardware stack levels used:    1
  5413 ;; This function calls:
  5414 ;;		Nothing
  5415 ;; This function is called by:
  5416 ;;		_processOpcode
  5417 ;; This function uses a non-reentrant model
  5418 ;;
  5419                           
  5420                           	psect	text7
  5421  0026E8                     __ptext7:
  5422                           	opt stack 0
  5423  0026E8                     _setMXbits:
  5424                           	opt stack 28
  5425                           
  5426                           ;incstack = 0
  5427                           ;setMXbits@subRegister stored from wreg
  5428  0026E8  CFE8 F006          	movff	wreg,setMXbits@subRegister
  5429                           
  5430                           ;emulator.c: 39: uint16_t value_temp = (uint16_t) value;
  5431  0026EC  C001  F002         	movff	setMXbits@value,setMXbits@value_temp
  5432  0026F0  6A03               	clrf	setMXbits@value_temp+1,c
  5433                           
  5434                           ;emulator.c: 40: uint16_t regMX_temp = regMX;
  5435  0026F2  C017  F004         	movff	_regMX,setMXbits@regMX_temp
  5436  0026F6  C018  F005         	movff	_regMX+1,setMXbits@regMX_temp+1
  5437                           
  5438                           ;emulator.c: 54: }
  5439                           
  5440                           ;emulator.c: 53: break;
  5441                           
  5442                           ;emulator.c: 50: case 1:
  5443                           
  5444                           ;emulator.c: 48: break;
  5445                           
  5446                           ;emulator.c: 43: {
  5447                           ;emulator.c: 44: case 0:
  5448                           
  5449                           ;emulator.c: 42: switch(subRegister)
  5450  0026FA  5006               	movf	setMXbits@subRegister,w,c
  5451                           
  5452                           ; Switch size 1, requested type "space"
  5453                           ; Number of cases is 2, Range of values is 0 to 1
  5454                           ; switch strategies available:
  5455                           ; Name         Instructions Cycles
  5456                           ; simple_byte            7     4 (average)
  5457                           ;	Chosen strategy is simple_byte
  5458  0026FC  0A00               	xorlw	0	; case 0
  5459  0026FE  A4D8               	btfss	status,2,c
  5460  002700  0A01               	xorlw	1	; case 1
  5461                           
  5462                           ;emulator.c: 56: regMX = regMX_temp + value_temp;
  5463  002702  5002               	movf	setMXbits@value_temp,w,c
  5464  002704  2404               	addwf	setMXbits@regMX_temp,w,c
  5465  002706  6E17               	movwf	_regMX,c
  5466  002708  5003               	movf	setMXbits@value_temp+1,w,c
  5467  00270A  2005               	addwfc	setMXbits@regMX_temp+1,w,c
  5468  00270C  6E18               	movwf	_regMX+1,c
  5469  00270E  0012               	return	
  5470  002710                     __end_of_setMXbits:
  5471                           	opt stack 0
  5472                           tblptru	equ	0xFF8
  5473                           tblptrh	equ	0xFF7
  5474                           tblptrl	equ	0xFF6
  5475                           tablat	equ	0xFF5
  5476                           prodh	equ	0xFF4
  5477                           prodl	equ	0xFF3
  5478                           postinc0	equ	0xFEE
  5479                           wreg	equ	0xFE8
  5480                           postdec1	equ	0xFE5
  5481                           fsr1h	equ	0xFE2
  5482                           fsr1l	equ	0xFE1
  5483                           indf2	equ	0xFDF
  5484                           fsr2h	equ	0xFDA
  5485                           fsr2l	equ	0xFD9
  5486                           status	equ	0xFD8
  5487                           
  5488 ;; *************** function _immData_toPointer *****************
  5489 ;; Defined at:
  5490 ;;		line 150 in file "source/emulator.c"
  5491 ;; Parameters:    Size  Location     Type
  5492 ;;		None
  5493 ;; Auto vars:     Size  Location     Type
  5494 ;;  pointer         2    2[COMRAM] unsigned int 
  5495 ;; Return value:  Size  Location     Type
  5496 ;;                  2    0[COMRAM] unsigned int 
  5497 ;; Registers used:
  5498 ;;		wreg, status,2, status,0
  5499 ;; Tracked objects:
  5500 ;;		On entry : 0/0
  5501 ;;		On exit  : 0/0
  5502 ;;		Unchanged: 0/0
  5503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5504 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5505 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5507 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5508 ;;Total ram usage:        4 bytes
  5509 ;; Hardware stack levels used:    1
  5510 ;; This function calls:
  5511 ;;		Nothing
  5512 ;; This function is called by:
  5513 ;;		_processOpcode
  5514 ;; This function uses a non-reentrant model
  5515 ;;
  5516                           
  5517                           	psect	text8
  5518  002736                     __ptext8:
  5519                           	opt stack 0
  5520  002736                     _immData_toPointer:
  5521                           	opt stack 28
  5522                           
  5523                           ;emulator.c: 152: uint16_t pointer = (uint16_t) immData_1;
  5524                           
  5525                           ;incstack = 0
  5526  002736  C01C  F003         	movff	_immData_1,immData_toPointer@pointer
  5527  00273A  6A04               	clrf	immData_toPointer@pointer+1,c
  5528                           
  5529                           ;emulator.c: 154: pointer += immData_2;
  5530  00273C  501D               	movf	_immData_2,w,c
  5531  00273E  2603               	addwf	immData_toPointer@pointer,f,c
  5532  002740  0E00               	movlw	0
  5533  002742  2204               	addwfc	immData_toPointer@pointer+1,f,c
  5534                           
  5535                           ;emulator.c: 155: return pointer;
  5536  002744  C003  F001         	movff	immData_toPointer@pointer,?_immData_toPointer
  5537  002748  C004  F002         	movff	immData_toPointer@pointer+1,?_immData_toPointer+1
  5538  00274C  0012               	return	
  5539  00274E                     __end_of_immData_toPointer:
  5540                           	opt stack 0
  5541                           tblptru	equ	0xFF8
  5542                           tblptrh	equ	0xFF7
  5543                           tblptrl	equ	0xFF6
  5544                           tablat	equ	0xFF5
  5545                           prodh	equ	0xFF4
  5546                           prodl	equ	0xFF3
  5547                           postinc0	equ	0xFEE
  5548                           wreg	equ	0xFE8
  5549                           postdec1	equ	0xFE5
  5550                           fsr1h	equ	0xFE2
  5551                           fsr1l	equ	0xFE1
  5552                           indf2	equ	0xFDF
  5553                           fsr2h	equ	0xFDA
  5554                           fsr2l	equ	0xFD9
  5555                           status	equ	0xFD8
  5556                           
  5557 ;; *************** function _getPortData *****************
  5558 ;; Defined at:
  5559 ;;		line 179 in file "source/emulator.c"
  5560 ;; Parameters:    Size  Location     Type
  5561 ;;  portNumber      1    wreg     unsigned char 
  5562 ;; Auto vars:     Size  Location     Type
  5563 ;;  portNumber      1    0[COMRAM] unsigned char 
  5564 ;; Return value:  Size  Location     Type
  5565 ;;                  1    wreg      unsigned char 
  5566 ;; Registers used:
  5567 ;;		wreg, status,2, status,0
  5568 ;; Tracked objects:
  5569 ;;		On entry : 0/0
  5570 ;;		On exit  : 0/0
  5571 ;;		Unchanged: 0/0
  5572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5574 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5576 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5577 ;;Total ram usage:        1 bytes
  5578 ;; Hardware stack levels used:    1
  5579 ;; This function calls:
  5580 ;;		Nothing
  5581 ;; This function is called by:
  5582 ;;		_processOpcode
  5583 ;; This function uses a non-reentrant model
  5584 ;;
  5585                           
  5586                           	psect	text9
  5587  002766                     __ptext9:
  5588                           	opt stack 0
  5589  002766                     _getPortData:
  5590                           	opt stack 28
  5591                           
  5592                           ;incstack = 0
  5593                           ;getPortData@portNumber stored from wreg
  5594  002766  CFE8 F001          	movff	wreg,getPortData@portNumber
  5595                           
  5596                           ;emulator.c: 181: switch (portNumber)
  5597  00276A  D002               	goto	l1110
  5598  00276C                     l225:
  5599                           
  5600                           ;emulator.c: 184: return RCREG2;
  5601  00276C  5074               	movf	3956,w,c	;volatile
  5602  00276E  0012               	return	
  5603  002770                     l1110:
  5604  002770  5001               	movf	getPortData@portNumber,w,c
  5605                           
  5606                           ; Switch size 1, requested type "space"
  5607                           ; Number of cases is 1, Range of values is 2 to 2
  5608                           ; switch strategies available:
  5609                           ; Name         Instructions Cycles
  5610                           ; simple_byte            4     3 (average)
  5611                           ;	Chosen strategy is simple_byte
  5612  002772  0A02               	xorlw	2	; case 2
  5613  002774  B4D8               	btfsc	status,2,c
  5614  002776  D7FA               	goto	l225
  5615                           
  5616                           ;emulator.c: 187: return 0;
  5617  002778  0E00               	movlw	0
  5618  00277A  0012               	return	
  5619  00277C                     __end_of_getPortData:
  5620                           	opt stack 0
  5621                           tblptru	equ	0xFF8
  5622                           tblptrh	equ	0xFF7
  5623                           tblptrl	equ	0xFF6
  5624                           tablat	equ	0xFF5
  5625                           prodh	equ	0xFF4
  5626                           prodl	equ	0xFF3
  5627                           postinc0	equ	0xFEE
  5628                           wreg	equ	0xFE8
  5629                           postdec1	equ	0xFE5
  5630                           fsr1h	equ	0xFE2
  5631                           fsr1l	equ	0xFE1
  5632                           indf2	equ	0xFDF
  5633                           fsr2h	equ	0xFDA
  5634                           fsr2l	equ	0xFD9
  5635                           status	equ	0xFD8
  5636                           
  5637 ;; *************** function _getMXbits *****************
  5638 ;; Defined at:
  5639 ;;		line 20 in file "source/emulator.c"
  5640 ;; Parameters:    Size  Location     Type
  5641 ;;  subRegister     1    wreg     unsigned char 
  5642 ;; Auto vars:     Size  Location     Type
  5643 ;;  subRegister     1    2[COMRAM] unsigned char 
  5644 ;;  regMX_temp      2    0[COMRAM] unsigned int 
  5645 ;; Return value:  Size  Location     Type
  5646 ;;                  1    wreg      unsigned char 
  5647 ;; Registers used:
  5648 ;;		wreg, status,2
  5649 ;; Tracked objects:
  5650 ;;		On entry : 0/0
  5651 ;;		On exit  : 0/0
  5652 ;;		Unchanged: 0/0
  5653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5655 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5657 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5658 ;;Total ram usage:        3 bytes
  5659 ;; Hardware stack levels used:    1
  5660 ;; This function calls:
  5661 ;;		Nothing
  5662 ;; This function is called by:
  5663 ;;		_processOpcode
  5664 ;; This function uses a non-reentrant model
  5665 ;;
  5666                           
  5667                           	psect	text10
  5668  00277C                     __ptext10:
  5669                           	opt stack 0
  5670  00277C                     _getMXbits:
  5671                           	opt stack 28
  5672                           
  5673                           ;incstack = 0
  5674                           ;getMXbits@subRegister stored from wreg
  5675  00277C  CFE8 F003          	movff	wreg,getMXbits@subRegister
  5676                           
  5677                           ;emulator.c: 22: uint16_t regMX_temp = regMX;
  5678  002780  C017  F001         	movff	_regMX,getMXbits@regMX_temp
  5679  002784  C018  F002         	movff	_regMX+1,getMXbits@regMX_temp+1
  5680                           
  5681                           ;emulator.c: 27: }
  5682                           ;emulator.c: 29: return (uint8_t) regMX_temp;
  5683  002788  5001               	movf	getMXbits@regMX_temp,w,c
  5684  00278A  0012               	return	
  5685  00278C                     __end_of_getMXbits:
  5686                           	opt stack 0
  5687                           tblptru	equ	0xFF8
  5688                           tblptrh	equ	0xFF7
  5689                           tblptrl	equ	0xFF6
  5690                           tablat	equ	0xFF5
  5691                           prodh	equ	0xFF4
  5692                           prodl	equ	0xFF3
  5693                           postinc0	equ	0xFEE
  5694                           wreg	equ	0xFE8
  5695                           postdec1	equ	0xFE5
  5696                           fsr1h	equ	0xFE2
  5697                           fsr1l	equ	0xFE1
  5698                           indf2	equ	0xFDF
  5699                           fsr2h	equ	0xFDA
  5700                           fsr2l	equ	0xFD9
  5701                           status	equ	0xFD8
  5702                           
  5703 ;; *************** function _getFbits *****************
  5704 ;; Defined at:
  5705 ;;		line 65 in file "source/emulator.c"
  5706 ;; Parameters:    Size  Location     Type
  5707 ;;  subRegister     1    wreg     unsigned char 
  5708 ;; Auto vars:     Size  Location     Type
  5709 ;;  subRegister     1    0[COMRAM] unsigned char 
  5710 ;;  regF_temp       1    1[COMRAM] unsigned char 
  5711 ;; Return value:  Size  Location     Type
  5712 ;;                  1    wreg      unsigned char 
  5713 ;; Registers used:
  5714 ;;		wreg, status,2, status,0
  5715 ;; Tracked objects:
  5716 ;;		On entry : 0/0
  5717 ;;		On exit  : 0/0
  5718 ;;		Unchanged: 0/0
  5719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5721 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5723 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5724 ;;Total ram usage:        2 bytes
  5725 ;; Hardware stack levels used:    1
  5726 ;; This function calls:
  5727 ;;		Nothing
  5728 ;; This function is called by:
  5729 ;;		_processOpcode
  5730 ;; This function uses a non-reentrant model
  5731 ;;
  5732                           
  5733                           	psect	text11
  5734  002710                     __ptext11:
  5735                           	opt stack 0
  5736  002710                     _getFbits:
  5737                           	opt stack 28
  5738                           
  5739                           ;incstack = 0
  5740                           ;getFbits@subRegister stored from wreg
  5741  002710  CFE8 F001          	movff	wreg,getFbits@subRegister
  5742                           
  5743                           ;emulator.c: 67: uint8_t regF_temp = regF;
  5744  002714  C020  F002         	movff	_regF,getFbits@regF_temp
  5745                           
  5746                           ;emulator.c: 95: }
  5747                           
  5748                           ;emulator.c: 94: break;
  5749                           
  5750                           ;emulator.c: 91: case 4:
  5751                           
  5752                           ;emulator.c: 89: break;
  5753                           
  5754                           ;emulator.c: 86: case 3:
  5755                           
  5756                           ;emulator.c: 84: break;
  5757                           
  5758                           ;emulator.c: 81: case 2:
  5759                           
  5760                           ;emulator.c: 79: break;
  5761                           
  5762                           ;emulator.c: 76: case 1:
  5763                           
  5764                           ;emulator.c: 74: break;
  5765                           
  5766                           ;emulator.c: 70: {
  5767                           ;emulator.c: 71: case 0:
  5768                           
  5769                           ;emulator.c: 69: switch(subRegister)
  5770  002718  5001               	movf	getFbits@subRegister,w,c
  5771                           
  5772                           ; Switch size 1, requested type "space"
  5773                           ; Number of cases is 5, Range of values is 0 to 4
  5774                           ; switch strategies available:
  5775                           ; Name         Instructions Cycles
  5776                           ; simple_byte           16     9 (average)
  5777                           ;	Chosen strategy is simple_byte
  5778  00271A  0A00               	xorlw	0	; case 0
  5779  00271C  B4D8               	btfsc	status,2,c
  5780  00271E  D009               	goto	l200
  5781  002720  0A01               	xorlw	1	; case 1
  5782  002722  B4D8               	btfsc	status,2,c
  5783  002724  D006               	goto	l200
  5784  002726  0A03               	xorlw	3	; case 2
  5785  002728  B4D8               	btfsc	status,2,c
  5786  00272A  D003               	goto	l200
  5787  00272C  0A01               	xorlw	1	; case 3
  5788  00272E  A4D8               	btfss	status,2,c
  5789  002730  0A07               	xorlw	7	; case 4
  5790  002732                     l200:
  5791                           
  5792                           ;emulator.c: 97: return regF_temp;
  5793  002732  5002               	movf	getFbits@regF_temp,w,c
  5794  002734  0012               	return	
  5795  002736                     __end_of_getFbits:
  5796                           	opt stack 0
  5797                           tblptru	equ	0xFF8
  5798                           tblptrh	equ	0xFF7
  5799                           tblptrl	equ	0xFF6
  5800                           tablat	equ	0xFF5
  5801                           prodh	equ	0xFF4
  5802                           prodl	equ	0xFF3
  5803                           postinc0	equ	0xFEE
  5804                           wreg	equ	0xFE8
  5805                           postdec1	equ	0xFE5
  5806                           fsr1h	equ	0xFE2
  5807                           fsr1l	equ	0xFE1
  5808                           indf2	equ	0xFDF
  5809                           fsr2h	equ	0xFDA
  5810                           fsr2l	equ	0xFD9
  5811                           status	equ	0xFD8
  5812                           
  5813 ;; *************** function _initializeRegisters *****************
  5814 ;; Defined at:
  5815 ;;		line 158 in file "source/emulator.c"
  5816 ;; Parameters:    Size  Location     Type
  5817 ;;		None
  5818 ;; Auto vars:     Size  Location     Type
  5819 ;;		None
  5820 ;; Return value:  Size  Location     Type
  5821 ;;		None               void
  5822 ;; Registers used:
  5823 ;;		wreg, status,2, status,0, cstack
  5824 ;; Tracked objects:
  5825 ;;		On entry : 0/0
  5826 ;;		On exit  : 0/0
  5827 ;;		Unchanged: 0/0
  5828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5831 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5832 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5833 ;;Total ram usage:        1 bytes
  5834 ;; Hardware stack levels used:    1
  5835 ;; Hardware stack levels required when called:    1
  5836 ;; This function calls:
  5837 ;;		_setFbits
  5838 ;; This function is called by:
  5839 ;;		_main
  5840 ;; This function uses a non-reentrant model
  5841 ;;
  5842                           
  5843                           	psect	text12
  5844  002560                     __ptext12:
  5845                           	opt stack 0
  5846  002560                     _initializeRegisters:
  5847                           	opt stack 28
  5848                           
  5849                           ;emulator.c: 160: haltFlag = 0;
  5850                           
  5851                           ;incstack = 0
  5852  002560  6E06               	movwf	??_initializeRegisters& (0+255),c
  5853  002562  0E00               	movlw	0
  5854  002564  6E1B               	movwf	_haltFlag,c
  5855  002566  5006               	movf	??_initializeRegisters& (0+255),w,c
  5856                           
  5857                           ;emulator.c: 161: regA = 0;
  5858  002568  6E06               	movwf	??_initializeRegisters& (0+255),c
  5859  00256A  0E00               	movlw	0
  5860  00256C  6E1E               	movwf	_regA,c
  5861  00256E  5006               	movf	??_initializeRegisters& (0+255),w,c
  5862                           
  5863                           ;emulator.c: 162: regB = 0;
  5864  002570  6E06               	movwf	??_initializeRegisters& (0+255),c
  5865  002572  0E00               	movlw	0
  5866  002574  6E1F               	movwf	_regB,c
  5867  002576  5006               	movf	??_initializeRegisters& (0+255),w,c
  5868                           
  5869                           ;emulator.c: 164: regPC = 0;
  5870  002578  0E00               	movlw	0
  5871  00257A  6E1A               	movwf	_regPC+1,c
  5872  00257C  0E00               	movlw	0
  5873  00257E  6E19               	movwf	_regPC,c
  5874                           
  5875                           ;emulator.c: 165: regSP = 0;
  5876  002580  6E06               	movwf	??_initializeRegisters& (0+255),c
  5877  002582  0E00               	movlw	0
  5878  002584  6E21               	movwf	_regSP,c
  5879  002586  5006               	movf	??_initializeRegisters& (0+255),w,c
  5880                           
  5881                           ;emulator.c: 166: setFbits(0, 0);
  5882  002588  6E06               	movwf	??_initializeRegisters& (0+255),c
  5883  00258A  0E00               	movlw	0
  5884  00258C  6E01               	movwf	setFbits@value,c
  5885  00258E  5006               	movf	??_initializeRegisters& (0+255),w,c
  5886  002590  0E00               	movlw	0
  5887  002592  EC3E  F013         	call	_setFbits
  5888                           
  5889                           ;emulator.c: 167: setFbits(1, 0);
  5890  002596  6E06               	movwf	??_initializeRegisters& (0+255),c
  5891  002598  0E00               	movlw	0
  5892  00259A  6E01               	movwf	setFbits@value,c
  5893  00259C  5006               	movf	??_initializeRegisters& (0+255),w,c
  5894  00259E  0E01               	movlw	1
  5895  0025A0  EC3E  F013         	call	_setFbits
  5896                           
  5897                           ;emulator.c: 168: setFbits(2, 0);
  5898  0025A4  6E06               	movwf	??_initializeRegisters& (0+255),c
  5899  0025A6  0E00               	movlw	0
  5900  0025A8  6E01               	movwf	setFbits@value,c
  5901  0025AA  5006               	movf	??_initializeRegisters& (0+255),w,c
  5902  0025AC  0E02               	movlw	2
  5903  0025AE  EC3E  F013         	call	_setFbits
  5904                           
  5905                           ;emulator.c: 169: setFbits(4, 0);
  5906  0025B2  6E06               	movwf	??_initializeRegisters& (0+255),c
  5907  0025B4  0E00               	movlw	0
  5908  0025B6  6E01               	movwf	setFbits@value,c
  5909  0025B8  5006               	movf	??_initializeRegisters& (0+255),w,c
  5910  0025BA  0E04               	movlw	4
  5911  0025BC  EC3E  F013         	call	_setFbits
  5912                           
  5913                           ;emulator.c: 170: setFbits(3, 0);
  5914  0025C0  6E06               	movwf	??_initializeRegisters& (0+255),c
  5915  0025C2  0E00               	movlw	0
  5916  0025C4  6E01               	movwf	setFbits@value,c
  5917  0025C6  5006               	movf	??_initializeRegisters& (0+255),w,c
  5918  0025C8  0E03               	movlw	3
  5919  0025CA  EC3E  F013         	call	_setFbits
  5920  0025CE  0012               	return	
  5921  0025D0                     __end_of_initializeRegisters:
  5922                           	opt stack 0
  5923                           tblptru	equ	0xFF8
  5924                           tblptrh	equ	0xFF7
  5925                           tblptrl	equ	0xFF6
  5926                           tablat	equ	0xFF5
  5927                           prodh	equ	0xFF4
  5928                           prodl	equ	0xFF3
  5929                           postinc0	equ	0xFEE
  5930                           wreg	equ	0xFE8
  5931                           postdec1	equ	0xFE5
  5932                           fsr1h	equ	0xFE2
  5933                           fsr1l	equ	0xFE1
  5934                           indf2	equ	0xFDF
  5935                           fsr2h	equ	0xFDA
  5936                           fsr2l	equ	0xFD9
  5937                           status	equ	0xFD8
  5938                           
  5939 ;; *************** function _setFbits *****************
  5940 ;; Defined at:
  5941 ;;		line 105 in file "source/emulator.c"
  5942 ;; Parameters:    Size  Location     Type
  5943 ;;  subRegister     1    wreg     unsigned char 
  5944 ;;  value           1    0[COMRAM] unsigned char 
  5945 ;; Auto vars:     Size  Location     Type
  5946 ;;  subRegister     1    2[COMRAM] unsigned char 
  5947 ;;  regF_temp2      1    4[COMRAM] unsigned char 
  5948 ;;  regF_temp1      1    3[COMRAM] unsigned char 
  5949 ;; Return value:  Size  Location     Type
  5950 ;;		None               void
  5951 ;; Registers used:
  5952 ;;		wreg, status,2, status,0
  5953 ;; Tracked objects:
  5954 ;;		On entry : 0/0
  5955 ;;		On exit  : 0/0
  5956 ;;		Unchanged: 0/0
  5957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5958 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5959 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5960 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5961 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5962 ;;Total ram usage:        5 bytes
  5963 ;; Hardware stack levels used:    1
  5964 ;; This function calls:
  5965 ;;		Nothing
  5966 ;; This function is called by:
  5967 ;;		_initializeRegisters
  5968 ;;		_processOpcode
  5969 ;; This function uses a non-reentrant model
  5970 ;;
  5971                           
  5972                           	psect	text13
  5973  00267C                     __ptext13:
  5974                           	opt stack 0
  5975  00267C                     _setFbits:
  5976                           	opt stack 28
  5977                           
  5978                           ;incstack = 0
  5979                           ;setFbits@subRegister stored from wreg
  5980  00267C  CFE8 F003          	movff	wreg,setFbits@subRegister
  5981                           
  5982                           ;emulator.c: 107: uint8_t regF_temp1 = regF;
  5983  002680  C020  F004         	movff	_regF,setFbits@regF_temp1
  5984                           
  5985                           ;emulator.c: 108: uint8_t regF_temp2 = regF;
  5986  002684  C020  F005         	movff	_regF,setFbits@regF_temp2
  5987                           
  5988                           ;emulator.c: 110: switch(subRegister)
  5989  002688  D005               	goto	l1094
  5990  00268A                     l1090:
  5991                           
  5992                           ;emulator.c: 115: regF_temp2 = 0;
  5993  00268A  6E02               	movwf	??_setFbits& (0+255),c
  5994  00268C  0E00               	movlw	0
  5995  00268E  6E05               	movwf	setFbits@regF_temp2,c
  5996  002690  5002               	movf	??_setFbits& (0+255),w,c
  5997                           
  5998                           ;emulator.c: 116: break;
  5999  002692  D00D               	goto	l1096
  6000  002694                     l1094:
  6001  002694  5003               	movf	setFbits@subRegister,w,c
  6002                           
  6003                           ; Switch size 1, requested type "space"
  6004                           ; Number of cases is 5, Range of values is 0 to 4
  6005                           ; switch strategies available:
  6006                           ; Name         Instructions Cycles
  6007                           ; simple_byte           16     9 (average)
  6008                           ;	Chosen strategy is simple_byte
  6009  002696  0A00               	xorlw	0	; case 0
  6010  002698  B4D8               	btfsc	status,2,c
  6011  00269A  D7F7               	goto	l1090
  6012  00269C  0A01               	xorlw	1	; case 1
  6013  00269E  B4D8               	btfsc	status,2,c
  6014  0026A0  D006               	goto	l1096
  6015  0026A2  0A03               	xorlw	3	; case 2
  6016  0026A4  B4D8               	btfsc	status,2,c
  6017  0026A6  D003               	goto	l1096
  6018  0026A8  0A01               	xorlw	1	; case 3
  6019  0026AA  A4D8               	btfss	status,2,c
  6020  0026AC  0A07               	xorlw	7	; case 4
  6021  0026AE                     l1096:
  6022                           
  6023                           ;emulator.c: 147: regF = regF_temp1 + regF_temp2 + value;
  6024  0026AE  5004               	movf	setFbits@regF_temp1,w,c
  6025  0026B0  2405               	addwf	setFbits@regF_temp2,w,c
  6026  0026B2  2401               	addwf	setFbits@value,w,c
  6027  0026B4  6E20               	movwf	_regF,c
  6028  0026B6  0012               	return	
  6029  0026B8                     __end_of_setFbits:
  6030                           	opt stack 0
  6031                           tblptru	equ	0xFF8
  6032                           tblptrh	equ	0xFF7
  6033                           tblptrl	equ	0xFF6
  6034                           tablat	equ	0xFF5
  6035                           prodh	equ	0xFF4
  6036                           prodl	equ	0xFF3
  6037                           postinc0	equ	0xFEE
  6038                           wreg	equ	0xFE8
  6039                           postdec1	equ	0xFE5
  6040                           fsr1h	equ	0xFE2
  6041                           fsr1l	equ	0xFE1
  6042                           indf2	equ	0xFDF
  6043                           fsr2h	equ	0xFDA
  6044                           fsr2l	equ	0xFD9
  6045                           status	equ	0xFD8
  6046                           
  6047 ;; *************** function _initPorts *****************
  6048 ;; Defined at:
  6049 ;;		line 26 in file "source/system.c"
  6050 ;; Parameters:    Size  Location     Type
  6051 ;;		None
  6052 ;; Auto vars:     Size  Location     Type
  6053 ;;		None
  6054 ;; Return value:  Size  Location     Type
  6055 ;;		None               void
  6056 ;; Registers used:
  6057 ;;		wreg, status,2
  6058 ;; Tracked objects:
  6059 ;;		On entry : 0/0
  6060 ;;		On exit  : 0/0
  6061 ;;		Unchanged: 0/0
  6062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6066 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6067 ;;Total ram usage:        0 bytes
  6068 ;; Hardware stack levels used:    1
  6069 ;; This function calls:
  6070 ;;		Nothing
  6071 ;; This function is called by:
  6072 ;;		_main
  6073 ;; This function uses a non-reentrant model
  6074 ;;
  6075                           
  6076                           	psect	text14
  6077  0026B8                     __ptext14:
  6078                           	opt stack 0
  6079  0026B8                     _initPorts:
  6080                           	opt stack 29
  6081                           
  6082                           ;system.c: 28: TRISA = 0;
  6083                           
  6084                           ;incstack = 0
  6085  0026B8  0E00               	movlw	0
  6086  0026BA  6E92               	movwf	3986,c	;volatile
  6087                           
  6088                           ;system.c: 29: TRISC = 0;
  6089  0026BC  0E00               	movlw	0
  6090  0026BE  6E94               	movwf	3988,c	;volatile
  6091                           
  6092                           ;system.c: 30: TRISE = 0;
  6093  0026C0  0E00               	movlw	0
  6094  0026C2  6E96               	movwf	3990,c	;volatile
  6095                           
  6096                           ;system.c: 32: ANSELD = 0;
  6097  0026C4  0E00               	movlw	0
  6098  0026C6  010F               	movlb	15	; () banked
  6099  0026C8  010F               	movlb	15	; () banked
  6100  0026CA  6F3B               	movwf	59,b	;volatile
  6101                           
  6102                           ; BSR set to: 15
  6103                           ;system.c: 33: TRISDbits.RD3 = 0;
  6104  0026CC  9695               	bcf	3989,3,c	;volatile
  6105                           
  6106                           ; BSR set to: 15
  6107                           ;system.c: 34: TRISDbits.RD4 = 1;
  6108  0026CE  8895               	bsf	3989,4,c	;volatile
  6109                           
  6110                           ; BSR set to: 15
  6111                           ;system.c: 35: TRISDbits.RD5 = 0;
  6112  0026D0  9A95               	bcf	3989,5,c	;volatile
  6113                           
  6114                           ; BSR set to: 15
  6115                           ;system.c: 36: TRISDbits.RD7 = 1;
  6116  0026D2  8E95               	bsf	3989,7,c	;volatile
  6117                           
  6118                           ; BSR set to: 15
  6119                           ;system.c: 37: TRISDbits.RD6 = 0;
  6120  0026D4  9C95               	bcf	3989,6,c	;volatile
  6121                           
  6122                           ;system.c: 39: LATA = 0;
  6123  0026D6  0E00               	movlw	0
  6124  0026D8  6E89               	movwf	3977,c	;volatile
  6125                           
  6126                           ;system.c: 40: LATC = 0;
  6127  0026DA  0E00               	movlw	0
  6128  0026DC  6E8B               	movwf	3979,c	;volatile
  6129                           
  6130                           ;system.c: 41: LATD = 0;
  6131  0026DE  0E00               	movlw	0
  6132  0026E0  6E8C               	movwf	3980,c	;volatile
  6133                           
  6134                           ;system.c: 42: LATE = 0;
  6135  0026E2  0E00               	movlw	0
  6136  0026E4  6E8D               	movwf	3981,c	;volatile
  6137                           
  6138                           ; BSR set to: 15
  6139  0026E6  0012               	return	
  6140  0026E8                     __end_of_initPorts:
  6141                           	opt stack 0
  6142                           tblptru	equ	0xFF8
  6143                           tblptrh	equ	0xFF7
  6144                           tblptrl	equ	0xFF6
  6145                           tablat	equ	0xFF5
  6146                           prodh	equ	0xFF4
  6147                           prodl	equ	0xFF3
  6148                           postinc0	equ	0xFEE
  6149                           wreg	equ	0xFE8
  6150                           postdec1	equ	0xFE5
  6151                           fsr1h	equ	0xFE2
  6152                           fsr1l	equ	0xFE1
  6153                           indf2	equ	0xFDF
  6154                           fsr2h	equ	0xFDA
  6155                           fsr2l	equ	0xFD9
  6156                           status	equ	0xFD8
  6157                           
  6158 ;; *************** function _initOscillator *****************
  6159 ;; Defined at:
  6160 ;;		line 9 in file "source/system.c"
  6161 ;; Parameters:    Size  Location     Type
  6162 ;;		None
  6163 ;; Auto vars:     Size  Location     Type
  6164 ;;		None
  6165 ;; Return value:  Size  Location     Type
  6166 ;;		None               void
  6167 ;; Registers used:
  6168 ;;		wreg, status,2
  6169 ;; Tracked objects:
  6170 ;;		On entry : 0/0
  6171 ;;		On exit  : 0/0
  6172 ;;		Unchanged: 0/0
  6173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6178 ;;Total ram usage:        0 bytes
  6179 ;; Hardware stack levels used:    1
  6180 ;; This function calls:
  6181 ;;		Nothing
  6182 ;; This function is called by:
  6183 ;;		_main
  6184 ;; This function uses a non-reentrant model
  6185 ;;
  6186                           
  6187                           	psect	text15
  6188  00274E                     __ptext15:
  6189                           	opt stack 0
  6190  00274E                     _initOscillator:
  6191                           	opt stack 29
  6192                           
  6193                           ;system.c: 11: OSCCONbits.IDLEN = 0;
  6194                           
  6195                           ; BSR set to: 15
  6196                           ;incstack = 0
  6197  00274E  9ED3               	bcf	4051,7,c	;volatile
  6198                           
  6199                           ;system.c: 12: OSCCONbits.IRCF = 0b111;
  6200  002750  88D3               	bsf	4051,4,c	;volatile
  6201  002752  8AD3               	bsf	4051,5,c	;volatile
  6202  002754  8CD3               	bsf	4051,6,c	;volatile
  6203                           
  6204                           ;system.c: 13: OSCCONbits.SCS = 0b10;
  6205  002756  50D3               	movf	4051,w,c	;volatile
  6206  002758  0BFC               	andlw	-4
  6207  00275A  0902               	iorlw	2
  6208  00275C  6ED3               	movwf	4051,c	;volatile
  6209                           
  6210                           ;system.c: 14: OSCCON2bits.MFIOSEL = 0;
  6211  00275E  98D2               	bcf	4050,4,c	;volatile
  6212                           
  6213                           ;system.c: 15: OSCCON2bits.SOSCGO = 0;
  6214  002760  96D2               	bcf	4050,3,c	;volatile
  6215                           
  6216                           ;system.c: 16: OSCCON2bits.PRISD = 0;
  6217  002762  94D2               	bcf	4050,2,c	;volatile
  6218  002764  0012               	return	
  6219  002766                     __end_of_initOscillator:
  6220                           	opt stack 0
  6221                           tblptru	equ	0xFF8
  6222                           tblptrh	equ	0xFF7
  6223                           tblptrl	equ	0xFF6
  6224                           tablat	equ	0xFF5
  6225                           prodh	equ	0xFF4
  6226                           prodl	equ	0xFF3
  6227                           postinc0	equ	0xFEE
  6228                           wreg	equ	0xFE8
  6229                           postdec1	equ	0xFE5
  6230                           fsr1h	equ	0xFE2
  6231                           fsr1l	equ	0xFE1
  6232                           indf2	equ	0xFDF
  6233                           fsr2h	equ	0xFDA
  6234                           fsr2l	equ	0xFD9
  6235                           status	equ	0xFD8
  6236                           tblptru	equ	0xFF8
  6237                           tblptrh	equ	0xFF7
  6238                           tblptrl	equ	0xFF6
  6239                           tablat	equ	0xFF5
  6240                           prodh	equ	0xFF4
  6241                           prodl	equ	0xFF3
  6242                           postinc0	equ	0xFEE
  6243                           wreg	equ	0xFE8
  6244                           postdec1	equ	0xFE5
  6245                           fsr1h	equ	0xFE2
  6246                           fsr1l	equ	0xFE1
  6247                           indf2	equ	0xFDF
  6248                           fsr2h	equ	0xFDA
  6249                           fsr2l	equ	0xFD9
  6250                           status	equ	0xFD8
  6251                           
  6252                           	psect	rparam
  6253  0000                     tblptru	equ	0xFF8
  6254                           tblptrh	equ	0xFF7
  6255                           tblptrl	equ	0xFF6
  6256                           tablat	equ	0xFF5
  6257                           prodh	equ	0xFF4
  6258                           prodl	equ	0xFF3
  6259                           postinc0	equ	0xFEE
  6260                           wreg	equ	0xFE8
  6261                           postdec1	equ	0xFE5
  6262                           fsr1h	equ	0xFE2
  6263                           fsr1l	equ	0xFE1
  6264                           indf2	equ	0xFDF
  6265                           fsr2h	equ	0xFDA
  6266                           fsr2l	equ	0xFD9
  6267                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    4
    Data        2048
    BSS         271
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     18      33
    BANK0           160      0       0
    BANK1           256      0     256
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_processOpcode
    _processOpcode->_setPortData
    _setPortData->_enableSerial
    _dispSeg->_hexToChar
    _initializeRegisters->_setFbits

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    6262
                                             17 COMRAM     1     1      0
                            _dispSeg
                     _initOscillator
                          _initPorts
                _initializeRegisters
                      _processOpcode
 ---------------------------------------------------------------------------------
 (1) _processOpcode                                        9     9      0    3537
                                              8 COMRAM     9     9      0
                           _getFbits
                          _getMXbits
                        _getPortData
                  _immData_toPointer
                           _setFbits
                          _setMXbits
                        _setPortData
                     _update_immData
 ---------------------------------------------------------------------------------
 (2) _update_immData                                       2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _setPortData                                          4     3      1    2025
                                              4 COMRAM     4     3      1
                            _dispSeg
                       _enableSerial
                          _hexToChar
 ---------------------------------------------------------------------------------
 (3) _hexToChar                                            1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _enableSerial                                         4     2      2      49
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _dispSeg                                              2     1      1    1679
                                              1 COMRAM     2     1      1
                          _hexToChar (ARG)
 ---------------------------------------------------------------------------------
 (2) _setMXbits                                            6     5      1     196
                                              0 COMRAM     6     5      1
 ---------------------------------------------------------------------------------
 (2) _immData_toPointer                                    4     2      2      15
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _getPortData                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _getMXbits                                            3     3      0      30
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _getFbits                                             2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _initializeRegisters                                  1     1      0    1046
                                              5 COMRAM     1     1      0
                           _setFbits
 ---------------------------------------------------------------------------------
 (2) _setFbits                                             5     4      1    1046
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (1) _initPorts                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initOscillator                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _dispSeg
     _hexToChar (ARG)
   _initOscillator
   _initPorts
   _initializeRegisters
     _setFbits
   _processOpcode
     _getFbits
     _getMXbits
     _getPortData
     _immData_toPointer
     _setFbits
     _setMXbits
     _setPortData
       _dispSeg
         _hexToChar (ARG)
       _enableSerial
       _hexToChar
     _update_immData

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0     800      37       52.6%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     12      21       1       34.7%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     121      12        0.0%
DATA                 0      0     921       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Fri Mar 14 13:43:19 2014

                          l70 20EC                            l62 2054                            l54 1FE4  
                          l38 2630                            l80 21AA                            l72 2112  
                          l64 207A                            l57 2008                            l90 2268  
                          l82 21D0                            l74 2138                            l66 20A0  
                          l59 202E                            l84 21F6                            l76 215E  
                          l68 20C6                            l86 221C                            l78 2184  
                          l88 2242                _update_immData 2440                  __CFG_CP0$OFF 000000  
                __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000  
                         l200 2732                           l231 23A6                           l225 276C  
                         l238 23FE                           l270 18D6                           l343 1D28  
                         l271 18DC                           l272 18E2                           l264 189A  
                         l281 191E                           l273 18E8                           l265 18A0  
                         l346 1D6E                           l266 18A6                           l284 1948  
                         l287 1972                           l288 197C                           l998 22FA  
                __CFG_CPB$OFF 000000                  __CFG_CPD$OFF 000000                           prod 000FF3  
                         wreg 000FE8         getPortData@portNumber 0001                    _TXSTA2bits 000F72  
                __CFG_LVP$OFF 000000                          l1010 2306                          l1002 22FE  
                        l1110 2770                          l1030 231A                          l1022 2312  
                        l1014 230A                          l1006 2302                          l1120 24DA  
                        l1210 208A                          l1202 203E                          l1122 24DE  
                        l1130 24F0                          l1050 232E                          l1042 2326  
                        l1034 231E                          l1026 2316                          l1018 230E  
                        l1124 24E2                          l1132 2548                          l1230 2148  
                        l1222 20FC                          l1214 20B0                          l1206 2064  
                        l1126 24E6                          l1054 2332                          l1046 232A  
                        l1038 2322                          l1302 23F0                          l1310 2424  
                        l1128 24EA                          l1064 233A                          l1304 2404  
                        l1320 181E                          l1090 268A                          l1250 2206  
                        l1242 21BA                          l1234 216E                          l1226 2122  
                        l1218 20D6                          l1058 2336                          l1306 2414  
                        l1410 19F6                          l1402 19C0                          l1322 182E  
                        l1180 247C                          l1404 19CE                          l1332 185A  
                        l1324 183E                          l1094 2694                          l1254 222C  
                        l1246 21E0                          l1238 2194                          l1190 1FD0  
                        l1510 1BC4                          l1502 1B86                          l1414 19FC  
                        l1350 18BE                          l1342 187E                          l1334 1866  
                        l1326 1848                          l1096 26AE                          l1264 2278  
                        l1184 249C                          l1176 245E                          l1424 1A28  
                        l1408 19E6                          l1352 18CA                          l1344 188A  
                        l1328 1850                          l1600 1FC4                          l1258 2252  
                        l1194 1FF4                          l1290 23C0                          l1514 1BE2  
                        l1506 1BA4                          l1434 1A42                          l1418 1A0C  
                        l1370 1914                          l1362 1902                          l1346 1892  
                        l1338 1872                          l1610 25FA                          l1540 1C96  
                        l1532 1C50                          l1524 1C18                          l1444 1A5E  
                        l1428 1A30                          l1380 1938                          l1364 1908  
                        l1356 18F6                          l1348 18AC                          l1198 2018  
                        l1294 23D0                          l1286 23B2                          l1550 1CEA  
                        l1518 1BFC                          l1454 1A7A                          l1438 1A4A  
                        l1374 191A                          l1358 18FC                          l1614 2610  
                        l1552 1CF0                          l1544 1CB8                          l1536 1C74  
                        l1528 1C34                          l1480 1AE2                          l1472 1AB2  
                        l1464 1A96                          l1448 1A66                          l1392 1984  
                        l1368 190E                          l1616 2614                          l1730 253E  
                        l1722 251A                          l1298 23E0                          l1474 1ABC  
                        l1458 1A82                          l1386 1962         setPortData@portNumber 0006  
                        l1724 2520                          l1580 1DB8                          l1556 1D14  
                        l1548 1CDC                          l1468 1AA0                          l1396 199A  
                        l1726 252A                          l1574 1DA0                          l1566 1D5A  
                        l1558 1D22                          l1494 1B52                          l1398 19A8  
                        l1728 2534                          l1592 1E0C                          l1584 1DE0  
                        l1576 1DAE                          l1568 1D68                          l1488 1B04  
                        l1594 1E1A                          l1586 1DEE                          l1498 1B6C  
                        l1588 1DF2                          l1598 1E1E                          _LATA 000F89  
                        _LATC 000F8B                          _LATD 000F8C                          _LATE 000F8D  
                        _main 25D0                          _regA 001E                          _regB 001F  
                        _regF 0020                          fsr1h 000FE2                          fsr1l 000FE1  
                        indf2 000FDF                          fsr2l 000FD9                 __CFG_BORV$190 000000  
                        prodl 000FF3                          start 0002                 __CFG_IESO$OFF 000000  
      __end_of_update_immData 24D6         setPortData@outputData 0005             getFbits@regF_temp 0002  
                _BAUDCON2bits 000F70                         ?_main 0001                         _TRISA 000F92  
                       _TRISC 000F94                         _TRISE 000F96                 __CFG_WRT0$OFF 000000  
               __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000  
              __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000  
              __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000               __end_of_dispSeg 22E8  
               __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000  
              __CFG_EBTRB$OFF 000000               ??_processOpcode 0009                         _regPC 0019  
                       _regMX 0017                         _regSP 0021            __CFG_MCLRE$EXTMCLR 000000  
                       _stack 0100      processOpcode@regA_temp16 0010                __CFG_BOREN$OFF 000000  
                       tablat 000FF5                         status 000FD8                __CFG_HFOFST$ON 000000  
             __initialization 2632                  __end_of_main 2632               ?_update_immData 0001  
  __end_of_virtualMemory_size 1005          __end_of_enableSerial 2560                        ??_main 0012  
               __activetblptr 000003          enableSerial@baudRate 0001            setFbits@regF_temp1 0004  
          setFbits@regF_temp2 0005                  ?_setPortData 0005                        _ANSELD 000F3B  
              __CFG_WDTEN$OFF 000000          __size_of_getPortData 0016                        _RCREG2 000F74  
                      _SPBRG2 000F75           getMXbits@regMX_temp 0001           setMXbits@regMX_temp 0004  
                      _TXREG2 000F73              __end_of_getFbits 2736                __CFG_XINST$OFF 000000  
              __CFG_STVREN$ON 000000  __size_of_initializeRegisters 0070                        clear_0 263A  
                      clear_1 264C                     ??_dispSeg 0003              __end_of_setFbits 26B8  
                __pdataBIGRAM 0200                  __mediumconst 0000                 _virtualMemory 0200  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
           _immData_toPointer 2736               hexToChar@number 0001            ?_immData_toPointer 0001  
                  __accesstop 0060       __end_of__initialization 2676               __CFG_PBADEN$OFF 000000  
setPortData@outputData_temp16 0007                 setFbits@value 0001           ??_immData_toPointer 0003  
         setMXbits@value_temp 0002                __pcstackCOMRAM 0001            __size_of_getMXbits 0010  
   __end_of_immData_toPointer 274E            __size_of_hexToChar 00B8       __size_of_initOscillator 0018  
                  __pbssBANK1 0100               __CFG_PLLCFG$OFF 000000            __size_of_initPorts 0030  
          __CFG_CCP2MX$PORTC1 000000         __size_of_enableSerial 008A            __size_of_setMXbits 0028  
          __CFG_CCP3MX$PORTB5 000000                     ?_getFbits 0001             __CFG_PRICLKEN$OFF 000000  
                     _SPBRGH2 000F76          __size_of_setPortData 00A0                  _enableSerial 24D6  
           __end_of_getMXbits 278C                     ?_setFbits 0001              ??_update_immData 0001  
             __CFG_PWRTEN$OFF 000000                       __Hparam 0000                       __Lparam 0000  
           __end_of_hexToChar 23A0                  __psmallconst 1000                       __pcinit 2632  
                     __ramtop 1000                       __ptext0 25D0                       __ptext1 1806  
                     __ptext2 2440                       __ptext3 23A0                       __ptext4 22E8  
                     __ptext5 24D6                       __ptext6 1FCA                       __ptext7 26E8  
                     __ptext8 2736                       __ptext9 2766                       _dispSeg 1FCA  
           __end_of_initPorts 26E8    __size_of_immData_toPointer 0018                    ??_getFbits 0001  
          _virtualMemory_size 1001             __end_of_setMXbits 2710          end_of_initialization 2676  
       __end_of_processOpcode 1FCA           _initializeRegisters 2560                    ??_setFbits 0002  
                     postdec1 000FE5                       postinc0 000FEE           getFbits@subRegister 0001  
        ?_initializeRegisters 0001           setFbits@subRegister 0003       processOpcode@carriedBit 000E  
                   _TRISDbits 000F95                 ??_getPortData 0001                _initOscillator 274E  
              setMXbits@value 0001          getMXbits@subRegister 0003          setMXbits@subRegister 0006  
       ??_initializeRegisters 0006                 __pidataBIGRAM 1006       processOpcode@regPC_temp 000C  
     processOpcode@regA_temp8 000F           start_initialization 2632        __end_of_initOscillator 2766  
         __end_of_getPortData 277C                   __pbssCOMRAM 0013               ?_initOscillator 0001  
           __size_of_getFbits 0026                     _getMXbits 277C             __size_of_setFbits 003C  
                   _hexToChar 22E8                     _immData_1 001C                     _immData_2 001D  
                    ?_dispSeg 0002                   __smallconst 1000                     _initPorts 26B8  
                 _getPortData 2766                 ??_setPortData 0006                     _setMXbits 26E8  
                    _LATAbits 000F89                      _LATCbits 000F8B                      _LATDbits 000F8C  
                    _LATEbits 000F8D                    ?_getMXbits 0001              __CFG_WDTPS$32768 000000  
                  ?_hexToChar 0001                    ?_initPorts 0001                     copy_data0 2666  
                  ?_setMXbits 0001           __end_of_setPortData 2440                      __Hrparam 0000  
                    __Lrparam 0000             __CFG_P2BMX$PORTD2 000000        __size_of_processOpcode 07C4  
     __size_of_update_immData 0096              __size_of_dispSeg 031E                      _getFbits 2710  
                    _haltFlag 001B                      __ptext10 277C                      __ptext11 2710  
                    __ptext12 2560                      __ptext13 267C                      __ptext14 26B8  
                    __ptext15 274E                   _OSCCON2bits 000FD2      immData_toPointer@pointer 0003  
               __size_of_main 0062                      _setFbits 267C   __end_of_initializeRegisters 25D0  
                 ??_getMXbits 0001                   ??_hexToChar 0001              ??_initOscillator 0001  
                 ??_initPorts 0001                   _setPortData 23A0                 ?_enableSerial 0001  
               _processOpcode 1806                   ??_setMXbits 0002                    _RCSTA2bits 000F71  
                  _OSCCONbits 000FD3                dispSeg@segment 0003                  wait_ms@timel 0013  
           __CFG_T3CMX$PORTC0 000000                 dispSeg@letter 0002                  ?_getPortData 0001  
              ??_enableSerial 0003                ?_processOpcode 0001             __CFG_FOSC$INTIO67 000000  
