

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Fri Feb 07 13:46:01 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	text0,global,reloc=2,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    14  0000                     _ANSELD	set	3899
    15  0000                     _BAUDCON2bits	set	3952
    16  0000                     _LATA	set	3977
    17  0000                     _LATAbits	set	3977
    18  0000                     _LATC	set	3979
    19  0000                     _LATCbits	set	3979
    20  0000                     _LATD	set	3980
    21  0000                     _LATDbits	set	3980
    22  0000                     _LATE	set	3981
    23  0000                     _LATEbits	set	3981
    24  0000                     _PIR3bits	set	4004
    25  0000                     _RCSTA2bits	set	3953
    26  0000                     _SPBRG2	set	3957
    27  0000                     _SPBRGH2	set	3958
    28  0000                     _TRISA	set	3986
    29  0000                     _TRISC	set	3988
    30  0000                     _TRISDbits	set	3989
    31  0000                     _TRISE	set	3990
    32  0000                     _TXREG2	set	3955
    33  0000                     _TXSTA2bits	set	3954
    34                           
    35 ;;
    36 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
    37 ;;
    38 ;; *************** function _main *****************
    39 ;; Defined at:
    40 ;;		line 20 in file "source/main.c"
    41 ;; Parameters:    Size  Location     Type
    42 ;;		None
    43 ;; Auto vars:     Size  Location     Type
    44 ;;		None
    45 ;; Return value:  Size  Location     Type
    46 ;;		None               void
    47 ;; Registers used:
    48 ;;		wreg, status,2, status,0, cstack
    49 ;; Tracked objects:
    50 ;;		On entry : 0/0
    51 ;;		On exit  : 0/0
    52 ;;		Unchanged: 0/0
    53 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
    54 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
    55 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
    56 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
    57 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
    58 ;;Total ram usage:        1 bytes
    59 ;; Hardware stack levels required when called:    1
    60 ;; This function calls:
    61 ;;		_dispSeg
    62 ;;		_enableSerial
    63 ;;		_initPorts
    64 ;; This function is called by:
    65 ;;		Startup code after reset
    66 ;; This function uses a non-reentrant model
    67 ;;
    68                           
    69                           	psect	text0
    70  00FC20                     __ptext0:
    71                           	opt stack 0
    72  00FC20                     _main:
    73                           	opt stack 30
    74                           
    75                           ;main.c: 22: initPorts();
    76                           
    77                           ;incstack = 0
    78  00FC20  ECF8  F07D         	call	_initPorts	;wreg free
    79                           
    80                           ;main.c: 23: enableSerial(1200);
    81  00FC24  0E04               	movlw	4
    82  00FC26  6E02               	movwf	enableSerial@baudRate+1,c
    83  00FC28  0EB0               	movlw	176
    84  00FC2A  6E01               	movwf	enableSerial@baudRate,c
    85  00FC2C  EC2C  F07E         	call	_enableSerial	;wreg free
    86                           
    87                           ;main.c: 24: dispSeg(1, '-'); dispSeg(2, '-');
    88  00FC30  6E05               	movwf	??_main& (0+255),c
    89  00FC32  0E2D               	movlw	45
    90  00FC34  6E01               	movwf	dispSeg@letter,c
    91  00FC36  5005               	movf	??_main& (0+255),w,c
    92  00FC38  0E01               	movlw	1
    93  00FC3A  EC71  F07E         	call	_dispSeg
    94  00FC3E  6E05               	movwf	??_main& (0+255),c
    95  00FC40  0E2D               	movlw	45
    96  00FC42  6E01               	movwf	dispSeg@letter,c
    97  00FC44  5005               	movf	??_main& (0+255),w,c
    98  00FC46  0E02               	movlw	2
    99  00FC48  EC71  F07E         	call	_dispSeg
   100  00FC4C                     l972:
   101                           
   102                           ;main.c: 27: {
   103                           ;main.c: 28: if(PIR3bits.RC2IF == 1)
   104  00FC4C  BAA4               	btfsc	4004,5,c	;volatile
   105                           
   106                           ;main.c: 29: {
   107                           ;main.c: 30: if(PIR3bits.TX2IF == 1)
   108  00FC4E  A8A4               	btfss	4004,4,c	;volatile
   109  00FC50  D7FD               	goto	l972
   110                           
   111                           ;main.c: 31: {
   112                           ;main.c: 32: TXREG2 = 'A';
   113  00FC52  0E41               	movlw	65
   114  00FC54  6E73               	movwf	3955,c	;volatile
   115  00FC56  D7FA               	goto	l972
   116  00FC58                     __end_of_main:
   117                           	opt stack 0
   118                           
   119                           	psect	cinit
   120  00FBDE                     __pcinit:
   121                           	opt stack 0
   122  00FBDE                     start_initialization:
   123                           	opt stack 0
   124  00FBDE                     __initialization:
   125                           	opt stack 0
   126                           
   127                           ; Clear objects allocated to COMRAM (4 bytes)
   128  00FBDE  6A09               	clrf	(__pbssCOMRAM+3)& (0+255),c
   129  00FBE0  6A08               	clrf	(__pbssCOMRAM+2)& (0+255),c
   130  00FBE2  6A07               	clrf	(__pbssCOMRAM+1)& (0+255),c
   131  00FBE4  6A06               	clrf	__pbssCOMRAM& (0+255),c
   132  00FBE6                     end_of_initialization:
   133                           	opt stack 0
   134  00FBE6                     __end_of__initialization:
   135                           	opt stack 0
   136  00FBE6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   137  00FBE8  6EF8               	movwf	tblptru,c
   138  00FBEA  0100               	movlb	0
   139  00FBEC  EF10  F07E         	goto	_main	;jump to C main() function
   140                           tblptru	equ	0xFF8
   141                           
   142                           	psect	bssCOMRAM
   143  000006                     __pbssCOMRAM:
   144                           	opt stack 0
   145  000006                     wait_ms@timel:
   146                           	opt stack 0
   147  000006                     	ds	4
   148                           tblptru	equ	0xFF8
   149                           
   150                           	psect	cstackCOMRAM
   151  000001                     __pcstackCOMRAM:
   152                           	opt stack 0
   153  000001                     dispSeg@letter:
   154                           	opt stack 0
   155  000001                     enableSerial@baudRate:
   156                           	opt stack 0
   157                           
   158                           ; 2 bytes @ 0x0
   159  000001                     	ds	1
   160  000002                     dispSeg@segment:
   161                           	opt stack 0
   162                           
   163                           ; 1 bytes @ 0x1
   164  000002                     	ds	1
   165  000003                     ??_enableSerial:
   166                           
   167                           ; 0 bytes @ 0x2
   168  000003                     	ds	2
   169  000005                     ??_main:
   170                           
   171                           ; 0 bytes @ 0x4
   172  000005                     	ds	1
   173                           tblptru	equ	0xFF8
   174                           
   175 ;; *************** function _initPorts *****************
   176 ;; Defined at:
   177 ;;		line 68 in file "source/main.c"
   178 ;; Parameters:    Size  Location     Type
   179 ;;		None
   180 ;; Auto vars:     Size  Location     Type
   181 ;;		None
   182 ;; Return value:  Size  Location     Type
   183 ;;		None               void
   184 ;; Registers used:
   185 ;;		wreg, status,2
   186 ;; Tracked objects:
   187 ;;		On entry : 0/0
   188 ;;		On exit  : 0/0
   189 ;;		Unchanged: 0/0
   190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   194 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   195 ;;Total ram usage:        0 bytes
   196 ;; Hardware stack levels used:    1
   197 ;; This function calls:
   198 ;;		Nothing
   199 ;; This function is called by:
   200 ;;		_main
   201 ;; This function uses a non-reentrant model
   202 ;;
   203                           
   204                           	psect	text1
   205  00FBF0                     __ptext1:
   206                           	opt stack 0
   207  00FBF0                     _initPorts:
   208                           	opt stack 30
   209                           
   210                           ;main.c: 70: TRISA = 0;
   211                           
   212                           ;incstack = 0
   213  00FBF0  0E00               	movlw	0
   214  00FBF2  6E92               	movwf	3986,c	;volatile
   215                           
   216                           ;main.c: 71: TRISC = 0;
   217  00FBF4  0E00               	movlw	0
   218  00FBF6  6E94               	movwf	3988,c	;volatile
   219                           
   220                           ;main.c: 72: TRISE = 0;
   221  00FBF8  0E00               	movlw	0
   222  00FBFA  6E96               	movwf	3990,c	;volatile
   223                           
   224                           ;main.c: 74: ANSELD = 0;
   225  00FBFC  0E00               	movlw	0
   226  00FBFE  010F               	movlb	15	; () banked
   227  00FC00  010F               	movlb	15	; () banked
   228  00FC02  6F3B               	movwf	59,b	;volatile
   229                           
   230                           ; BSR set to: 15
   231                           ;main.c: 75: TRISDbits.RD3 = 0;
   232  00FC04  9695               	bcf	3989,3,c	;volatile
   233                           
   234                           ; BSR set to: 15
   235                           ;main.c: 76: TRISDbits.RD4 = 1;
   236  00FC06  8895               	bsf	3989,4,c	;volatile
   237                           
   238                           ; BSR set to: 15
   239                           ;main.c: 77: TRISDbits.RD5 = 0;
   240  00FC08  9A95               	bcf	3989,5,c	;volatile
   241                           
   242                           ; BSR set to: 15
   243                           ;main.c: 78: TRISDbits.RD7 = 1;
   244  00FC0A  8E95               	bsf	3989,7,c	;volatile
   245                           
   246                           ; BSR set to: 15
   247                           ;main.c: 79: TRISDbits.RD6 = 0;
   248  00FC0C  9C95               	bcf	3989,6,c	;volatile
   249                           
   250                           ;main.c: 81: LATA = 0;
   251  00FC0E  0E00               	movlw	0
   252  00FC10  6E89               	movwf	3977,c	;volatile
   253                           
   254                           ;main.c: 82: LATC = 0;
   255  00FC12  0E00               	movlw	0
   256  00FC14  6E8B               	movwf	3979,c	;volatile
   257                           
   258                           ;main.c: 83: LATD = 0;
   259  00FC16  0E00               	movlw	0
   260  00FC18  6E8C               	movwf	3980,c	;volatile
   261                           
   262                           ;main.c: 84: LATE = 0;
   263  00FC1A  0E00               	movlw	0
   264  00FC1C  6E8D               	movwf	3981,c	;volatile
   265                           
   266                           ; BSR set to: 15
   267  00FC1E  0012               	return	
   268  00FC20                     __end_of_initPorts:
   269                           	opt stack 0
   270                           tblptru	equ	0xFF8
   271                           
   272 ;; *************** function _enableSerial *****************
   273 ;; Defined at:
   274 ;;		line 374 in file "source/main.c"
   275 ;; Parameters:    Size  Location     Type
   276 ;;  baudRate        2    0[COMRAM] unsigned int 
   277 ;; Auto vars:     Size  Location     Type
   278 ;;		None
   279 ;; Return value:  Size  Location     Type
   280 ;;		None               void
   281 ;; Registers used:
   282 ;;		wreg, status,2, status,0
   283 ;; Tracked objects:
   284 ;;		On entry : 0/0
   285 ;;		On exit  : 0/0
   286 ;;		Unchanged: 0/0
   287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   288 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   290 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   291 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   292 ;;Total ram usage:        4 bytes
   293 ;; Hardware stack levels used:    1
   294 ;; This function calls:
   295 ;;		Nothing
   296 ;; This function is called by:
   297 ;;		_main
   298 ;; This function uses a non-reentrant model
   299 ;;
   300                           
   301                           	psect	text2
   302  00FC58                     __ptext2:
   303                           	opt stack 0
   304  00FC58                     _enableSerial:
   305                           	opt stack 30
   306                           
   307                           ;main.c: 376: LATDbits.LD3 = 1;
   308                           
   309                           ; BSR set to: 15
   310                           ;incstack = 0
   311  00FC58  868C               	bsf	3980,3,c	;volatile
   312                           
   313                           ;main.c: 379: switch (baudRate) {
   314  00FC5A  D00B               	goto	l760
   315  00FC5C                     l750:
   316                           
   317                           ;main.c: 384: SPBRG2 = 103;
   318  00FC5C  0E67               	movlw	103
   319  00FC5E  D007               	goto	L5
   320  00FC60                     l752:
   321                           
   322                           ;main.c: 387: SPBRG2 = 25;
   323  00FC60  0E19               	movlw	25
   324  00FC62  D005               	goto	L5
   325  00FC64                     l754:
   326                           
   327                           ;main.c: 390: SPBRG2 = 23;
   328  00FC64  0E17               	movlw	23
   329  00FC66  D003               	goto	L5
   330  00FC68                     l756:
   331                           
   332                           ;main.c: 393: SPBRG2 = 12;
   333  00FC68  0E0C               	movlw	12
   334  00FC6A  D001               	goto	L5
   335  00FC6C                     l758:
   336                           
   337                           ;main.c: 396: SPBRG2 = 207;
   338  00FC6C  0ECF               	movlw	207
   339  00FC6E                     L5:
   340  00FC6E  6E75               	movwf	3957,c	;volatile
   341                           
   342                           ;main.c: 397: }
   343  00FC70  D02C               	goto	l762
   344  00FC72                     l760:
   345  00FC72  C001  F003         	movff	enableSerial@baudRate,??_enableSerial
   346  00FC76  C002  F004         	movff	enableSerial@baudRate+1,??_enableSerial+1
   347                           
   348                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 5 sub-sw
      +                          itches
   349                           ; Switch size 1, requested type "space"
   350                           ; Number of cases is 5, Range of values is 4 to 75
   351                           ; switch strategies available:
   352                           ; Name         Instructions Cycles
   353                           ; simple_byte           16     9 (average)
   354                           ;	Chosen strategy is simple_byte
   355  00FC7A  5004               	movf	??_enableSerial+1,w,c
   356  00FC7C  0A04               	xorlw	4	; case 4
   357  00FC7E  B4D8               	btfsc	status,2,c
   358  00FC80  D00D               	goto	l1078
   359  00FC82  0A0D               	xorlw	13	; case 9
   360  00FC84  B4D8               	btfsc	status,2,c
   361  00FC86  D00D               	goto	l1080
   362  00FC88  0A2C               	xorlw	44	; case 37
   363  00FC8A  B4D8               	btfsc	status,2,c
   364  00FC8C  D00F               	goto	l1082
   365  00FC8E  0A0D               	xorlw	13	; case 40
   366  00FC90  B4D8               	btfsc	status,2,c
   367  00FC92  D011               	goto	l1084
   368  00FC94  0A63               	xorlw	99	; case 75
   369  00FC96  B4D8               	btfsc	status,2,c
   370  00FC98  D013               	goto	l1086
   371  00FC9A  D7E8               	goto	l758
   372  00FC9C                     l1078:
   373                           
   374                           ; Switch size 1, requested type "space"
   375                           ; Number of cases is 1, Range of values is 176 to 176
   376                           ; switch strategies available:
   377                           ; Name         Instructions Cycles
   378                           ; simple_byte            4     3 (average)
   379                           ;	Chosen strategy is simple_byte
   380  00FC9C  5003               	movf	??_enableSerial,w,c
   381  00FC9E  0AB0               	xorlw	176	; case 176
   382  00FCA0  D7E5               	goto	l758
   383  00FCA2                     l1080:
   384                           
   385                           ; Switch size 1, requested type "space"
   386                           ; Number of cases is 1, Range of values is 96 to 96
   387                           ; switch strategies available:
   388                           ; Name         Instructions Cycles
   389                           ; simple_byte            4     3 (average)
   390                           ;	Chosen strategy is simple_byte
   391  00FCA2  5003               	movf	??_enableSerial,w,c
   392  00FCA4  0A60               	xorlw	96	; case 96
   393  00FCA6  B4D8               	btfsc	status,2,c
   394  00FCA8  D7D9               	goto	l750
   395  00FCAA  D7E0               	goto	l758
   396  00FCAC                     l1082:
   397                           
   398                           ; Switch size 1, requested type "space"
   399                           ; Number of cases is 1, Range of values is 128 to 128
   400                           ; switch strategies available:
   401                           ; Name         Instructions Cycles
   402                           ; simple_byte            4     3 (average)
   403                           ;	Chosen strategy is simple_byte
   404  00FCAC  5003               	movf	??_enableSerial,w,c
   405  00FCAE  0A80               	xorlw	128	; case 128
   406  00FCB0  B4D8               	btfsc	status,2,c
   407  00FCB2  D7D6               	goto	l752
   408  00FCB4  D7DB               	goto	l758
   409  00FCB6                     l1084:
   410                           
   411                           ; Switch size 1, requested type "space"
   412                           ; Number of cases is 1, Range of values is 177 to 177
   413                           ; switch strategies available:
   414                           ; Name         Instructions Cycles
   415                           ; simple_byte            4     3 (average)
   416                           ;	Chosen strategy is simple_byte
   417  00FCB6  5003               	movf	??_enableSerial,w,c
   418  00FCB8  0AB1               	xorlw	177	; case 177
   419  00FCBA  B4D8               	btfsc	status,2,c
   420  00FCBC  D7D3               	goto	l754
   421  00FCBE  D7D6               	goto	l758
   422  00FCC0                     l1086:
   423                           
   424                           ; Switch size 1, requested type "space"
   425                           ; Number of cases is 1, Range of values is 0 to 0
   426                           ; switch strategies available:
   427                           ; Name         Instructions Cycles
   428                           ; simple_byte            4     3 (average)
   429                           ;	Chosen strategy is simple_byte
   430  00FCC0  5003               	movf	??_enableSerial,w,c
   431  00FCC2  0A00               	xorlw	0	; case 0
   432  00FCC4  B4D8               	btfsc	status,2,c
   433  00FCC6  D7D0               	goto	l756
   434  00FCC8  D7D1               	goto	l758
   435  00FCCA                     l762:
   436                           
   437                           ;main.c: 399: SPBRGH2 = 0;
   438  00FCCA  0E00               	movlw	0
   439  00FCCC  6E76               	movwf	3958,c	;volatile
   440                           
   441                           ;main.c: 400: TXSTA2bits.BRGH = 0;
   442  00FCCE  9472               	bcf	3954,2,c	;volatile
   443                           
   444                           ;main.c: 401: BAUDCON2bits.BRG16 = 0;
   445  00FCD0  9670               	bcf	3952,3,c	;volatile
   446                           
   447                           ;main.c: 403: TXSTA2bits.TX9 = 0;
   448  00FCD2  9C72               	bcf	3954,6,c	;volatile
   449                           
   450                           ;main.c: 404: RCSTA2bits.RX9 = 0;
   451  00FCD4  9C71               	bcf	3953,6,c	;volatile
   452                           
   453                           ;main.c: 406: TXSTA2bits.SYNC = 0;
   454  00FCD6  9872               	bcf	3954,4,c	;volatile
   455                           
   456                           ;main.c: 407: BAUDCON2bits.DTRXP = 1;
   457  00FCD8  8A70               	bsf	3952,5,c	;volatile
   458                           
   459                           ;main.c: 409: TXSTA2bits.TXEN = 1;
   460  00FCDA  8A72               	bsf	3954,5,c	;volatile
   461                           
   462                           ;main.c: 410: RCSTA2bits.CREN = 1;
   463  00FCDC  8871               	bsf	3953,4,c	;volatile
   464                           
   465                           ;main.c: 412: RCSTA2bits.SPEN = 1;
   466  00FCDE  8E71               	bsf	3953,7,c	;volatile
   467  00FCE0  0012               	return	
   468  00FCE2                     __end_of_enableSerial:
   469                           	opt stack 0
   470                           tblptru	equ	0xFF8
   471                           status	equ	0xFD8
   472                           
   473 ;; *************** function _dispSeg *****************
   474 ;; Defined at:
   475 ;;		line 153 in file "source/main.c"
   476 ;; Parameters:    Size  Location     Type
   477 ;;  segment         1    wreg     unsigned char 
   478 ;;  letter          1    0[COMRAM] unsigned char 
   479 ;; Auto vars:     Size  Location     Type
   480 ;;  segment         1    1[COMRAM] unsigned char 
   481 ;; Return value:  Size  Location     Type
   482 ;;		None               void
   483 ;; Registers used:
   484 ;;		wreg, status,2, status,0
   485 ;; Tracked objects:
   486 ;;		On entry : 0/0
   487 ;;		On exit  : 0/0
   488 ;;		Unchanged: 0/0
   489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   490 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   491 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   493 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   494 ;;Total ram usage:        2 bytes
   495 ;; Hardware stack levels used:    1
   496 ;; This function calls:
   497 ;;		Nothing
   498 ;; This function is called by:
   499 ;;		_main
   500 ;;		_cycleSegDisplays
   501 ;; This function uses a non-reentrant model
   502 ;;
   503                           
   504                           	psect	text3
   505  00FCE2                     __ptext3:
   506                           	opt stack 0
   507  00FCE2                     _dispSeg:
   508                           	opt stack 30
   509                           
   510                           ;incstack = 0
   511                           ;dispSeg@segment stored from wreg
   512  00FCE2  CFE8 F002          	movff	wreg,dispSeg@segment
   513                           
   514                           ;main.c: 155: switch (letter) {
   515  00FCE6  D154               	goto	l878
   516  00FCE8                     l804:
   517                           
   518                           ;main.c: 157: if (segment == 1) {
   519  00FCE8  0402               	decf	dispSeg@segment,w,c
   520  00FCEA  A4D8               	btfss	status,2,c
   521  00FCEC  D007               	goto	l91
   522                           
   523                           ;main.c: 158: LATAbits.LA2 = LATAbits.LA3 = LATAbits.LA4 = LATAbits.LA5 = LATEbits.LE0 =
      +                           LATAbits.LA0 = LATAbits.LA1 = 0;
   524  00FCEE  9289               	bcf	3977,1,c	;volatile
   525  00FCF0  9089               	bcf	3977,0,c	;volatile
   526  00FCF2  908D               	bcf	3981,0,c	;volatile
   527  00FCF4  9A89               	bcf	3977,5,c	;volatile
   528  00FCF6  9889               	bcf	3977,4,c	;volatile
   529  00FCF8  9689               	bcf	3977,3,c	;volatile
   530  00FCFA  9489               	bcf	3977,2,c	;volatile
   531  00FCFC                     l91:
   532                           
   533                           ;main.c: 159: }
   534                           ;main.c: 160: LATAbits.LA7 = LATAbits.LA6 = LATCbits.LC2 = LATCbits.LC0 = LATCbits.LC1 =
      +                           LATEbits.LE1 = LATEbits.LE2 = 0;
   535  00FCFC  948D               	bcf	3981,2,c	;volatile
   536  00FCFE  928D               	bcf	3981,1,c	;volatile
   537  00FD00  928B               	bcf	3979,1,c	;volatile
   538  00FD02  908B               	bcf	3979,0,c	;volatile
   539  00FD04  948B               	bcf	3979,2,c	;volatile
   540  00FD06  9C89               	bcf	3977,6,c	;volatile
   541  00FD08  9E89               	bcf	3977,7,c	;volatile
   542                           
   543                           ;main.c: 161: break;
   544  00FD0A  0012               	return	
   545  00FD0C                     l808:
   546                           
   547                           ;main.c: 163: if (segment == 1) {
   548  00FD0C  0402               	decf	dispSeg@segment,w,c
   549  00FD0E  A4D8               	btfss	status,2,c
   550  00FD10  D007               	goto	l94
   551                           
   552                           ;main.c: 164: LATAbits.LA1 = 1;
   553  00FD12  8289               	bsf	3977,1,c	;volatile
   554                           
   555                           ;main.c: 165: LATAbits.LA2 = LATAbits.LA3 = LATAbits.LA4 = LATAbits.LA5 = LATEbits.LE0 =
      +                           LATAbits.LA0 = 0;
   556  00FD14  9089               	bcf	3977,0,c	;volatile
   557  00FD16  908D               	bcf	3981,0,c	;volatile
   558  00FD18  9A89               	bcf	3977,5,c	;volatile
   559  00FD1A  9889               	bcf	3977,4,c	;volatile
   560  00FD1C  9689               	bcf	3977,3,c	;volatile
   561  00FD1E  9489               	bcf	3977,2,c	;volatile
   562  00FD20                     l94:
   563                           
   564                           ;main.c: 166: }
   565                           ;main.c: 167: LATEbits.LE2 = 1;
   566  00FD20  848D               	bsf	3981,2,c	;volatile
   567                           
   568                           ;main.c: 168: LATAbits.LA7 = LATAbits.LA6 = LATCbits.LC2 = LATCbits.LC0 = LATCbits.LC1 =
      +                           LATEbits.LE1 = 0;
   569  00FD22  928D               	bcf	3981,1,c	;volatile
   570  00FD24  928B               	bcf	3979,1,c	;volatile
   571  00FD26  908B               	bcf	3979,0,c	;volatile
   572  00FD28  948B               	bcf	3979,2,c	;volatile
   573  00FD2A  9C89               	bcf	3977,6,c	;volatile
   574  00FD2C  9E89               	bcf	3977,7,c	;volatile
   575                           
   576                           ;main.c: 169: break;
   577  00FD2E  0012               	return	
   578  00FD30                     l812:
   579                           
   580                           ;main.c: 171: if (segment == 1) {
   581  00FD30  0402               	decf	dispSeg@segment,w,c
   582  00FD32  A4D8               	btfss	status,2,c
   583  00FD34  D008               	goto	l96
   584                           
   585                           ;main.c: 172: LATAbits.LA2 = LATAbits.LA3 = LATAbits.LA4 = LATAbits.LA5 = LATEbits.LE0 =
      +                           LATAbits.LA0 = 1;
   586  00FD36  8089               	bsf	3977,0,c	;volatile
   587  00FD38  808D               	bsf	3981,0,c	;volatile
   588  00FD3A  8A89               	bsf	3977,5,c	;volatile
   589  00FD3C  8889               	bsf	3977,4,c	;volatile
   590  00FD3E  8689               	bsf	3977,3,c	;volatile
   591  00FD40  8489               	bsf	3977,2,c	;volatile
   592                           
   593                           ;main.c: 173: LATAbits.LA1 = 0;
   594  00FD42  9289               	bcf	3977,1,c	;volatile
   595                           
   596                           ;main.c: 174: return;
   597  00FD44  0012               	return	
   598  00FD46                     l96:
   599                           
   600                           ;main.c: 175: }
   601                           ;main.c: 176: LATAbits.LA7 = LATAbits.LA6 = LATCbits.LC2 = LATCbits.LC0 = LATCbits.LC1 =
      +                           LATEbits.LE1 = 1;
   602  00FD46  828D               	bsf	3981,1,c	;volatile
   603  00FD48  828B               	bsf	3979,1,c	;volatile
   604  00FD4A  808B               	bsf	3979,0,c	;volatile
   605  00FD4C  848B               	bsf	3979,2,c	;volatile
   606  00FD4E  8C89               	bsf	3977,6,c	;volatile
   607  00FD50  8E89               	bsf	3977,7,c	;volatile
   608                           
   609                           ;main.c: 177: LATEbits.LE2 = 0;
   610  00FD52  948D               	bcf	3981,2,c	;volatile
   611                           
   612                           ;main.c: 178: break;
   613  00FD54  0012               	return	
   614  00FD56                     l816:
   615                           
   616                           ;main.c: 180: if (segment == 1) {
   617  00FD56  0402               	decf	dispSeg@segment,w,c
   618  00FD58  A4D8               	btfss	status,2,c
   619  00FD5A  D008               	goto	l99
   620                           
   621                           ;main.c: 181: LATAbits.LA3 = LATAbits.LA4 = 1;
   622  00FD5C  8889               	bsf	3977,4,c	;volatile
   623  00FD5E  8689               	bsf	3977,3,c	;volatile
   624                           
   625                           ;main.c: 182: LATAbits.LA2 = LATAbits.LA5 = LATEbits.LE0 = LATAbits.LA0 = LATAbits.LA1 =
      +                           0;
   626  00FD60  9289               	bcf	3977,1,c	;volatile
   627  00FD62  9089               	bcf	3977,0,c	;volatile
   628  00FD64  908D               	bcf	3981,0,c	;volatile
   629  00FD66  9A89               	bcf	3977,5,c	;volatile
   630  00FD68  9489               	bcf	3977,2,c	;volatile
   631                           
   632                           ;main.c: 183: return;
   633  00FD6A  0012               	return	
   634  00FD6C                     l99:
   635                           
   636                           ;main.c: 184: }
   637                           ;main.c: 185: LATAbits.LA6 = LATCbits.LC2 = 1;
   638  00FD6C  848B               	bsf	3979,2,c	;volatile
   639  00FD6E  8C89               	bsf	3977,6,c	;volatile
   640                           
   641                           ;main.c: 186: LATAbits.LA7 = LATCbits.LC0 = LATCbits.LC1 = LATEbits.LE1 = LATEbits.LE2 =
      +                           0;
   642  00FD70  948D               	bcf	3981,2,c	;volatile
   643  00FD72  928D               	bcf	3981,1,c	;volatile
   644  00FD74  928B               	bcf	3979,1,c	;volatile
   645  00FD76  908B               	bcf	3979,0,c	;volatile
   646  00FD78  9E89               	bcf	3977,7,c	;volatile
   647                           
   648                           ;main.c: 187: break;
   649  00FD7A  0012               	return	
   650  00FD7C                     l820:
   651                           
   652                           ;main.c: 189: if (segment == 1) {
   653  00FD7C  0402               	decf	dispSeg@segment,w,c
   654  00FD7E  A4D8               	btfss	status,2,c
   655  00FD80  D008               	goto	l101
   656                           
   657                           ;main.c: 190: LATAbits.LA2 = LATAbits.LA3 = LATAbits.LA1 = LATEbits.LE0 = LATAbits.LA5 =
      +                           1;
   658  00FD82  8A89               	bsf	3977,5,c	;volatile
   659  00FD84  808D               	bsf	3981,0,c	;volatile
   660  00FD86  8289               	bsf	3977,1,c	;volatile
   661  00FD88  8689               	bsf	3977,3,c	;volatile
   662  00FD8A  8489               	bsf	3977,2,c	;volatile
   663                           
   664                           ;main.c: 191: LATAbits.LA4 = LATAbits.LA0 = 0;
   665  00FD8C  9089               	bcf	3977,0,c	;volatile
   666  00FD8E  9889               	bcf	3977,4,c	;volatile
   667                           
   668                           ;main.c: 192: return;
   669  00FD90  0012               	return	
   670  00FD92                     l101:
   671                           
   672                           ;main.c: 193: }
   673                           ;main.c: 194: LATAbits.LA7 = LATAbits.LA6 = LATEbits.LE2 = LATCbits.LC1 = LATCbits.LC0 =
      +                           1;
   674  00FD92  808B               	bsf	3979,0,c	;volatile
   675  00FD94  828B               	bsf	3979,1,c	;volatile
   676  00FD96  848D               	bsf	3981,2,c	;volatile
   677  00FD98  8C89               	bsf	3977,6,c	;volatile
   678  00FD9A  8E89               	bsf	3977,7,c	;volatile
   679                           
   680                           ;main.c: 195: LATCbits.LC2 = LATEbits.LE1 = 0;
   681  00FD9C  928D               	bcf	3981,1,c	;volatile
   682  00FD9E  948B               	bcf	3979,2,c	;volatile
   683                           
   684                           ;main.c: 196: break;
   685  00FDA0  0012               	return	
   686  00FDA2                     l824:
   687                           
   688                           ;main.c: 198: if (segment == 1) {
   689  00FDA2  0402               	decf	dispSeg@segment,w,c
   690  00FDA4  A4D8               	btfss	status,2,c
   691  00FDA6  D008               	goto	l103
   692                           
   693                           ;main.c: 199: LATAbits.LA2 = LATAbits.LA3 = LATAbits.LA1 = LATAbits.LA4 = LATAbits.LA5 =
      +                           1;
   694  00FDA8  8A89               	bsf	3977,5,c	;volatile
   695  00FDAA  8889               	bsf	3977,4,c	;volatile
   696  00FDAC  8289               	bsf	3977,1,c	;volatile
   697  00FDAE  8689               	bsf	3977,3,c	;volatile
   698  00FDB0  8489               	bsf	3977,2,c	;volatile
   699                           
   700                           ;main.c: 200: LATEbits.LE0 = LATAbits.LA0 = 0;
   701  00FDB2  9089               	bcf	3977,0,c	;volatile
   702  00FDB4  908D               	bcf	3981,0,c	;volatile
   703                           
   704                           ;main.c: 201: return;
   705  00FDB6  0012               	return	
   706  00FDB8                     l103:
   707                           
   708                           ;main.c: 202: }
   709                           ;main.c: 203: LATAbits.LA7 = LATAbits.LA6 = LATEbits.LE2 = LATCbits.LC2 = LATCbits.LC0 =
      +                           1;
   710  00FDB8  808B               	bsf	3979,0,c	;volatile
   711  00FDBA  848B               	bsf	3979,2,c	;volatile
   712  00FDBC  848D               	bsf	3981,2,c	;volatile
   713  00FDBE  8C89               	bsf	3977,6,c	;volatile
   714  00FDC0  8E89               	bsf	3977,7,c	;volatile
   715                           
   716                           ;main.c: 204: LATCbits.LC1 = LATEbits.LE1 = 0;
   717  00FDC2  928D               	bcf	3981,1,c	;volatile
   718  00FDC4  928B               	bcf	3979,1,c	;volatile
   719                           
   720                           ;main.c: 205: break;
   721  00FDC6  0012               	return	
   722  00FDC8                     l828:
   723                           
   724                           ;main.c: 207: if (segment == 1) {
   725  00FDC8  0402               	decf	dispSeg@segment,w,c
   726  00FDCA  A4D8               	btfss	status,2,c
   727  00FDCC  D008               	goto	l105
   728                           
   729                           ;main.c: 208: LATAbits.LA0 = LATAbits.LA1 = LATAbits.LA3 = LATAbits.LA4 = 1;
   730  00FDCE  8889               	bsf	3977,4,c	;volatile
   731  00FDD0  8689               	bsf	3977,3,c	;volatile
   732  00FDD2  8289               	bsf	3977,1,c	;volatile
   733  00FDD4  8089               	bsf	3977,0,c	;volatile
   734                           
   735                           ;main.c: 209: LATAbits.LA2 = LATAbits.LA5 = LATEbits.LE0 = 0;
   736  00FDD6  908D               	bcf	3981,0,c	;volatile
   737  00FDD8  9A89               	bcf	3977,5,c	;volatile
   738  00FDDA  9489               	bcf	3977,2,c	;volatile
   739                           
   740                           ;main.c: 210: return;
   741  00FDDC  0012               	return	
   742  00FDDE                     l105:
   743                           
   744                           ;main.c: 211: }
   745                           ;main.c: 212: LATEbits.LE1 = LATEbits.LE2 = LATAbits.LA6 = LATCbits.LC2 = 1;
   746  00FDDE  848B               	bsf	3979,2,c	;volatile
   747  00FDE0  8C89               	bsf	3977,6,c	;volatile
   748  00FDE2  848D               	bsf	3981,2,c	;volatile
   749  00FDE4  828D               	bsf	3981,1,c	;volatile
   750                           
   751                           ;main.c: 213: LATAbits.LA7 = LATCbits.LC0 = LATCbits.LC1 = 0;
   752  00FDE6  928B               	bcf	3979,1,c	;volatile
   753  00FDE8  908B               	bcf	3979,0,c	;volatile
   754  00FDEA  9E89               	bcf	3977,7,c	;volatile
   755                           
   756                           ;main.c: 214: break;
   757  00FDEC  0012               	return	
   758  00FDEE                     l832:
   759                           
   760                           ;main.c: 216: if (segment == 1) {
   761  00FDEE  0402               	decf	dispSeg@segment,w,c
   762  00FDF0  A4D8               	btfss	status,2,c
   763  00FDF2  D008               	goto	l107
   764                           
   765                           ;main.c: 217: LATAbits.LA2 = LATAbits.LA0 = LATAbits.LA1 = LATAbits.LA4 = LATAbits.LA5 =
      +                           1;
   766  00FDF4  8A89               	bsf	3977,5,c	;volatile
   767  00FDF6  8889               	bsf	3977,4,c	;volatile
   768  00FDF8  8289               	bsf	3977,1,c	;volatile
   769  00FDFA  8089               	bsf	3977,0,c	;volatile
   770  00FDFC  8489               	bsf	3977,2,c	;volatile
   771                           
   772                           ;main.c: 218: LATAbits.LA3 = LATEbits.LE0 = 0;
   773  00FDFE  908D               	bcf	3981,0,c	;volatile
   774  00FE00  9689               	bcf	3977,3,c	;volatile
   775                           
   776                           ;main.c: 219: return;
   777  00FE02  0012               	return	
   778  00FE04                     l107:
   779                           
   780                           ;main.c: 220: }
   781                           ;main.c: 221: LATAbits.LA7 = LATEbits.LE1 = LATEbits.LE2 = LATCbits.LC2 = LATCbits.LC0 =
      +                           1;
   782  00FE04  808B               	bsf	3979,0,c	;volatile
   783  00FE06  848B               	bsf	3979,2,c	;volatile
   784  00FE08  848D               	bsf	3981,2,c	;volatile
   785  00FE0A  828D               	bsf	3981,1,c	;volatile
   786  00FE0C  8E89               	bsf	3977,7,c	;volatile
   787                           
   788                           ;main.c: 222: LATAbits.LA6 = LATCbits.LC1 = 0;
   789  00FE0E  928B               	bcf	3979,1,c	;volatile
   790  00FE10  9C89               	bcf	3977,6,c	;volatile
   791                           
   792                           ;main.c: 223: break;
   793  00FE12  0012               	return	
   794  00FE14                     l836:
   795                           
   796                           ;main.c: 225: if (segment == 1) {
   797  00FE14  0402               	decf	dispSeg@segment,w,c
   798  00FE16  A4D8               	btfss	status,2,c
   799  00FE18  D008               	goto	l109
   800                           
   801                           ;main.c: 226: LATAbits.LA2 = LATAbits.LA0 = LATAbits.LA1 = LATAbits.LA4 = LATAbits.LA5 =
      +                           LATEbits.LE0 = 1;
   802  00FE1A  808D               	bsf	3981,0,c	;volatile
   803  00FE1C  8A89               	bsf	3977,5,c	;volatile
   804  00FE1E  8889               	bsf	3977,4,c	;volatile
   805  00FE20  8289               	bsf	3977,1,c	;volatile
   806  00FE22  8089               	bsf	3977,0,c	;volatile
   807  00FE24  8489               	bsf	3977,2,c	;volatile
   808                           
   809                           ;main.c: 227: LATAbits.LA3 = 0;
   810  00FE26  9689               	bcf	3977,3,c	;volatile
   811                           
   812                           ;main.c: 228: return;
   813  00FE28  0012               	return	
   814  00FE2A                     l109:
   815                           
   816                           ;main.c: 229: }
   817                           ;main.c: 230: LATAbits.LA7 = LATEbits.LE1 = LATEbits.LE2 = LATCbits.LC2 = LATCbits.LC0 =
      +                           LATCbits.LC1 = 1;
   818  00FE2A  828B               	bsf	3979,1,c	;volatile
   819  00FE2C  808B               	bsf	3979,0,c	;volatile
   820  00FE2E  848B               	bsf	3979,2,c	;volatile
   821  00FE30  848D               	bsf	3981,2,c	;volatile
   822  00FE32  828D               	bsf	3981,1,c	;volatile
   823  00FE34  8E89               	bsf	3977,7,c	;volatile
   824                           
   825                           ;main.c: 231: LATAbits.LA6 = 0;
   826  00FE36  9C89               	bcf	3977,6,c	;volatile
   827                           
   828                           ;main.c: 232: break;
   829  00FE38  0012               	return	
   830  00FE3A                     l840:
   831                           
   832                           ;main.c: 234: if (segment == 1) {
   833  00FE3A  0402               	decf	dispSeg@segment,w,c
   834  00FE3C  A4D8               	btfss	status,2,c
   835  00FE3E  D008               	goto	l111
   836                           
   837                           ;main.c: 235: LATAbits.LA2 = LATAbits.LA3 = LATAbits.LA4 = 1;
   838  00FE40  8889               	bsf	3977,4,c	;volatile
   839  00FE42  8689               	bsf	3977,3,c	;volatile
   840  00FE44  8489               	bsf	3977,2,c	;volatile
   841                           
   842                           ;main.c: 236: LATAbits.LA5 = LATEbits.LE0 = LATAbits.LA0 = LATAbits.LA1 = 0;
   843  00FE46  9289               	bcf	3977,1,c	;volatile
   844  00FE48  9089               	bcf	3977,0,c	;volatile
   845  00FE4A  908D               	bcf	3981,0,c	;volatile
   846  00FE4C  9A89               	bcf	3977,5,c	;volatile
   847                           
   848                           ;main.c: 237: return;
   849  00FE4E  0012               	return	
   850  00FE50                     l111:
   851                           
   852                           ;main.c: 238: }
   853                           ;main.c: 239: LATAbits.LA7 = LATAbits.LA6 = LATCbits.LC2 = 1;
   854  00FE50  848B               	bsf	3979,2,c	;volatile
   855  00FE52  8C89               	bsf	3977,6,c	;volatile
   856  00FE54  8E89               	bsf	3977,7,c	;volatile
   857                           
   858                           ;main.c: 240: LATCbits.LC0 = LATCbits.LC1 = LATEbits.LE1 = LATEbits.LE2 = 0;
   859  00FE56  948D               	bcf	3981,2,c	;volatile
   860  00FE58  928D               	bcf	3981,1,c	;volatile
   861  00FE5A  928B               	bcf	3979,1,c	;volatile
   862  00FE5C  908B               	bcf	3979,0,c	;volatile
   863                           
   864                           ;main.c: 241: break;
   865  00FE5E  0012               	return	
   866  00FE60                     l844:
   867                           
   868                           ;main.c: 243: if (segment == 1) {
   869  00FE60  0402               	decf	dispSeg@segment,w,c
   870  00FE62  A4D8               	btfss	status,2,c
   871  00FE64  D008               	goto	l113
   872                           
   873                           ;main.c: 244: LATAbits.LA2 = LATAbits.LA3 = LATAbits.LA4 = LATAbits.LA5 = LATEbits.LE0 =
      +                           LATAbits.LA0 = LATAbits.LA1 = 1;
   874  00FE66  8289               	bsf	3977,1,c	;volatile
   875  00FE68  8089               	bsf	3977,0,c	;volatile
   876  00FE6A  808D               	bsf	3981,0,c	;volatile
   877  00FE6C  8A89               	bsf	3977,5,c	;volatile
   878  00FE6E  8889               	bsf	3977,4,c	;volatile
   879  00FE70  8689               	bsf	3977,3,c	;volatile
   880  00FE72  8489               	bsf	3977,2,c	;volatile
   881                           
   882                           ;main.c: 245: return;
   883  00FE74  0012               	return	
   884  00FE76                     l113:
   885                           
   886                           ;main.c: 246: }
   887                           ;main.c: 247: LATAbits.LA7 = LATAbits.LA6 = LATCbits.LC2 = LATCbits.LC0 = LATCbits.LC1 =
      +                           LATEbits.LE1 = LATEbits.LE2 = 1;
   888  00FE76  848D               	bsf	3981,2,c	;volatile
   889  00FE78  828D               	bsf	3981,1,c	;volatile
   890  00FE7A  828B               	bsf	3979,1,c	;volatile
   891  00FE7C  808B               	bsf	3979,0,c	;volatile
   892  00FE7E  848B               	bsf	3979,2,c	;volatile
   893  00FE80  8C89               	bsf	3977,6,c	;volatile
   894  00FE82  8E89               	bsf	3977,7,c	;volatile
   895                           
   896                           ;main.c: 248: break;
   897  00FE84  0012               	return	
   898  00FE86                     l848:
   899                           
   900                           ;main.c: 250: if (segment == 1) {
   901  00FE86  0402               	decf	dispSeg@segment,w,c
   902  00FE88  A4D8               	btfss	status,2,c
   903  00FE8A  D008               	goto	l115
   904                           
   905                           ;main.c: 251: LATAbits.LA2 = LATAbits.LA3 = LATAbits.LA4 = LATAbits.LA5 = LATAbits.LA0 =
      +                           LATAbits.LA1 = 1;
   906  00FE8C  8289               	bsf	3977,1,c	;volatile
   907  00FE8E  8089               	bsf	3977,0,c	;volatile
   908  00FE90  8A89               	bsf	3977,5,c	;volatile
   909  00FE92  8889               	bsf	3977,4,c	;volatile
   910  00FE94  8689               	bsf	3977,3,c	;volatile
   911  00FE96  8489               	bsf	3977,2,c	;volatile
   912                           
   913                           ;main.c: 252: LATEbits.LE0 = 0;
   914  00FE98  908D               	bcf	3981,0,c	;volatile
   915                           
   916                           ;main.c: 253: return;
   917  00FE9A  0012               	return	
   918  00FE9C                     l115:
   919                           
   920                           ;main.c: 254: }
   921                           ;main.c: 255: LATAbits.LA7 = LATAbits.LA6 = LATCbits.LC2 = LATCbits.LC0 = LATEbits.LE1 =
      +                           LATEbits.LE2 = 1;
   922  00FE9C  848D               	bsf	3981,2,c	;volatile
   923  00FE9E  828D               	bsf	3981,1,c	;volatile
   924  00FEA0  808B               	bsf	3979,0,c	;volatile
   925  00FEA2  848B               	bsf	3979,2,c	;volatile
   926  00FEA4  8C89               	bsf	3977,6,c	;volatile
   927  00FEA6  8E89               	bsf	3977,7,c	;volatile
   928                           
   929                           ;main.c: 256: LATCbits.LC1 = 0;
   930  00FEA8  928B               	bcf	3979,1,c	;volatile
   931                           
   932                           ;main.c: 257: break;
   933  00FEAA  0012               	return	
   934  00FEAC                     l852:
   935                           
   936                           ;main.c: 259: if (segment == 1) {
   937  00FEAC  0402               	decf	dispSeg@segment,w,c
   938  00FEAE  A4D8               	btfss	status,2,c
   939  00FEB0  D008               	goto	l117
   940                           
   941                           ;main.c: 260: LATAbits.LA2 = LATAbits.LA3 = LATAbits.LA4 = LATEbits.LE0 = LATAbits.LA0 =
      +                           LATAbits.LA1 = 1;
   942  00FEB2  8289               	bsf	3977,1,c	;volatile
   943  00FEB4  8089               	bsf	3977,0,c	;volatile
   944  00FEB6  808D               	bsf	3981,0,c	;volatile
   945  00FEB8  8889               	bsf	3977,4,c	;volatile
   946  00FEBA  8689               	bsf	3977,3,c	;volatile
   947  00FEBC  8489               	bsf	3977,2,c	;volatile
   948                           
   949                           ;main.c: 261: LATAbits.LA5 = 0;
   950  00FEBE  9A89               	bcf	3977,5,c	;volatile
   951                           
   952                           ;main.c: 262: return;
   953  00FEC0  0012               	return	
   954  00FEC2                     l117:
   955                           
   956                           ;main.c: 263: }
   957                           ;main.c: 264: LATAbits.LA7 = LATAbits.LA6 = LATCbits.LC2 = LATCbits.LC1 = LATEbits.LE1 =
      +                           LATEbits.LE2 = 1;
   958  00FEC2  848D               	bsf	3981,2,c	;volatile
   959  00FEC4  828D               	bsf	3981,1,c	;volatile
   960  00FEC6  828B               	bsf	3979,1,c	;volatile
   961  00FEC8  848B               	bsf	3979,2,c	;volatile
   962  00FECA  8C89               	bsf	3977,6,c	;volatile
   963  00FECC  8E89               	bsf	3977,7,c	;volatile
   964                           
   965                           ;main.c: 265: LATCbits.LC0 = 0;
   966  00FECE  908B               	bcf	3979,0,c	;volatile
   967                           
   968                           ;main.c: 266: break;
   969  00FED0  0012               	return	
   970  00FED2                     l856:
   971                           
   972                           ;main.c: 268: if (segment == 1) {
   973  00FED2  0402               	decf	dispSeg@segment,w,c
   974  00FED4  A4D8               	btfss	status,2,c
   975  00FED6  D008               	goto	l119
   976                           
   977                           ;main.c: 269: LATAbits.LA4 = LATAbits.LA5 = LATEbits.LE0 = LATAbits.LA0 = LATAbits.LA1 =
      +                           1;
   978  00FED8  8289               	bsf	3977,1,c	;volatile
   979  00FEDA  8089               	bsf	3977,0,c	;volatile
   980  00FEDC  808D               	bsf	3981,0,c	;volatile
   981  00FEDE  8A89               	bsf	3977,5,c	;volatile
   982  00FEE0  8889               	bsf	3977,4,c	;volatile
   983                           
   984                           ;main.c: 270: LATAbits.LA2 = LATAbits.LA3 = 0;
   985  00FEE2  9689               	bcf	3977,3,c	;volatile
   986  00FEE4  9489               	bcf	3977,2,c	;volatile
   987                           
   988                           ;main.c: 271: return;
   989  00FEE6  0012               	return	
   990  00FEE8                     l119:
   991                           
   992                           ;main.c: 272: }
   993                           ;main.c: 273: LATCbits.LC2 = LATCbits.LC0 = LATCbits.LC1 = LATEbits.LE1 = LATEbits.LE2 =
      +                           1;
   994  00FEE8  848D               	bsf	3981,2,c	;volatile
   995  00FEEA  828D               	bsf	3981,1,c	;volatile
   996  00FEEC  828B               	bsf	3979,1,c	;volatile
   997  00FEEE  808B               	bsf	3979,0,c	;volatile
   998  00FEF0  848B               	bsf	3979,2,c	;volatile
   999                           
  1000                           ;main.c: 274: LATAbits.LA7 = LATAbits.LA6 = 0;
  1001  00FEF2  9C89               	bcf	3977,6,c	;volatile
  1002  00FEF4  9E89               	bcf	3977,7,c	;volatile
  1003                           
  1004                           ;main.c: 275: break;
  1005  00FEF6  0012               	return	
  1006  00FEF8                     l860:
  1007                           
  1008                           ;main.c: 277: if (segment == 1) {
  1009  00FEF8  0402               	decf	dispSeg@segment,w,c
  1010  00FEFA  A4D8               	btfss	status,2,c
  1011  00FEFC  D008               	goto	l121
  1012                           
  1013                           ;main.c: 278: LATAbits.LA2 = LATAbits.LA5 = LATEbits.LE0 = LATAbits.LA0 = 1;
  1014  00FEFE  8089               	bsf	3977,0,c	;volatile
  1015  00FF00  808D               	bsf	3981,0,c	;volatile
  1016  00FF02  8A89               	bsf	3977,5,c	;volatile
  1017  00FF04  8489               	bsf	3977,2,c	;volatile
  1018                           
  1019                           ;main.c: 279: LATAbits.LA3 = LATAbits.LA4 = LATAbits.LA1 = 0;
  1020  00FF06  9289               	bcf	3977,1,c	;volatile
  1021  00FF08  9889               	bcf	3977,4,c	;volatile
  1022  00FF0A  9689               	bcf	3977,3,c	;volatile
  1023                           
  1024                           ;main.c: 280: return;
  1025  00FF0C  0012               	return	
  1026  00FF0E                     l121:
  1027                           
  1028                           ;main.c: 281: }
  1029                           ;main.c: 282: LATAbits.LA7 = LATCbits.LC0 = LATCbits.LC1 = LATEbits.LE1 = 1;
  1030  00FF0E  828D               	bsf	3981,1,c	;volatile
  1031  00FF10  828B               	bsf	3979,1,c	;volatile
  1032  00FF12  808B               	bsf	3979,0,c	;volatile
  1033  00FF14  8E89               	bsf	3977,7,c	;volatile
  1034                           
  1035                           ;main.c: 283: LATAbits.LA6 = LATCbits.LC2 = LATEbits.LE2 = 0;
  1036  00FF16  948D               	bcf	3981,2,c	;volatile
  1037  00FF18  948B               	bcf	3979,2,c	;volatile
  1038  00FF1A  9C89               	bcf	3977,6,c	;volatile
  1039                           
  1040                           ;main.c: 284: break;
  1041  00FF1C  0012               	return	
  1042  00FF1E                     l864:
  1043                           
  1044                           ;main.c: 286: if (segment == 1) {
  1045  00FF1E  0402               	decf	dispSeg@segment,w,c
  1046  00FF20  A4D8               	btfss	status,2,c
  1047  00FF22  D008               	goto	l123
  1048                           
  1049                           ;main.c: 287: LATAbits.LA3 = LATAbits.LA4 = LATAbits.LA5 = LATEbits.LE0 = LATAbits.LA1 =
      +                           1;
  1050  00FF24  8289               	bsf	3977,1,c	;volatile
  1051  00FF26  808D               	bsf	3981,0,c	;volatile
  1052  00FF28  8A89               	bsf	3977,5,c	;volatile
  1053  00FF2A  8889               	bsf	3977,4,c	;volatile
  1054  00FF2C  8689               	bsf	3977,3,c	;volatile
  1055                           
  1056                           ;main.c: 288: LATAbits.LA2 = LATAbits.LA0 = 0;
  1057  00FF2E  9089               	bcf	3977,0,c	;volatile
  1058  00FF30  9489               	bcf	3977,2,c	;volatile
  1059                           
  1060                           ;main.c: 289: return;
  1061  00FF32  0012               	return	
  1062  00FF34                     l123:
  1063                           
  1064                           ;main.c: 290: }
  1065                           ;main.c: 291: LATAbits.LA6 = LATCbits.LC2 = LATCbits.LC0 = LATCbits.LC1 = LATEbits.LE2 =
      +                           1;
  1066  00FF34  848D               	bsf	3981,2,c	;volatile
  1067  00FF36  828B               	bsf	3979,1,c	;volatile
  1068  00FF38  808B               	bsf	3979,0,c	;volatile
  1069  00FF3A  848B               	bsf	3979,2,c	;volatile
  1070  00FF3C  8C89               	bsf	3977,6,c	;volatile
  1071                           
  1072                           ;main.c: 292: LATAbits.LA7 = LATEbits.LE1 = 0;
  1073  00FF3E  928D               	bcf	3981,1,c	;volatile
  1074  00FF40  9E89               	bcf	3977,7,c	;volatile
  1075                           
  1076                           ;main.c: 293: break;
  1077  00FF42  0012               	return	
  1078  00FF44                     l868:
  1079                           
  1080                           ;main.c: 295: if (segment == 1) {
  1081  00FF44  0402               	decf	dispSeg@segment,w,c
  1082  00FF46  A4D8               	btfss	status,2,c
  1083  00FF48  D008               	goto	l125
  1084                           
  1085                           ;main.c: 296: LATAbits.LA2 = LATAbits.LA5 = LATEbits.LE0 = LATAbits.LA0 = LATAbits.LA1 =
      +                           1;
  1086  00FF4A  8289               	bsf	3977,1,c	;volatile
  1087  00FF4C  8089               	bsf	3977,0,c	;volatile
  1088  00FF4E  808D               	bsf	3981,0,c	;volatile
  1089  00FF50  8A89               	bsf	3977,5,c	;volatile
  1090  00FF52  8489               	bsf	3977,2,c	;volatile
  1091                           
  1092                           ;main.c: 297: LATAbits.LA3 = LATAbits.LA4 = 0;
  1093  00FF54  9889               	bcf	3977,4,c	;volatile
  1094  00FF56  9689               	bcf	3977,3,c	;volatile
  1095                           
  1096                           ;main.c: 298: return;
  1097  00FF58  0012               	return	
  1098  00FF5A                     l125:
  1099                           
  1100                           ;main.c: 299: }
  1101                           ;main.c: 300: LATAbits.LA7 = LATCbits.LC0 = LATCbits.LC1 = LATEbits.LE1 = LATEbits.LE2 =
      +                           1;
  1102  00FF5A  848D               	bsf	3981,2,c	;volatile
  1103  00FF5C  828D               	bsf	3981,1,c	;volatile
  1104  00FF5E  828B               	bsf	3979,1,c	;volatile
  1105  00FF60  808B               	bsf	3979,0,c	;volatile
  1106  00FF62  8E89               	bsf	3977,7,c	;volatile
  1107                           
  1108                           ;main.c: 301: LATAbits.LA6 = LATCbits.LC2 = 0;
  1109  00FF64  948B               	bcf	3979,2,c	;volatile
  1110  00FF66  9C89               	bcf	3977,6,c	;volatile
  1111                           
  1112                           ;main.c: 302: break;
  1113  00FF68  0012               	return	
  1114  00FF6A                     l872:
  1115                           
  1116                           ;main.c: 304: if (segment == 1) {
  1117  00FF6A  0402               	decf	dispSeg@segment,w,c
  1118  00FF6C  A4D8               	btfss	status,2,c
  1119  00FF6E  D008               	goto	l127
  1120                           
  1121                           ;main.c: 305: LATAbits.LA2 = LATEbits.LE0 = LATAbits.LA0 = LATAbits.LA1 = 1;
  1122  00FF70  8289               	bsf	3977,1,c	;volatile
  1123  00FF72  8089               	bsf	3977,0,c	;volatile
  1124  00FF74  808D               	bsf	3981,0,c	;volatile
  1125  00FF76  8489               	bsf	3977,2,c	;volatile
  1126                           
  1127                           ;main.c: 306: LATAbits.LA3 = LATAbits.LA4 = LATAbits.LA5 = 0;
  1128  00FF78  9A89               	bcf	3977,5,c	;volatile
  1129  00FF7A  9889               	bcf	3977,4,c	;volatile
  1130  00FF7C  9689               	bcf	3977,3,c	;volatile
  1131                           
  1132                           ;main.c: 307: return;
  1133  00FF7E  0012               	return	
  1134  00FF80                     l127:
  1135                           
  1136                           ;main.c: 308: }
  1137                           ;main.c: 309: LATAbits.LA7 = LATCbits.LC1 = LATEbits.LE1 = LATEbits.LE2 = 1;
  1138  00FF80  848D               	bsf	3981,2,c	;volatile
  1139  00FF82  828D               	bsf	3981,1,c	;volatile
  1140  00FF84  828B               	bsf	3979,1,c	;volatile
  1141  00FF86  8E89               	bsf	3977,7,c	;volatile
  1142                           
  1143                           ;main.c: 310: LATAbits.LA6 = LATCbits.LC2 = LATCbits.LC0 = 0;
  1144  00FF88  908B               	bcf	3979,0,c	;volatile
  1145  00FF8A  948B               	bcf	3979,2,c	;volatile
  1146  00FF8C  9C89               	bcf	3977,6,c	;volatile
  1147                           
  1148                           ;main.c: 311: break;
  1149  00FF8E  0012               	return	
  1150  00FF90                     l878:
  1151  00FF90  5001               	movf	dispSeg@letter,w,c
  1152                           
  1153                           ; Switch size 1, requested type "space"
  1154                           ; Number of cases is 18, Range of values is 45 to 120
  1155                           ; switch strategies available:
  1156                           ; Name         Instructions Cycles
  1157                           ; simple_byte           55    28 (average)
  1158                           ;	Chosen strategy is simple_byte
  1159  00FF92  0A2D               	xorlw	45	; case 45
  1160  00FF94  B4D8               	btfsc	status,2,c
  1161  00FF96  D6BA               	goto	l808
  1162  00FF98  0A1D               	xorlw	29	; case 48
  1163  00FF9A  B4D8               	btfsc	status,2,c
  1164  00FF9C  D6C9               	goto	l812
  1165  00FF9E  0A01               	xorlw	1	; case 49
  1166  00FFA0  B4D8               	btfsc	status,2,c
  1167  00FFA2  D6D9               	goto	l816
  1168  00FFA4  0A03               	xorlw	3	; case 50
  1169  00FFA6  B4D8               	btfsc	status,2,c
  1170  00FFA8  D6E9               	goto	l820
  1171  00FFAA  0A01               	xorlw	1	; case 51
  1172  00FFAC  B4D8               	btfsc	status,2,c
  1173  00FFAE  D6F9               	goto	l824
  1174  00FFB0  0A07               	xorlw	7	; case 52
  1175  00FFB2  B4D8               	btfsc	status,2,c
  1176  00FFB4  D709               	goto	l828
  1177  00FFB6  0A01               	xorlw	1	; case 53
  1178  00FFB8  B4D8               	btfsc	status,2,c
  1179  00FFBA  D719               	goto	l832
  1180  00FFBC  0A03               	xorlw	3	; case 54
  1181  00FFBE  B4D8               	btfsc	status,2,c
  1182  00FFC0  D729               	goto	l836
  1183  00FFC2  0A01               	xorlw	1	; case 55
  1184  00FFC4  B4D8               	btfsc	status,2,c
  1185  00FFC6  D739               	goto	l840
  1186  00FFC8  0A0F               	xorlw	15	; case 56
  1187  00FFCA  B4D8               	btfsc	status,2,c
  1188  00FFCC  D749               	goto	l844
  1189  00FFCE  0A01               	xorlw	1	; case 57
  1190  00FFD0  B4D8               	btfsc	status,2,c
  1191  00FFD2  D759               	goto	l848
  1192  00FFD4  0A58               	xorlw	88	; case 97
  1193  00FFD6  B4D8               	btfsc	status,2,c
  1194  00FFD8  D769               	goto	l852
  1195  00FFDA  0A03               	xorlw	3	; case 98
  1196  00FFDC  B4D8               	btfsc	status,2,c
  1197  00FFDE  D779               	goto	l856
  1198  00FFE0  0A01               	xorlw	1	; case 99
  1199  00FFE2  B4D8               	btfsc	status,2,c
  1200  00FFE4  D789               	goto	l860
  1201  00FFE6  0A07               	xorlw	7	; case 100
  1202  00FFE8  B4D8               	btfsc	status,2,c
  1203  00FFEA  D799               	goto	l864
  1204  00FFEC  0A01               	xorlw	1	; case 101
  1205  00FFEE  B4D8               	btfsc	status,2,c
  1206  00FFF0  D7A9               	goto	l868
  1207  00FFF2  0A03               	xorlw	3	; case 102
  1208  00FFF4  B4D8               	btfsc	status,2,c
  1209  00FFF6  D7B9               	goto	l872
  1210  00FFF8  0A1E               	xorlw	30	; case 120
  1211  00FFFA  A4D8               	btfss	status,2,c
  1212  00FFFC  0012               	return	
  1213  00FFFE  D674               	goto	l804
  1214  010000                     __end_of_dispSeg:
  1215                           	opt stack 0
  1216  0000                     tblptru	equ	0xFF8
  1217                           wreg	equ	0xFE8
  1218                           status	equ	0xFD8
  1219                           tblptru	equ	0xFF8
  1220                           wreg	equ	0xFE8
  1221                           status	equ	0xFD8
  1222                           
  1223                           	psect	rparam
  1224  0000                     tblptru	equ	0xFF8
  1225                           wreg	equ	0xFE8
  1226                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      5       9
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_enableSerial

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    1626
                                              4 COMRAM     1     1      0
                            _dispSeg
                       _enableSerial
                          _initPorts
 ---------------------------------------------------------------------------------
 (1) _initPorts                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _enableSerial                                         4     2      2      49
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _dispSeg                                              2     1      1    1577
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _dispSeg
   _enableSerial
   _initPorts

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      5       9       1        9.5%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       9      12        0.0%
DATA                 0      0       9       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Fri Feb 07 13:46:01 2014

                     l91 FCFC                       l94 FD20                       l96 FD46  
                     l99 FD6C             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000                      l101 FD92  
                    l111 FE50                      l103 FDB8                      l121 FF0E  
                    l113 FE76                      l105 FDDE                      l123 FF34  
                    l115 FE9C                      l107 FE04                      l125 FF5A  
                    l117 FEC2                      l109 FE2A                      l127 FF80  
                    l119 FEE8                      l820 FD7C                      l812 FD30  
                    l804 FCE8                      l750 FC5C                      l840 FE3A  
                    l832 FDEE                      l824 FDA2                      l816 FD56  
                    l808 FD0C                      l752 FC60                      l760 FC72  
                    l754 FC64                      l762 FCCA                      l860 FEF8  
                    l852 FEAC                      l844 FE60                      l836 FE14  
                    l828 FDC8                      l756 FC68                      l758 FC6C  
                    l872 FF6A                      l864 FF1E                      l856 FED2  
                    l848 FE86                      l868 FF44                      l972 FC4C  
                    l878 FF90             __CFG_CPB$OFF 000000             __CFG_CPD$OFF 000000  
                    wreg 000FE8               _TXSTA2bits 000F72             __CFG_LVP$OFF 000000  
                   l1080 FCA2                     l1082 FCAC                     l1084 FCB6  
                   l1086 FCC0                     l1078 FC9C                     _LATA 000F89  
                   _LATC 000F8B                     _LATD 000F8C                     _LATE 000F8D  
                   _main FC20            __CFG_BORV$190 000000                     start 0000  
          __CFG_IESO$OFF 000000             _BAUDCON2bits 000F70                    ?_main 0001  
                  _TRISA 000F92                    _TRISC 000F94                    _TRISE 000F96  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
        __end_of_dispSeg 0000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000       __CFG_MCLRE$EXTMCLR 000000  
         __CFG_BOREN$OFF 000000                    status 000FD8           __CFG_HFOFST$ON 000000  
        __initialization FBDE             __end_of_main FC58     __end_of_enableSerial FCE2  
                 ??_main 0005            __activetblptr 000002           __CFG_PLLCFG$ON 000000  
   enableSerial@baudRate 0001                   _ANSELD 000F3B           __CFG_WDTEN$OFF 000000  
                 _SPBRG2 000F75                   _TXREG2 000F73           __CFG_XINST$OFF 000000  
         __CFG_STVREN$ON 000000                ??_dispSeg 0002                   tblptru 000FF8  
             __accesstop 0060  __end_of__initialization FBE6          __CFG_PBADEN$OFF 000000  
         __pcstackCOMRAM 0001       __size_of_initPorts 0030       __CFG_CCP2MX$PORTC1 000000  
  __size_of_enableSerial 008A       __CFG_CCP3MX$PORTB5 000000        __CFG_PRICLKEN$OFF 000000  
                _SPBRGH2 000F76             _enableSerial FC58          __CFG_PWRTEN$OFF 000000  
                __Hparam 0000                  __Lparam 0000                  __pcinit FBDE  
                __ramtop 1000                  __ptext0 FC20                  __ptext1 FBF0  
                __ptext2 FC58                  __ptext3 FCE2                  _dispSeg FCE2  
      __end_of_initPorts FC20     end_of_initialization FBE6            __Lmediumconst 0000  
              _TRISDbits 000F95      start_initialization FBDE              __pbssCOMRAM 0006  
               ?_dispSeg 0001                _initPorts FBF0                 _LATAbits 000F89  
               _LATCbits 000F8B                 _LATDbits 000F8C                 _LATEbits 000F8D  
               _PIR3bits 000FA4         __CFG_WDTPS$32768 000000               ?_initPorts 0001  
               __Hrparam 0000                 __Lrparam 0000        __CFG_P2BMX$PORTD2 000000  
       __size_of_dispSeg 031E            __size_of_main 0038              ??_initPorts 0001  
          ?_enableSerial 0001               _RCSTA2bits 000F71           dispSeg@segment 0002  
           wait_ms@timel 0006        __CFG_T3CMX$PORTC0 000000            dispSeg@letter 0001  
         ??_enableSerial 0003        __CFG_FOSC$INTIO67 000000  
