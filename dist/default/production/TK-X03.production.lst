

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Fri Feb 14 13:27:40 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	text0,global,reloc=2,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    15  0000                     _ANSELD	set	3899
    16  0000                     _BAUDCON2bits	set	3952
    17  0000                     _LATA	set	3977
    18  0000                     _LATAbits	set	3977
    19  0000                     _LATC	set	3979
    20  0000                     _LATCbits	set	3979
    21  0000                     _LATD	set	3980
    22  0000                     _LATDbits	set	3980
    23  0000                     _LATE	set	3981
    24  0000                     _LATEbits	set	3981
    25  0000                     _OSCCON2bits	set	4050
    26  0000                     _OSCCONbits	set	4051
    27  0000                     _PIR3bits	set	4004
    28  0000                     _RCREG2	set	3956
    29  0000                     _RCSTA2bits	set	3953
    30  0000                     _SPBRG2	set	3957
    31  0000                     _SPBRGH2	set	3958
    32  0000                     _TRISA	set	3986
    33  0000                     _TRISC	set	3988
    34  0000                     _TRISDbits	set	3989
    35  0000                     _TRISE	set	3990
    36  0000                     _TXREG2	set	3955
    37  0000                     _TXSTA2bits	set	3954
    38                           
    39 ;;
    40 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
    41 ;;
    42 ;; *************** function _main *****************
    43 ;; Defined at:
    44 ;;		line 17 in file "source/main.c"
    45 ;; Parameters:    Size  Location     Type
    46 ;;		None
    47 ;; Auto vars:     Size  Location     Type
    48 ;;		None
    49 ;; Return value:  Size  Location     Type
    50 ;;		None               void
    51 ;; Registers used:
    52 ;;		wreg, status,2, status,0, cstack
    53 ;; Tracked objects:
    54 ;;		On entry : 0/0
    55 ;;		On exit  : 0/0
    56 ;;		Unchanged: 0/0
    57 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
    58 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
    59 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
    60 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
    61 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
    62 ;;Total ram usage:        1 bytes
    63 ;; Hardware stack levels required when called:    1
    64 ;; This function calls:
    65 ;;		_dispSeg
    66 ;;		_enableSerial
    67 ;;		_initOscillator
    68 ;;		_initPorts
    69 ;; This function is called by:
    70 ;;		Startup code after reset
    71 ;; This function uses a non-reentrant model
    72 ;;
    73                           
    74                           	psect	text0
    75  00FC0A                     __ptext0:
    76                           	opt stack 0
    77  00FC0A                     _main:
    78                           	opt stack 30
    79                           
    80                           ;main.c: 19: initOscillator();
    81                           
    82                           ;incstack = 0
    83  00FC0A  ECDF  F07D         	call	_initOscillator	;wreg free
    84                           
    85                           ;main.c: 20: initPorts();
    86  00FC0E  ECED  F07D         	call	_initPorts	;wreg free
    87                           
    88                           ;main.c: 21: enableSerial(1200);
    89  00FC12  0E04               	movlw	4
    90  00FC14  6E02               	movwf	enableSerial@baudRate+1,c
    91  00FC16  0EB0               	movlw	176
    92  00FC18  6E01               	movwf	enableSerial@baudRate,c
    93  00FC1A  EC2C  F07E         	call	_enableSerial	;wreg free
    94                           
    95                           ;main.c: 22: dispSeg(1, '-'); dispSeg(2, '-');
    96  00FC1E  6E05               	movwf	??_main& (0+255),c
    97  00FC20  0E2D               	movlw	45
    98  00FC22  6E01               	movwf	dispSeg@letter,c
    99  00FC24  5005               	movf	??_main& (0+255),w,c
   100  00FC26  0E01               	movlw	1
   101  00FC28  EC71  F07E         	call	_dispSeg
   102  00FC2C  6E05               	movwf	??_main& (0+255),c
   103  00FC2E  0E2D               	movlw	45
   104  00FC30  6E01               	movwf	dispSeg@letter,c
   105  00FC32  5005               	movf	??_main& (0+255),w,c
   106  00FC34  0E02               	movlw	2
   107  00FC36  EC71  F07E         	call	_dispSeg
   108  00FC3A                     l1016:
   109                           
   110                           ;main.c: 25: {
   111                           ;main.c: 26: if(PIR3bits.RC2IF == 1)
   112  00FC3A  BAA4               	btfsc	4004,5,c	;volatile
   113                           
   114                           ;main.c: 27: {
   115                           ;main.c: 28: if(PIR3bits.TX2IF == 1)
   116  00FC3C  A8A4               	btfss	4004,4,c	;volatile
   117  00FC3E  D7FD               	goto	l1016
   118                           
   119                           ;main.c: 29: {
   120                           ;main.c: 30: if(RCSTA2bits.FERR2 == 1)
   121  00FC40  A471               	btfss	3953,2,c	;volatile
   122  00FC42  D007               	goto	l1024
   123                           
   124                           ;main.c: 31: {
   125                           ;main.c: 32: dispSeg(1, 'F');
   126  00FC44  6E05               	movwf	??_main& (0+255),c
   127  00FC46  0E46               	movlw	70
   128  00FC48  6E01               	movwf	dispSeg@letter,c
   129  00FC4A  5005               	movf	??_main& (0+255),w,c
   130  00FC4C  0E01               	movlw	1
   131  00FC4E  EC71  F07E         	call	_dispSeg
   132  00FC52                     l1024:
   133                           
   134                           ;main.c: 33: }
   135                           ;main.c: 35: TXREG2 = RCREG2;
   136  00FC52  CF74 FF73          	movff	3956,3955	;volatile
   137  00FC56  D7F1               	goto	l1016
   138  00FC58                     __end_of_main:
   139                           	opt stack 0
   140                           
   141                           	psect	cinit
   142  00FBAC                     __pcinit:
   143                           	opt stack 0
   144  00FBAC                     start_initialization:
   145                           	opt stack 0
   146  00FBAC                     __initialization:
   147                           	opt stack 0
   148                           
   149                           ; Clear objects allocated to COMRAM (4 bytes)
   150  00FBAC  6A09               	clrf	(__pbssCOMRAM+3)& (0+255),c
   151  00FBAE  6A08               	clrf	(__pbssCOMRAM+2)& (0+255),c
   152  00FBB0  6A07               	clrf	(__pbssCOMRAM+1)& (0+255),c
   153  00FBB2  6A06               	clrf	__pbssCOMRAM& (0+255),c
   154  00FBB4                     end_of_initialization:
   155                           	opt stack 0
   156  00FBB4                     __end_of__initialization:
   157                           	opt stack 0
   158  00FBB4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   159  00FBB6  6EF8               	movwf	tblptru,c
   160  00FBB8  0100               	movlb	0
   161  00FBBA  EF05  F07E         	goto	_main	;jump to C main() function
   162                           tblptru	equ	0xFF8
   163                           
   164                           	psect	bssCOMRAM
   165  000006                     __pbssCOMRAM:
   166                           	opt stack 0
   167  000006                     wait_ms@timel:
   168                           	opt stack 0
   169  000006                     	ds	4
   170                           tblptru	equ	0xFF8
   171                           
   172                           	psect	cstackCOMRAM
   173  000001                     __pcstackCOMRAM:
   174                           	opt stack 0
   175  000001                     dispSeg@letter:
   176                           	opt stack 0
   177  000001                     enableSerial@baudRate:
   178                           	opt stack 0
   179                           
   180                           ; 2 bytes @ 0x0
   181  000001                     	ds	1
   182  000002                     dispSeg@segment:
   183                           	opt stack 0
   184                           
   185                           ; 1 bytes @ 0x1
   186  000002                     	ds	1
   187  000003                     ??_enableSerial:
   188                           
   189                           ; 0 bytes @ 0x2
   190  000003                     	ds	2
   191  000005                     ??_main:
   192                           
   193                           ; 0 bytes @ 0x4
   194  000005                     	ds	1
   195                           tblptru	equ	0xFF8
   196                           
   197 ;; *************** function _initPorts *****************
   198 ;; Defined at:
   199 ;;		line 26 in file "source/system.c"
   200 ;; Parameters:    Size  Location     Type
   201 ;;		None
   202 ;; Auto vars:     Size  Location     Type
   203 ;;		None
   204 ;; Return value:  Size  Location     Type
   205 ;;		None               void
   206 ;; Registers used:
   207 ;;		wreg, status,2
   208 ;; Tracked objects:
   209 ;;		On entry : 0/0
   210 ;;		On exit  : 0/0
   211 ;;		Unchanged: 0/0
   212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   216 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   217 ;;Total ram usage:        0 bytes
   218 ;; Hardware stack levels used:    1
   219 ;; This function calls:
   220 ;;		Nothing
   221 ;; This function is called by:
   222 ;;		_main
   223 ;; This function uses a non-reentrant model
   224 ;;
   225                           
   226                           	psect	text1
   227  00FBDA                     __ptext1:
   228                           	opt stack 0
   229  00FBDA                     _initPorts:
   230                           	opt stack 30
   231                           
   232                           ;system.c: 28: TRISA = 0;
   233                           
   234                           ;incstack = 0
   235  00FBDA  0E00               	movlw	0
   236  00FBDC  6E92               	movwf	3986,c	;volatile
   237                           
   238                           ;system.c: 29: TRISC = 0;
   239  00FBDE  0E00               	movlw	0
   240  00FBE0  6E94               	movwf	3988,c	;volatile
   241                           
   242                           ;system.c: 30: TRISE = 0;
   243  00FBE2  0E00               	movlw	0
   244  00FBE4  6E96               	movwf	3990,c	;volatile
   245                           
   246                           ;system.c: 32: ANSELD = 0;
   247  00FBE6  0E00               	movlw	0
   248  00FBE8  010F               	movlb	15	; () banked
   249  00FBEA  010F               	movlb	15	; () banked
   250  00FBEC  6F3B               	movwf	59,b	;volatile
   251                           
   252                           ; BSR set to: 15
   253                           ;system.c: 33: TRISDbits.RD3 = 0;
   254  00FBEE  9695               	bcf	3989,3,c	;volatile
   255                           
   256                           ; BSR set to: 15
   257                           ;system.c: 34: TRISDbits.RD4 = 1;
   258  00FBF0  8895               	bsf	3989,4,c	;volatile
   259                           
   260                           ; BSR set to: 15
   261                           ;system.c: 35: TRISDbits.RD5 = 0;
   262  00FBF2  9A95               	bcf	3989,5,c	;volatile
   263                           
   264                           ; BSR set to: 15
   265                           ;system.c: 36: TRISDbits.RD7 = 1;
   266  00FBF4  8E95               	bsf	3989,7,c	;volatile
   267                           
   268                           ; BSR set to: 15
   269                           ;system.c: 37: TRISDbits.RD6 = 0;
   270  00FBF6  9C95               	bcf	3989,6,c	;volatile
   271                           
   272                           ;system.c: 39: LATA = 0;
   273  00FBF8  0E00               	movlw	0
   274  00FBFA  6E89               	movwf	3977,c	;volatile
   275                           
   276                           ;system.c: 40: LATC = 0;
   277  00FBFC  0E00               	movlw	0
   278  00FBFE  6E8B               	movwf	3979,c	;volatile
   279                           
   280                           ;system.c: 41: LATD = 0;
   281  00FC00  0E00               	movlw	0
   282  00FC02  6E8C               	movwf	3980,c	;volatile
   283                           
   284                           ;system.c: 42: LATE = 0;
   285  00FC04  0E00               	movlw	0
   286  00FC06  6E8D               	movwf	3981,c	;volatile
   287                           
   288                           ; BSR set to: 15
   289  00FC08  0012               	return	
   290  00FC0A                     __end_of_initPorts:
   291                           	opt stack 0
   292                           tblptru	equ	0xFF8
   293                           
   294 ;; *************** function _initOscillator *****************
   295 ;; Defined at:
   296 ;;		line 9 in file "source/system.c"
   297 ;; Parameters:    Size  Location     Type
   298 ;;		None
   299 ;; Auto vars:     Size  Location     Type
   300 ;;		None
   301 ;; Return value:  Size  Location     Type
   302 ;;		None               void
   303 ;; Registers used:
   304 ;;		wreg, status,2
   305 ;; Tracked objects:
   306 ;;		On entry : 0/0
   307 ;;		On exit  : 0/0
   308 ;;		Unchanged: 0/0
   309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   313 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   314 ;;Total ram usage:        0 bytes
   315 ;; Hardware stack levels used:    1
   316 ;; This function calls:
   317 ;;		Nothing
   318 ;; This function is called by:
   319 ;;		_main
   320 ;; This function uses a non-reentrant model
   321 ;;
   322                           
   323                           	psect	text2
   324  00FBBE                     __ptext2:
   325                           	opt stack 0
   326  00FBBE                     _initOscillator:
   327                           	opt stack 30
   328                           
   329                           ;system.c: 11: OSCCONbits.IDLEN = 0;
   330                           
   331                           ; BSR set to: 15
   332                           ;incstack = 0
   333  00FBBE  9ED3               	bcf	4051,7,c	;volatile
   334                           
   335                           ;system.c: 12: OSCCONbits.IRCF = 0b111;
   336  00FBC0  88D3               	bsf	4051,4,c	;volatile
   337  00FBC2  8AD3               	bsf	4051,5,c	;volatile
   338  00FBC4  8CD3               	bsf	4051,6,c	;volatile
   339                           
   340                           ;system.c: 13: OSCCONbits.SCS = 0b10;
   341  00FBC6  50D3               	movf	4051,w,c	;volatile
   342  00FBC8  0BFC               	andlw	-4
   343  00FBCA  0902               	iorlw	2
   344  00FBCC  6ED3               	movwf	4051,c	;volatile
   345                           
   346                           ;system.c: 14: OSCCON2bits.MFIOSEL = 0;
   347  00FBCE  98D2               	bcf	4050,4,c	;volatile
   348                           
   349                           ;system.c: 15: OSCCON2bits.SOSCGO = 0;
   350  00FBD0  96D2               	bcf	4050,3,c	;volatile
   351                           
   352                           ;system.c: 16: OSCCON2bits.PRISD = 0;
   353  00FBD2  94D2               	bcf	4050,2,c	;volatile
   354  00FBD4                     l146:
   355  00FBD4  B4D3               	btfsc	4051,2,c	;volatile
   356  00FBD6  0012               	return	
   357  00FBD8  D7FD               	goto	l146
   358  00FBDA                     __end_of_initOscillator:
   359                           	opt stack 0
   360                           tblptru	equ	0xFF8
   361                           
   362 ;; *************** function _enableSerial *****************
   363 ;; Defined at:
   364 ;;		line 20 in file "source/serial.c"
   365 ;; Parameters:    Size  Location     Type
   366 ;;  baudRate        2    0[COMRAM] unsigned int 
   367 ;; Auto vars:     Size  Location     Type
   368 ;;		None
   369 ;; Return value:  Size  Location     Type
   370 ;;		None               void
   371 ;; Registers used:
   372 ;;		wreg, status,2, status,0
   373 ;; Tracked objects:
   374 ;;		On entry : 0/0
   375 ;;		On exit  : 0/0
   376 ;;		Unchanged: 0/0
   377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   378 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   380 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   381 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   382 ;;Total ram usage:        4 bytes
   383 ;; Hardware stack levels used:    1
   384 ;; This function calls:
   385 ;;		Nothing
   386 ;; This function is called by:
   387 ;;		_main
   388 ;; This function uses a non-reentrant model
   389 ;;
   390                           
   391                           	psect	text3
   392  00FC58                     __ptext3:
   393                           	opt stack 0
   394  00FC58                     _enableSerial:
   395                           	opt stack 30
   396                           
   397                           ;serial.c: 22: LATDbits.LD3 = 1;
   398                           
   399                           ;incstack = 0
   400  00FC58  868C               	bsf	3980,3,c	;volatile
   401                           
   402                           ;serial.c: 25: switch (baudRate) {
   403  00FC5A  D00B               	goto	l798
   404  00FC5C                     l788:
   405                           
   406                           ;serial.c: 30: SPBRG2 = 103;
   407  00FC5C  0E67               	movlw	103
   408  00FC5E  D007               	goto	L5
   409  00FC60                     l790:
   410                           
   411                           ;serial.c: 33: SPBRG2 = 25;
   412  00FC60  0E19               	movlw	25
   413  00FC62  D005               	goto	L5
   414  00FC64                     l792:
   415                           
   416                           ;serial.c: 36: SPBRG2 = 23;
   417  00FC64  0E17               	movlw	23
   418  00FC66  D003               	goto	L5
   419  00FC68                     l794:
   420                           
   421                           ;serial.c: 39: SPBRG2 = 12;
   422  00FC68  0E0C               	movlw	12
   423  00FC6A  D001               	goto	L5
   424  00FC6C                     l796:
   425                           
   426                           ;serial.c: 42: SPBRG2 = 207;
   427  00FC6C  0ECF               	movlw	207
   428  00FC6E                     L5:
   429  00FC6E  6E75               	movwf	3957,c	;volatile
   430                           
   431                           ;serial.c: 43: }
   432  00FC70  D02C               	goto	l800
   433  00FC72                     l798:
   434  00FC72  C001  F003         	movff	enableSerial@baudRate,??_enableSerial
   435  00FC76  C002  F004         	movff	enableSerial@baudRate+1,??_enableSerial+1
   436                           
   437                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 5 sub-sw
      +                          itches
   438                           ; Switch size 1, requested type "space"
   439                           ; Number of cases is 5, Range of values is 4 to 75
   440                           ; switch strategies available:
   441                           ; Name         Instructions Cycles
   442                           ; simple_byte           16     9 (average)
   443                           ;	Chosen strategy is simple_byte
   444  00FC7A  5004               	movf	??_enableSerial+1,w,c
   445  00FC7C  0A04               	xorlw	4	; case 4
   446  00FC7E  B4D8               	btfsc	status,2,c
   447  00FC80  D00D               	goto	l1126
   448  00FC82  0A0D               	xorlw	13	; case 9
   449  00FC84  B4D8               	btfsc	status,2,c
   450  00FC86  D00D               	goto	l1128
   451  00FC88  0A2C               	xorlw	44	; case 37
   452  00FC8A  B4D8               	btfsc	status,2,c
   453  00FC8C  D00F               	goto	l1130
   454  00FC8E  0A0D               	xorlw	13	; case 40
   455  00FC90  B4D8               	btfsc	status,2,c
   456  00FC92  D011               	goto	l1132
   457  00FC94  0A63               	xorlw	99	; case 75
   458  00FC96  B4D8               	btfsc	status,2,c
   459  00FC98  D013               	goto	l1134
   460  00FC9A  D7E8               	goto	l796
   461  00FC9C                     l1126:
   462                           
   463                           ; Switch size 1, requested type "space"
   464                           ; Number of cases is 1, Range of values is 176 to 176
   465                           ; switch strategies available:
   466                           ; Name         Instructions Cycles
   467                           ; simple_byte            4     3 (average)
   468                           ;	Chosen strategy is simple_byte
   469  00FC9C  5003               	movf	??_enableSerial,w,c
   470  00FC9E  0AB0               	xorlw	176	; case 176
   471  00FCA0  D7E5               	goto	l796
   472  00FCA2                     l1128:
   473                           
   474                           ; Switch size 1, requested type "space"
   475                           ; Number of cases is 1, Range of values is 96 to 96
   476                           ; switch strategies available:
   477                           ; Name         Instructions Cycles
   478                           ; simple_byte            4     3 (average)
   479                           ;	Chosen strategy is simple_byte
   480  00FCA2  5003               	movf	??_enableSerial,w,c
   481  00FCA4  0A60               	xorlw	96	; case 96
   482  00FCA6  B4D8               	btfsc	status,2,c
   483  00FCA8  D7D9               	goto	l788
   484  00FCAA  D7E0               	goto	l796
   485  00FCAC                     l1130:
   486                           
   487                           ; Switch size 1, requested type "space"
   488                           ; Number of cases is 1, Range of values is 128 to 128
   489                           ; switch strategies available:
   490                           ; Name         Instructions Cycles
   491                           ; simple_byte            4     3 (average)
   492                           ;	Chosen strategy is simple_byte
   493  00FCAC  5003               	movf	??_enableSerial,w,c
   494  00FCAE  0A80               	xorlw	128	; case 128
   495  00FCB0  B4D8               	btfsc	status,2,c
   496  00FCB2  D7D6               	goto	l790
   497  00FCB4  D7DB               	goto	l796
   498  00FCB6                     l1132:
   499                           
   500                           ; Switch size 1, requested type "space"
   501                           ; Number of cases is 1, Range of values is 177 to 177
   502                           ; switch strategies available:
   503                           ; Name         Instructions Cycles
   504                           ; simple_byte            4     3 (average)
   505                           ;	Chosen strategy is simple_byte
   506  00FCB6  5003               	movf	??_enableSerial,w,c
   507  00FCB8  0AB1               	xorlw	177	; case 177
   508  00FCBA  B4D8               	btfsc	status,2,c
   509  00FCBC  D7D3               	goto	l792
   510  00FCBE  D7D6               	goto	l796
   511  00FCC0                     l1134:
   512                           
   513                           ; Switch size 1, requested type "space"
   514                           ; Number of cases is 1, Range of values is 0 to 0
   515                           ; switch strategies available:
   516                           ; Name         Instructions Cycles
   517                           ; simple_byte            4     3 (average)
   518                           ;	Chosen strategy is simple_byte
   519  00FCC0  5003               	movf	??_enableSerial,w,c
   520  00FCC2  0A00               	xorlw	0	; case 0
   521  00FCC4  B4D8               	btfsc	status,2,c
   522  00FCC6  D7D0               	goto	l794
   523  00FCC8  D7D1               	goto	l796
   524  00FCCA                     l800:
   525                           
   526                           ;serial.c: 45: SPBRGH2 = 0;
   527  00FCCA  0E00               	movlw	0
   528  00FCCC  6E76               	movwf	3958,c	;volatile
   529                           
   530                           ;serial.c: 46: TXSTA2bits.BRGH = 0;
   531  00FCCE  9472               	bcf	3954,2,c	;volatile
   532                           
   533                           ;serial.c: 47: BAUDCON2bits.BRG16 = 0;
   534  00FCD0  9670               	bcf	3952,3,c	;volatile
   535                           
   536                           ;serial.c: 49: TXSTA2bits.TX9 = 0;
   537  00FCD2  9C72               	bcf	3954,6,c	;volatile
   538                           
   539                           ;serial.c: 50: RCSTA2bits.RX9 = 0;
   540  00FCD4  9C71               	bcf	3953,6,c	;volatile
   541                           
   542                           ;serial.c: 52: TXSTA2bits.SYNC = 0;
   543  00FCD6  9872               	bcf	3954,4,c	;volatile
   544                           
   545                           ;serial.c: 53: BAUDCON2bits.DTRXP = 0;
   546  00FCD8  9A70               	bcf	3952,5,c	;volatile
   547                           
   548                           ;serial.c: 55: TXSTA2bits.TXEN = 1;
   549  00FCDA  8A72               	bsf	3954,5,c	;volatile
   550                           
   551                           ;serial.c: 56: RCSTA2bits.CREN = 1;
   552  00FCDC  8871               	bsf	3953,4,c	;volatile
   553                           
   554                           ;serial.c: 58: RCSTA2bits.SPEN = 1;
   555  00FCDE  8E71               	bsf	3953,7,c	;volatile
   556  00FCE0  0012               	return	
   557  00FCE2                     __end_of_enableSerial:
   558                           	opt stack 0
   559                           tblptru	equ	0xFF8
   560                           status	equ	0xFD8
   561                           
   562 ;; *************** function _dispSeg *****************
   563 ;; Defined at:
   564 ;;		line 13 in file "source/segment.c"
   565 ;; Parameters:    Size  Location     Type
   566 ;;  segment         1    wreg     unsigned char 
   567 ;;  letter          1    0[COMRAM] unsigned char 
   568 ;; Auto vars:     Size  Location     Type
   569 ;;  segment         1    1[COMRAM] unsigned char 
   570 ;; Return value:  Size  Location     Type
   571 ;;		None               void
   572 ;; Registers used:
   573 ;;		wreg, status,2, status,0
   574 ;; Tracked objects:
   575 ;;		On entry : 0/0
   576 ;;		On exit  : 0/0
   577 ;;		Unchanged: 0/0
   578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   579 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   580 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   582 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   583 ;;Total ram usage:        2 bytes
   584 ;; Hardware stack levels used:    1
   585 ;; This function calls:
   586 ;;		Nothing
   587 ;; This function is called by:
   588 ;;		_main
   589 ;;		_cycleSegDisplays
   590 ;; This function uses a non-reentrant model
   591 ;;
   592                           
   593                           	psect	text4
   594  00FCE2                     __ptext4:
   595                           	opt stack 0
   596  00FCE2                     _dispSeg:
   597                           	opt stack 30
   598                           
   599                           ;incstack = 0
   600                           ;dispSeg@segment stored from wreg
   601  00FCE2  CFE8 F002          	movff	wreg,dispSeg@segment
   602                           
   603                           ;segment.c: 15: switch (letter) {
   604  00FCE6  D154               	goto	l916
   605  00FCE8                     l842:
   606                           
   607                           ;segment.c: 17: if (segment == 1) {
   608  00FCE8  0402               	decf	dispSeg@segment,w,c
   609  00FCEA  A4D8               	btfss	status,2,c
   610  00FCEC  D007               	goto	l59
   611                           
   612                           ;segment.c: 18: LATAbits.LA2 = LATAbits.LA3 = LATAbits.LA4 = LATAbits.LA5 = LATEbits.LE0
      +                           = LATAbits.LA0 = LATAbits.LA1 = 0;
   613  00FCEE  9289               	bcf	3977,1,c	;volatile
   614  00FCF0  9089               	bcf	3977,0,c	;volatile
   615  00FCF2  908D               	bcf	3981,0,c	;volatile
   616  00FCF4  9A89               	bcf	3977,5,c	;volatile
   617  00FCF6  9889               	bcf	3977,4,c	;volatile
   618  00FCF8  9689               	bcf	3977,3,c	;volatile
   619  00FCFA  9489               	bcf	3977,2,c	;volatile
   620  00FCFC                     l59:
   621                           
   622                           ;segment.c: 19: }
   623                           ;segment.c: 20: LATAbits.LA7 = LATAbits.LA6 = LATCbits.LC2 = LATCbits.LC0 = LATCbits.LC1
      +                           = LATEbits.LE1 = LATEbits.LE2 = 0;
   624  00FCFC  948D               	bcf	3981,2,c	;volatile
   625  00FCFE  928D               	bcf	3981,1,c	;volatile
   626  00FD00  928B               	bcf	3979,1,c	;volatile
   627  00FD02  908B               	bcf	3979,0,c	;volatile
   628  00FD04  948B               	bcf	3979,2,c	;volatile
   629  00FD06  9C89               	bcf	3977,6,c	;volatile
   630  00FD08  9E89               	bcf	3977,7,c	;volatile
   631                           
   632                           ;segment.c: 21: break;
   633  00FD0A  0012               	return	
   634  00FD0C                     l846:
   635                           
   636                           ;segment.c: 23: if (segment == 1) {
   637  00FD0C  0402               	decf	dispSeg@segment,w,c
   638  00FD0E  A4D8               	btfss	status,2,c
   639  00FD10  D007               	goto	l62
   640                           
   641                           ;segment.c: 24: LATAbits.LA1 = 1;
   642  00FD12  8289               	bsf	3977,1,c	;volatile
   643                           
   644                           ;segment.c: 25: LATAbits.LA2 = LATAbits.LA3 = LATAbits.LA4 = LATAbits.LA5 = LATEbits.LE0
      +                           = LATAbits.LA0 = 0;
   645  00FD14  9089               	bcf	3977,0,c	;volatile
   646  00FD16  908D               	bcf	3981,0,c	;volatile
   647  00FD18  9A89               	bcf	3977,5,c	;volatile
   648  00FD1A  9889               	bcf	3977,4,c	;volatile
   649  00FD1C  9689               	bcf	3977,3,c	;volatile
   650  00FD1E  9489               	bcf	3977,2,c	;volatile
   651  00FD20                     l62:
   652                           
   653                           ;segment.c: 26: }
   654                           ;segment.c: 27: LATEbits.LE2 = 1;
   655  00FD20  848D               	bsf	3981,2,c	;volatile
   656                           
   657                           ;segment.c: 28: LATAbits.LA7 = LATAbits.LA6 = LATCbits.LC2 = LATCbits.LC0 = LATCbits.LC1
      +                           = LATEbits.LE1 = 0;
   658  00FD22  928D               	bcf	3981,1,c	;volatile
   659  00FD24  928B               	bcf	3979,1,c	;volatile
   660  00FD26  908B               	bcf	3979,0,c	;volatile
   661  00FD28  948B               	bcf	3979,2,c	;volatile
   662  00FD2A  9C89               	bcf	3977,6,c	;volatile
   663  00FD2C  9E89               	bcf	3977,7,c	;volatile
   664                           
   665                           ;segment.c: 29: break;
   666  00FD2E  0012               	return	
   667  00FD30                     l850:
   668                           
   669                           ;segment.c: 31: if (segment == 1) {
   670  00FD30  0402               	decf	dispSeg@segment,w,c
   671  00FD32  A4D8               	btfss	status,2,c
   672  00FD34  D008               	goto	l64
   673                           
   674                           ;segment.c: 32: LATAbits.LA2 = LATAbits.LA3 = LATAbits.LA4 = LATAbits.LA5 = LATEbits.LE0
      +                           = LATAbits.LA0 = 1;
   675  00FD36  8089               	bsf	3977,0,c	;volatile
   676  00FD38  808D               	bsf	3981,0,c	;volatile
   677  00FD3A  8A89               	bsf	3977,5,c	;volatile
   678  00FD3C  8889               	bsf	3977,4,c	;volatile
   679  00FD3E  8689               	bsf	3977,3,c	;volatile
   680  00FD40  8489               	bsf	3977,2,c	;volatile
   681                           
   682                           ;segment.c: 33: LATAbits.LA1 = 0;
   683  00FD42  9289               	bcf	3977,1,c	;volatile
   684                           
   685                           ;segment.c: 34: return;
   686  00FD44  0012               	return	
   687  00FD46                     l64:
   688                           
   689                           ;segment.c: 35: }
   690                           ;segment.c: 36: LATAbits.LA7 = LATAbits.LA6 = LATCbits.LC2 = LATCbits.LC0 = LATCbits.LC1
      +                           = LATEbits.LE1 = 1;
   691  00FD46  828D               	bsf	3981,1,c	;volatile
   692  00FD48  828B               	bsf	3979,1,c	;volatile
   693  00FD4A  808B               	bsf	3979,0,c	;volatile
   694  00FD4C  848B               	bsf	3979,2,c	;volatile
   695  00FD4E  8C89               	bsf	3977,6,c	;volatile
   696  00FD50  8E89               	bsf	3977,7,c	;volatile
   697                           
   698                           ;segment.c: 37: LATEbits.LE2 = 0;
   699  00FD52  948D               	bcf	3981,2,c	;volatile
   700                           
   701                           ;segment.c: 38: break;
   702  00FD54  0012               	return	
   703  00FD56                     l854:
   704                           
   705                           ;segment.c: 40: if (segment == 1) {
   706  00FD56  0402               	decf	dispSeg@segment,w,c
   707  00FD58  A4D8               	btfss	status,2,c
   708  00FD5A  D008               	goto	l67
   709                           
   710                           ;segment.c: 41: LATAbits.LA3 = LATAbits.LA4 = 1;
   711  00FD5C  8889               	bsf	3977,4,c	;volatile
   712  00FD5E  8689               	bsf	3977,3,c	;volatile
   713                           
   714                           ;segment.c: 42: LATAbits.LA2 = LATAbits.LA5 = LATEbits.LE0 = LATAbits.LA0 = LATAbits.LA1
      +                           = 0;
   715  00FD60  9289               	bcf	3977,1,c	;volatile
   716  00FD62  9089               	bcf	3977,0,c	;volatile
   717  00FD64  908D               	bcf	3981,0,c	;volatile
   718  00FD66  9A89               	bcf	3977,5,c	;volatile
   719  00FD68  9489               	bcf	3977,2,c	;volatile
   720                           
   721                           ;segment.c: 43: return;
   722  00FD6A  0012               	return	
   723  00FD6C                     l67:
   724                           
   725                           ;segment.c: 44: }
   726                           ;segment.c: 45: LATAbits.LA6 = LATCbits.LC2 = 1;
   727  00FD6C  848B               	bsf	3979,2,c	;volatile
   728  00FD6E  8C89               	bsf	3977,6,c	;volatile
   729                           
   730                           ;segment.c: 46: LATAbits.LA7 = LATCbits.LC0 = LATCbits.LC1 = LATEbits.LE1 = LATEbits.LE2
      +                           = 0;
   731  00FD70  948D               	bcf	3981,2,c	;volatile
   732  00FD72  928D               	bcf	3981,1,c	;volatile
   733  00FD74  928B               	bcf	3979,1,c	;volatile
   734  00FD76  908B               	bcf	3979,0,c	;volatile
   735  00FD78  9E89               	bcf	3977,7,c	;volatile
   736                           
   737                           ;segment.c: 47: break;
   738  00FD7A  0012               	return	
   739  00FD7C                     l858:
   740                           
   741                           ;segment.c: 49: if (segment == 1) {
   742  00FD7C  0402               	decf	dispSeg@segment,w,c
   743  00FD7E  A4D8               	btfss	status,2,c
   744  00FD80  D008               	goto	l69
   745                           
   746                           ;segment.c: 50: LATAbits.LA2 = LATAbits.LA3 = LATAbits.LA1 = LATEbits.LE0 = LATAbits.LA5
      +                           = 1;
   747  00FD82  8A89               	bsf	3977,5,c	;volatile
   748  00FD84  808D               	bsf	3981,0,c	;volatile
   749  00FD86  8289               	bsf	3977,1,c	;volatile
   750  00FD88  8689               	bsf	3977,3,c	;volatile
   751  00FD8A  8489               	bsf	3977,2,c	;volatile
   752                           
   753                           ;segment.c: 51: LATAbits.LA4 = LATAbits.LA0 = 0;
   754  00FD8C  9089               	bcf	3977,0,c	;volatile
   755  00FD8E  9889               	bcf	3977,4,c	;volatile
   756                           
   757                           ;segment.c: 52: return;
   758  00FD90  0012               	return	
   759  00FD92                     l69:
   760                           
   761                           ;segment.c: 53: }
   762                           ;segment.c: 54: LATAbits.LA7 = LATAbits.LA6 = LATEbits.LE2 = LATCbits.LC1 = LATCbits.LC0
      +                           = 1;
   763  00FD92  808B               	bsf	3979,0,c	;volatile
   764  00FD94  828B               	bsf	3979,1,c	;volatile
   765  00FD96  848D               	bsf	3981,2,c	;volatile
   766  00FD98  8C89               	bsf	3977,6,c	;volatile
   767  00FD9A  8E89               	bsf	3977,7,c	;volatile
   768                           
   769                           ;segment.c: 55: LATCbits.LC2 = LATEbits.LE1 = 0;
   770  00FD9C  928D               	bcf	3981,1,c	;volatile
   771  00FD9E  948B               	bcf	3979,2,c	;volatile
   772                           
   773                           ;segment.c: 56: break;
   774  00FDA0  0012               	return	
   775  00FDA2                     l862:
   776                           
   777                           ;segment.c: 58: if (segment == 1) {
   778  00FDA2  0402               	decf	dispSeg@segment,w,c
   779  00FDA4  A4D8               	btfss	status,2,c
   780  00FDA6  D008               	goto	l71
   781                           
   782                           ;segment.c: 59: LATAbits.LA2 = LATAbits.LA3 = LATAbits.LA1 = LATAbits.LA4 = LATAbits.LA5
      +                           = 1;
   783  00FDA8  8A89               	bsf	3977,5,c	;volatile
   784  00FDAA  8889               	bsf	3977,4,c	;volatile
   785  00FDAC  8289               	bsf	3977,1,c	;volatile
   786  00FDAE  8689               	bsf	3977,3,c	;volatile
   787  00FDB0  8489               	bsf	3977,2,c	;volatile
   788                           
   789                           ;segment.c: 60: LATEbits.LE0 = LATAbits.LA0 = 0;
   790  00FDB2  9089               	bcf	3977,0,c	;volatile
   791  00FDB4  908D               	bcf	3981,0,c	;volatile
   792                           
   793                           ;segment.c: 61: return;
   794  00FDB6  0012               	return	
   795  00FDB8                     l71:
   796                           
   797                           ;segment.c: 62: }
   798                           ;segment.c: 63: LATAbits.LA7 = LATAbits.LA6 = LATEbits.LE2 = LATCbits.LC2 = LATCbits.LC0
      +                           = 1;
   799  00FDB8  808B               	bsf	3979,0,c	;volatile
   800  00FDBA  848B               	bsf	3979,2,c	;volatile
   801  00FDBC  848D               	bsf	3981,2,c	;volatile
   802  00FDBE  8C89               	bsf	3977,6,c	;volatile
   803  00FDC0  8E89               	bsf	3977,7,c	;volatile
   804                           
   805                           ;segment.c: 64: LATCbits.LC1 = LATEbits.LE1 = 0;
   806  00FDC2  928D               	bcf	3981,1,c	;volatile
   807  00FDC4  928B               	bcf	3979,1,c	;volatile
   808                           
   809                           ;segment.c: 65: break;
   810  00FDC6  0012               	return	
   811  00FDC8                     l866:
   812                           
   813                           ;segment.c: 67: if (segment == 1) {
   814  00FDC8  0402               	decf	dispSeg@segment,w,c
   815  00FDCA  A4D8               	btfss	status,2,c
   816  00FDCC  D008               	goto	l73
   817                           
   818                           ;segment.c: 68: LATAbits.LA0 = LATAbits.LA1 = LATAbits.LA3 = LATAbits.LA4 = 1;
   819  00FDCE  8889               	bsf	3977,4,c	;volatile
   820  00FDD0  8689               	bsf	3977,3,c	;volatile
   821  00FDD2  8289               	bsf	3977,1,c	;volatile
   822  00FDD4  8089               	bsf	3977,0,c	;volatile
   823                           
   824                           ;segment.c: 69: LATAbits.LA2 = LATAbits.LA5 = LATEbits.LE0 = 0;
   825  00FDD6  908D               	bcf	3981,0,c	;volatile
   826  00FDD8  9A89               	bcf	3977,5,c	;volatile
   827  00FDDA  9489               	bcf	3977,2,c	;volatile
   828                           
   829                           ;segment.c: 70: return;
   830  00FDDC  0012               	return	
   831  00FDDE                     l73:
   832                           
   833                           ;segment.c: 71: }
   834                           ;segment.c: 72: LATEbits.LE1 = LATEbits.LE2 = LATAbits.LA6 = LATCbits.LC2 = 1;
   835  00FDDE  848B               	bsf	3979,2,c	;volatile
   836  00FDE0  8C89               	bsf	3977,6,c	;volatile
   837  00FDE2  848D               	bsf	3981,2,c	;volatile
   838  00FDE4  828D               	bsf	3981,1,c	;volatile
   839                           
   840                           ;segment.c: 73: LATAbits.LA7 = LATCbits.LC0 = LATCbits.LC1 = 0;
   841  00FDE6  928B               	bcf	3979,1,c	;volatile
   842  00FDE8  908B               	bcf	3979,0,c	;volatile
   843  00FDEA  9E89               	bcf	3977,7,c	;volatile
   844                           
   845                           ;segment.c: 74: break;
   846  00FDEC  0012               	return	
   847  00FDEE                     l870:
   848                           
   849                           ;segment.c: 76: if (segment == 1) {
   850  00FDEE  0402               	decf	dispSeg@segment,w,c
   851  00FDF0  A4D8               	btfss	status,2,c
   852  00FDF2  D008               	goto	l75
   853                           
   854                           ;segment.c: 77: LATAbits.LA2 = LATAbits.LA0 = LATAbits.LA1 = LATAbits.LA4 = LATAbits.LA5
      +                           = 1;
   855  00FDF4  8A89               	bsf	3977,5,c	;volatile
   856  00FDF6  8889               	bsf	3977,4,c	;volatile
   857  00FDF8  8289               	bsf	3977,1,c	;volatile
   858  00FDFA  8089               	bsf	3977,0,c	;volatile
   859  00FDFC  8489               	bsf	3977,2,c	;volatile
   860                           
   861                           ;segment.c: 78: LATAbits.LA3 = LATEbits.LE0 = 0;
   862  00FDFE  908D               	bcf	3981,0,c	;volatile
   863  00FE00  9689               	bcf	3977,3,c	;volatile
   864                           
   865                           ;segment.c: 79: return;
   866  00FE02  0012               	return	
   867  00FE04                     l75:
   868                           
   869                           ;segment.c: 80: }
   870                           ;segment.c: 81: LATAbits.LA7 = LATEbits.LE1 = LATEbits.LE2 = LATCbits.LC2 = LATCbits.LC0
      +                           = 1;
   871  00FE04  808B               	bsf	3979,0,c	;volatile
   872  00FE06  848B               	bsf	3979,2,c	;volatile
   873  00FE08  848D               	bsf	3981,2,c	;volatile
   874  00FE0A  828D               	bsf	3981,1,c	;volatile
   875  00FE0C  8E89               	bsf	3977,7,c	;volatile
   876                           
   877                           ;segment.c: 82: LATAbits.LA6 = LATCbits.LC1 = 0;
   878  00FE0E  928B               	bcf	3979,1,c	;volatile
   879  00FE10  9C89               	bcf	3977,6,c	;volatile
   880                           
   881                           ;segment.c: 83: break;
   882  00FE12  0012               	return	
   883  00FE14                     l874:
   884                           
   885                           ;segment.c: 85: if (segment == 1) {
   886  00FE14  0402               	decf	dispSeg@segment,w,c
   887  00FE16  A4D8               	btfss	status,2,c
   888  00FE18  D008               	goto	l77
   889                           
   890                           ;segment.c: 86: LATAbits.LA2 = LATAbits.LA0 = LATAbits.LA1 = LATAbits.LA4 = LATAbits.LA5
      +                           = LATEbits.LE0 = 1;
   891  00FE1A  808D               	bsf	3981,0,c	;volatile
   892  00FE1C  8A89               	bsf	3977,5,c	;volatile
   893  00FE1E  8889               	bsf	3977,4,c	;volatile
   894  00FE20  8289               	bsf	3977,1,c	;volatile
   895  00FE22  8089               	bsf	3977,0,c	;volatile
   896  00FE24  8489               	bsf	3977,2,c	;volatile
   897                           
   898                           ;segment.c: 87: LATAbits.LA3 = 0;
   899  00FE26  9689               	bcf	3977,3,c	;volatile
   900                           
   901                           ;segment.c: 88: return;
   902  00FE28  0012               	return	
   903  00FE2A                     l77:
   904                           
   905                           ;segment.c: 89: }
   906                           ;segment.c: 90: LATAbits.LA7 = LATEbits.LE1 = LATEbits.LE2 = LATCbits.LC2 = LATCbits.LC0
      +                           = LATCbits.LC1 = 1;
   907  00FE2A  828B               	bsf	3979,1,c	;volatile
   908  00FE2C  808B               	bsf	3979,0,c	;volatile
   909  00FE2E  848B               	bsf	3979,2,c	;volatile
   910  00FE30  848D               	bsf	3981,2,c	;volatile
   911  00FE32  828D               	bsf	3981,1,c	;volatile
   912  00FE34  8E89               	bsf	3977,7,c	;volatile
   913                           
   914                           ;segment.c: 91: LATAbits.LA6 = 0;
   915  00FE36  9C89               	bcf	3977,6,c	;volatile
   916                           
   917                           ;segment.c: 92: break;
   918  00FE38  0012               	return	
   919  00FE3A                     l878:
   920                           
   921                           ;segment.c: 94: if (segment == 1) {
   922  00FE3A  0402               	decf	dispSeg@segment,w,c
   923  00FE3C  A4D8               	btfss	status,2,c
   924  00FE3E  D008               	goto	l79
   925                           
   926                           ;segment.c: 95: LATAbits.LA2 = LATAbits.LA3 = LATAbits.LA4 = 1;
   927  00FE40  8889               	bsf	3977,4,c	;volatile
   928  00FE42  8689               	bsf	3977,3,c	;volatile
   929  00FE44  8489               	bsf	3977,2,c	;volatile
   930                           
   931                           ;segment.c: 96: LATAbits.LA5 = LATEbits.LE0 = LATAbits.LA0 = LATAbits.LA1 = 0;
   932  00FE46  9289               	bcf	3977,1,c	;volatile
   933  00FE48  9089               	bcf	3977,0,c	;volatile
   934  00FE4A  908D               	bcf	3981,0,c	;volatile
   935  00FE4C  9A89               	bcf	3977,5,c	;volatile
   936                           
   937                           ;segment.c: 97: return;
   938  00FE4E  0012               	return	
   939  00FE50                     l79:
   940                           
   941                           ;segment.c: 98: }
   942                           ;segment.c: 99: LATAbits.LA7 = LATAbits.LA6 = LATCbits.LC2 = 1;
   943  00FE50  848B               	bsf	3979,2,c	;volatile
   944  00FE52  8C89               	bsf	3977,6,c	;volatile
   945  00FE54  8E89               	bsf	3977,7,c	;volatile
   946                           
   947                           ;segment.c: 100: LATCbits.LC0 = LATCbits.LC1 = LATEbits.LE1 = LATEbits.LE2 = 0;
   948  00FE56  948D               	bcf	3981,2,c	;volatile
   949  00FE58  928D               	bcf	3981,1,c	;volatile
   950  00FE5A  928B               	bcf	3979,1,c	;volatile
   951  00FE5C  908B               	bcf	3979,0,c	;volatile
   952                           
   953                           ;segment.c: 101: break;
   954  00FE5E  0012               	return	
   955  00FE60                     l882:
   956                           
   957                           ;segment.c: 103: if (segment == 1) {
   958  00FE60  0402               	decf	dispSeg@segment,w,c
   959  00FE62  A4D8               	btfss	status,2,c
   960  00FE64  D008               	goto	l81
   961                           
   962                           ;segment.c: 104: LATAbits.LA2 = LATAbits.LA3 = LATAbits.LA4 = LATAbits.LA5 = LATEbits.LE
      +                          0 = LATAbits.LA0 = LATAbits.LA1 = 1;
   963  00FE66  8289               	bsf	3977,1,c	;volatile
   964  00FE68  8089               	bsf	3977,0,c	;volatile
   965  00FE6A  808D               	bsf	3981,0,c	;volatile
   966  00FE6C  8A89               	bsf	3977,5,c	;volatile
   967  00FE6E  8889               	bsf	3977,4,c	;volatile
   968  00FE70  8689               	bsf	3977,3,c	;volatile
   969  00FE72  8489               	bsf	3977,2,c	;volatile
   970                           
   971                           ;segment.c: 105: return;
   972  00FE74  0012               	return	
   973  00FE76                     l81:
   974                           
   975                           ;segment.c: 106: }
   976                           ;segment.c: 107: LATAbits.LA7 = LATAbits.LA6 = LATCbits.LC2 = LATCbits.LC0 = LATCbits.LC
      +                          1 = LATEbits.LE1 = LATEbits.LE2 = 1;
   977  00FE76  848D               	bsf	3981,2,c	;volatile
   978  00FE78  828D               	bsf	3981,1,c	;volatile
   979  00FE7A  828B               	bsf	3979,1,c	;volatile
   980  00FE7C  808B               	bsf	3979,0,c	;volatile
   981  00FE7E  848B               	bsf	3979,2,c	;volatile
   982  00FE80  8C89               	bsf	3977,6,c	;volatile
   983  00FE82  8E89               	bsf	3977,7,c	;volatile
   984                           
   985                           ;segment.c: 108: break;
   986  00FE84  0012               	return	
   987  00FE86                     l886:
   988                           
   989                           ;segment.c: 110: if (segment == 1) {
   990  00FE86  0402               	decf	dispSeg@segment,w,c
   991  00FE88  A4D8               	btfss	status,2,c
   992  00FE8A  D008               	goto	l83
   993                           
   994                           ;segment.c: 111: LATAbits.LA2 = LATAbits.LA3 = LATAbits.LA4 = LATAbits.LA5 = LATAbits.LA
      +                          0 = LATAbits.LA1 = 1;
   995  00FE8C  8289               	bsf	3977,1,c	;volatile
   996  00FE8E  8089               	bsf	3977,0,c	;volatile
   997  00FE90  8A89               	bsf	3977,5,c	;volatile
   998  00FE92  8889               	bsf	3977,4,c	;volatile
   999  00FE94  8689               	bsf	3977,3,c	;volatile
  1000  00FE96  8489               	bsf	3977,2,c	;volatile
  1001                           
  1002                           ;segment.c: 112: LATEbits.LE0 = 0;
  1003  00FE98  908D               	bcf	3981,0,c	;volatile
  1004                           
  1005                           ;segment.c: 113: return;
  1006  00FE9A  0012               	return	
  1007  00FE9C                     l83:
  1008                           
  1009                           ;segment.c: 114: }
  1010                           ;segment.c: 115: LATAbits.LA7 = LATAbits.LA6 = LATCbits.LC2 = LATCbits.LC0 = LATEbits.LE
      +                          1 = LATEbits.LE2 = 1;
  1011  00FE9C  848D               	bsf	3981,2,c	;volatile
  1012  00FE9E  828D               	bsf	3981,1,c	;volatile
  1013  00FEA0  808B               	bsf	3979,0,c	;volatile
  1014  00FEA2  848B               	bsf	3979,2,c	;volatile
  1015  00FEA4  8C89               	bsf	3977,6,c	;volatile
  1016  00FEA6  8E89               	bsf	3977,7,c	;volatile
  1017                           
  1018                           ;segment.c: 116: LATCbits.LC1 = 0;
  1019  00FEA8  928B               	bcf	3979,1,c	;volatile
  1020                           
  1021                           ;segment.c: 117: break;
  1022  00FEAA  0012               	return	
  1023  00FEAC                     l890:
  1024                           
  1025                           ;segment.c: 119: if (segment == 1) {
  1026  00FEAC  0402               	decf	dispSeg@segment,w,c
  1027  00FEAE  A4D8               	btfss	status,2,c
  1028  00FEB0  D008               	goto	l85
  1029                           
  1030                           ;segment.c: 120: LATAbits.LA2 = LATAbits.LA3 = LATAbits.LA4 = LATEbits.LE0 = LATAbits.LA
      +                          0 = LATAbits.LA1 = 1;
  1031  00FEB2  8289               	bsf	3977,1,c	;volatile
  1032  00FEB4  8089               	bsf	3977,0,c	;volatile
  1033  00FEB6  808D               	bsf	3981,0,c	;volatile
  1034  00FEB8  8889               	bsf	3977,4,c	;volatile
  1035  00FEBA  8689               	bsf	3977,3,c	;volatile
  1036  00FEBC  8489               	bsf	3977,2,c	;volatile
  1037                           
  1038                           ;segment.c: 121: LATAbits.LA5 = 0;
  1039  00FEBE  9A89               	bcf	3977,5,c	;volatile
  1040                           
  1041                           ;segment.c: 122: return;
  1042  00FEC0  0012               	return	
  1043  00FEC2                     l85:
  1044                           
  1045                           ;segment.c: 123: }
  1046                           ;segment.c: 124: LATAbits.LA7 = LATAbits.LA6 = LATCbits.LC2 = LATCbits.LC1 = LATEbits.LE
      +                          1 = LATEbits.LE2 = 1;
  1047  00FEC2  848D               	bsf	3981,2,c	;volatile
  1048  00FEC4  828D               	bsf	3981,1,c	;volatile
  1049  00FEC6  828B               	bsf	3979,1,c	;volatile
  1050  00FEC8  848B               	bsf	3979,2,c	;volatile
  1051  00FECA  8C89               	bsf	3977,6,c	;volatile
  1052  00FECC  8E89               	bsf	3977,7,c	;volatile
  1053                           
  1054                           ;segment.c: 125: LATCbits.LC0 = 0;
  1055  00FECE  908B               	bcf	3979,0,c	;volatile
  1056                           
  1057                           ;segment.c: 126: break;
  1058  00FED0  0012               	return	
  1059  00FED2                     l894:
  1060                           
  1061                           ;segment.c: 128: if (segment == 1) {
  1062  00FED2  0402               	decf	dispSeg@segment,w,c
  1063  00FED4  A4D8               	btfss	status,2,c
  1064  00FED6  D008               	goto	l87
  1065                           
  1066                           ;segment.c: 129: LATAbits.LA4 = LATAbits.LA5 = LATEbits.LE0 = LATAbits.LA0 = LATAbits.LA
      +                          1 = 1;
  1067  00FED8  8289               	bsf	3977,1,c	;volatile
  1068  00FEDA  8089               	bsf	3977,0,c	;volatile
  1069  00FEDC  808D               	bsf	3981,0,c	;volatile
  1070  00FEDE  8A89               	bsf	3977,5,c	;volatile
  1071  00FEE0  8889               	bsf	3977,4,c	;volatile
  1072                           
  1073                           ;segment.c: 130: LATAbits.LA2 = LATAbits.LA3 = 0;
  1074  00FEE2  9689               	bcf	3977,3,c	;volatile
  1075  00FEE4  9489               	bcf	3977,2,c	;volatile
  1076                           
  1077                           ;segment.c: 131: return;
  1078  00FEE6  0012               	return	
  1079  00FEE8                     l87:
  1080                           
  1081                           ;segment.c: 132: }
  1082                           ;segment.c: 133: LATCbits.LC2 = LATCbits.LC0 = LATCbits.LC1 = LATEbits.LE1 = LATEbits.LE
      +                          2 = 1;
  1083  00FEE8  848D               	bsf	3981,2,c	;volatile
  1084  00FEEA  828D               	bsf	3981,1,c	;volatile
  1085  00FEEC  828B               	bsf	3979,1,c	;volatile
  1086  00FEEE  808B               	bsf	3979,0,c	;volatile
  1087  00FEF0  848B               	bsf	3979,2,c	;volatile
  1088                           
  1089                           ;segment.c: 134: LATAbits.LA7 = LATAbits.LA6 = 0;
  1090  00FEF2  9C89               	bcf	3977,6,c	;volatile
  1091  00FEF4  9E89               	bcf	3977,7,c	;volatile
  1092                           
  1093                           ;segment.c: 135: break;
  1094  00FEF6  0012               	return	
  1095  00FEF8                     l898:
  1096                           
  1097                           ;segment.c: 137: if (segment == 1) {
  1098  00FEF8  0402               	decf	dispSeg@segment,w,c
  1099  00FEFA  A4D8               	btfss	status,2,c
  1100  00FEFC  D008               	goto	l89
  1101                           
  1102                           ;segment.c: 138: LATAbits.LA2 = LATAbits.LA5 = LATEbits.LE0 = LATAbits.LA0 = 1;
  1103  00FEFE  8089               	bsf	3977,0,c	;volatile
  1104  00FF00  808D               	bsf	3981,0,c	;volatile
  1105  00FF02  8A89               	bsf	3977,5,c	;volatile
  1106  00FF04  8489               	bsf	3977,2,c	;volatile
  1107                           
  1108                           ;segment.c: 139: LATAbits.LA3 = LATAbits.LA4 = LATAbits.LA1 = 0;
  1109  00FF06  9289               	bcf	3977,1,c	;volatile
  1110  00FF08  9889               	bcf	3977,4,c	;volatile
  1111  00FF0A  9689               	bcf	3977,3,c	;volatile
  1112                           
  1113                           ;segment.c: 140: return;
  1114  00FF0C  0012               	return	
  1115  00FF0E                     l89:
  1116                           
  1117                           ;segment.c: 141: }
  1118                           ;segment.c: 142: LATAbits.LA7 = LATCbits.LC0 = LATCbits.LC1 = LATEbits.LE1 = 1;
  1119  00FF0E  828D               	bsf	3981,1,c	;volatile
  1120  00FF10  828B               	bsf	3979,1,c	;volatile
  1121  00FF12  808B               	bsf	3979,0,c	;volatile
  1122  00FF14  8E89               	bsf	3977,7,c	;volatile
  1123                           
  1124                           ;segment.c: 143: LATAbits.LA6 = LATCbits.LC2 = LATEbits.LE2 = 0;
  1125  00FF16  948D               	bcf	3981,2,c	;volatile
  1126  00FF18  948B               	bcf	3979,2,c	;volatile
  1127  00FF1A  9C89               	bcf	3977,6,c	;volatile
  1128                           
  1129                           ;segment.c: 144: break;
  1130  00FF1C  0012               	return	
  1131  00FF1E                     l902:
  1132                           
  1133                           ;segment.c: 146: if (segment == 1) {
  1134  00FF1E  0402               	decf	dispSeg@segment,w,c
  1135  00FF20  A4D8               	btfss	status,2,c
  1136  00FF22  D008               	goto	l91
  1137                           
  1138                           ;segment.c: 147: LATAbits.LA3 = LATAbits.LA4 = LATAbits.LA5 = LATEbits.LE0 = LATAbits.LA
      +                          1 = 1;
  1139  00FF24  8289               	bsf	3977,1,c	;volatile
  1140  00FF26  808D               	bsf	3981,0,c	;volatile
  1141  00FF28  8A89               	bsf	3977,5,c	;volatile
  1142  00FF2A  8889               	bsf	3977,4,c	;volatile
  1143  00FF2C  8689               	bsf	3977,3,c	;volatile
  1144                           
  1145                           ;segment.c: 148: LATAbits.LA2 = LATAbits.LA0 = 0;
  1146  00FF2E  9089               	bcf	3977,0,c	;volatile
  1147  00FF30  9489               	bcf	3977,2,c	;volatile
  1148                           
  1149                           ;segment.c: 149: return;
  1150  00FF32  0012               	return	
  1151  00FF34                     l91:
  1152                           
  1153                           ;segment.c: 150: }
  1154                           ;segment.c: 151: LATAbits.LA6 = LATCbits.LC2 = LATCbits.LC0 = LATCbits.LC1 = LATEbits.LE
      +                          2 = 1;
  1155  00FF34  848D               	bsf	3981,2,c	;volatile
  1156  00FF36  828B               	bsf	3979,1,c	;volatile
  1157  00FF38  808B               	bsf	3979,0,c	;volatile
  1158  00FF3A  848B               	bsf	3979,2,c	;volatile
  1159  00FF3C  8C89               	bsf	3977,6,c	;volatile
  1160                           
  1161                           ;segment.c: 152: LATAbits.LA7 = LATEbits.LE1 = 0;
  1162  00FF3E  928D               	bcf	3981,1,c	;volatile
  1163  00FF40  9E89               	bcf	3977,7,c	;volatile
  1164                           
  1165                           ;segment.c: 153: break;
  1166  00FF42  0012               	return	
  1167  00FF44                     l906:
  1168                           
  1169                           ;segment.c: 155: if (segment == 1) {
  1170  00FF44  0402               	decf	dispSeg@segment,w,c
  1171  00FF46  A4D8               	btfss	status,2,c
  1172  00FF48  D008               	goto	l93
  1173                           
  1174                           ;segment.c: 156: LATAbits.LA2 = LATAbits.LA5 = LATEbits.LE0 = LATAbits.LA0 = LATAbits.LA
      +                          1 = 1;
  1175  00FF4A  8289               	bsf	3977,1,c	;volatile
  1176  00FF4C  8089               	bsf	3977,0,c	;volatile
  1177  00FF4E  808D               	bsf	3981,0,c	;volatile
  1178  00FF50  8A89               	bsf	3977,5,c	;volatile
  1179  00FF52  8489               	bsf	3977,2,c	;volatile
  1180                           
  1181                           ;segment.c: 157: LATAbits.LA3 = LATAbits.LA4 = 0;
  1182  00FF54  9889               	bcf	3977,4,c	;volatile
  1183  00FF56  9689               	bcf	3977,3,c	;volatile
  1184                           
  1185                           ;segment.c: 158: return;
  1186  00FF58  0012               	return	
  1187  00FF5A                     l93:
  1188                           
  1189                           ;segment.c: 159: }
  1190                           ;segment.c: 160: LATAbits.LA7 = LATCbits.LC0 = LATCbits.LC1 = LATEbits.LE1 = LATEbits.LE
      +                          2 = 1;
  1191  00FF5A  848D               	bsf	3981,2,c	;volatile
  1192  00FF5C  828D               	bsf	3981,1,c	;volatile
  1193  00FF5E  828B               	bsf	3979,1,c	;volatile
  1194  00FF60  808B               	bsf	3979,0,c	;volatile
  1195  00FF62  8E89               	bsf	3977,7,c	;volatile
  1196                           
  1197                           ;segment.c: 161: LATAbits.LA6 = LATCbits.LC2 = 0;
  1198  00FF64  948B               	bcf	3979,2,c	;volatile
  1199  00FF66  9C89               	bcf	3977,6,c	;volatile
  1200                           
  1201                           ;segment.c: 162: break;
  1202  00FF68  0012               	return	
  1203  00FF6A                     l910:
  1204                           
  1205                           ;segment.c: 164: if (segment == 1) {
  1206  00FF6A  0402               	decf	dispSeg@segment,w,c
  1207  00FF6C  A4D8               	btfss	status,2,c
  1208  00FF6E  D008               	goto	l95
  1209                           
  1210                           ;segment.c: 165: LATAbits.LA2 = LATEbits.LE0 = LATAbits.LA0 = LATAbits.LA1 = 1;
  1211  00FF70  8289               	bsf	3977,1,c	;volatile
  1212  00FF72  8089               	bsf	3977,0,c	;volatile
  1213  00FF74  808D               	bsf	3981,0,c	;volatile
  1214  00FF76  8489               	bsf	3977,2,c	;volatile
  1215                           
  1216                           ;segment.c: 166: LATAbits.LA3 = LATAbits.LA4 = LATAbits.LA5 = 0;
  1217  00FF78  9A89               	bcf	3977,5,c	;volatile
  1218  00FF7A  9889               	bcf	3977,4,c	;volatile
  1219  00FF7C  9689               	bcf	3977,3,c	;volatile
  1220                           
  1221                           ;segment.c: 167: return;
  1222  00FF7E  0012               	return	
  1223  00FF80                     l95:
  1224                           
  1225                           ;segment.c: 168: }
  1226                           ;segment.c: 169: LATAbits.LA7 = LATCbits.LC1 = LATEbits.LE1 = LATEbits.LE2 = 1;
  1227  00FF80  848D               	bsf	3981,2,c	;volatile
  1228  00FF82  828D               	bsf	3981,1,c	;volatile
  1229  00FF84  828B               	bsf	3979,1,c	;volatile
  1230  00FF86  8E89               	bsf	3977,7,c	;volatile
  1231                           
  1232                           ;segment.c: 170: LATAbits.LA6 = LATCbits.LC2 = LATCbits.LC0 = 0;
  1233  00FF88  908B               	bcf	3979,0,c	;volatile
  1234  00FF8A  948B               	bcf	3979,2,c	;volatile
  1235  00FF8C  9C89               	bcf	3977,6,c	;volatile
  1236                           
  1237                           ;segment.c: 171: break;
  1238  00FF8E  0012               	return	
  1239  00FF90                     l916:
  1240  00FF90  5001               	movf	dispSeg@letter,w,c
  1241                           
  1242                           ; Switch size 1, requested type "space"
  1243                           ; Number of cases is 18, Range of values is 45 to 120
  1244                           ; switch strategies available:
  1245                           ; Name         Instructions Cycles
  1246                           ; simple_byte           55    28 (average)
  1247                           ;	Chosen strategy is simple_byte
  1248  00FF92  0A2D               	xorlw	45	; case 45
  1249  00FF94  B4D8               	btfsc	status,2,c
  1250  00FF96  D6BA               	goto	l846
  1251  00FF98  0A1D               	xorlw	29	; case 48
  1252  00FF9A  B4D8               	btfsc	status,2,c
  1253  00FF9C  D6C9               	goto	l850
  1254  00FF9E  0A01               	xorlw	1	; case 49
  1255  00FFA0  B4D8               	btfsc	status,2,c
  1256  00FFA2  D6D9               	goto	l854
  1257  00FFA4  0A03               	xorlw	3	; case 50
  1258  00FFA6  B4D8               	btfsc	status,2,c
  1259  00FFA8  D6E9               	goto	l858
  1260  00FFAA  0A01               	xorlw	1	; case 51
  1261  00FFAC  B4D8               	btfsc	status,2,c
  1262  00FFAE  D6F9               	goto	l862
  1263  00FFB0  0A07               	xorlw	7	; case 52
  1264  00FFB2  B4D8               	btfsc	status,2,c
  1265  00FFB4  D709               	goto	l866
  1266  00FFB6  0A01               	xorlw	1	; case 53
  1267  00FFB8  B4D8               	btfsc	status,2,c
  1268  00FFBA  D719               	goto	l870
  1269  00FFBC  0A03               	xorlw	3	; case 54
  1270  00FFBE  B4D8               	btfsc	status,2,c
  1271  00FFC0  D729               	goto	l874
  1272  00FFC2  0A01               	xorlw	1	; case 55
  1273  00FFC4  B4D8               	btfsc	status,2,c
  1274  00FFC6  D739               	goto	l878
  1275  00FFC8  0A0F               	xorlw	15	; case 56
  1276  00FFCA  B4D8               	btfsc	status,2,c
  1277  00FFCC  D749               	goto	l882
  1278  00FFCE  0A01               	xorlw	1	; case 57
  1279  00FFD0  B4D8               	btfsc	status,2,c
  1280  00FFD2  D759               	goto	l886
  1281  00FFD4  0A58               	xorlw	88	; case 97
  1282  00FFD6  B4D8               	btfsc	status,2,c
  1283  00FFD8  D769               	goto	l890
  1284  00FFDA  0A03               	xorlw	3	; case 98
  1285  00FFDC  B4D8               	btfsc	status,2,c
  1286  00FFDE  D779               	goto	l894
  1287  00FFE0  0A01               	xorlw	1	; case 99
  1288  00FFE2  B4D8               	btfsc	status,2,c
  1289  00FFE4  D789               	goto	l898
  1290  00FFE6  0A07               	xorlw	7	; case 100
  1291  00FFE8  B4D8               	btfsc	status,2,c
  1292  00FFEA  D799               	goto	l902
  1293  00FFEC  0A01               	xorlw	1	; case 101
  1294  00FFEE  B4D8               	btfsc	status,2,c
  1295  00FFF0  D7A9               	goto	l906
  1296  00FFF2  0A03               	xorlw	3	; case 102
  1297  00FFF4  B4D8               	btfsc	status,2,c
  1298  00FFF6  D7B9               	goto	l910
  1299  00FFF8  0A1E               	xorlw	30	; case 120
  1300  00FFFA  A4D8               	btfss	status,2,c
  1301  00FFFC  0012               	return	
  1302  00FFFE  D674               	goto	l842
  1303  010000                     __end_of_dispSeg:
  1304                           	opt stack 0
  1305  0000                     tblptru	equ	0xFF8
  1306                           wreg	equ	0xFE8
  1307                           status	equ	0xFD8
  1308                           tblptru	equ	0xFF8
  1309                           wreg	equ	0xFE8
  1310                           status	equ	0xFD8
  1311                           
  1312                           	psect	rparam
  1313  0000                     tblptru	equ	0xFF8
  1314                           wreg	equ	0xFE8
  1315                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      5       9
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_enableSerial

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    1660
                                              4 COMRAM     1     1      0
                            _dispSeg
                       _enableSerial
                     _initOscillator
                          _initPorts
 ---------------------------------------------------------------------------------
 (1) _initPorts                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initOscillator                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _enableSerial                                         4     2      2      49
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _dispSeg                                              2     1      1    1611
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _dispSeg
   _enableSerial
   _initOscillator
   _initPorts

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      5       9       1        9.5%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       9      12        0.0%
DATA                 0      0       9       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Fri Feb 14 13:27:40 2014

                     l62 FD20                       l71 FDB8                       l64 FD46  
                     l81 FE76                       l73 FDDE                       l91 FF34  
                     l83 FE9C                       l75 FE04                       l67 FD6C  
                     l59 FCFC                       l93 FF5A                       l85 FEC2  
                     l77 FE2A                       l69 FD92                       l95 FF80  
                     l87 FEE8                       l79 FE50                       l89 FF0E  
           __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000  
           __CFG_CP3$OFF 000000                      l146 FBD4                      l800 FCCA  
                    l910 FF6A                      l902 FF1E                      l906 FF44  
                    l850 FD30                      l842 FCE8                      l916 FF90  
                    l870 FDEE                      l862 FDA2                      l854 FD56  
                    l846 FD0C                      l790 FC60                      l792 FC64  
                    l890 FEAC                      l882 FE60                      l874 FE14  
                    l866 FDC8                      l858 FD7C                      l794 FC68  
                    l796 FC6C                      l788 FC5C                      l894 FED2  
                    l886 FE86                      l878 FE3A                      l798 FC72  
                    l898 FEF8             __CFG_CPB$OFF 000000             __CFG_CPD$OFF 000000  
                    wreg 000FE8               _TXSTA2bits 000F72             __CFG_LVP$OFF 000000  
                   l1024 FC52                     l1016 FC3A                     l1130 FCAC  
                   l1132 FCB6                     l1134 FCC0                     l1126 FC9C  
                   l1128 FCA2                     _LATA 000F89                     _LATC 000F8B  
                   _LATD 000F8C                     _LATE 000F8D                     _main FC0A  
          __CFG_BORV$190 000000                     start 0000            __CFG_IESO$OFF 000000  
           _BAUDCON2bits 000F70                    ?_main 0001                    _TRISA 000F92  
                  _TRISC 000F94                    _TRISE 000F96            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000  
         __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000  
         __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000          __end_of_dispSeg 0000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
         __CFG_EBTRB$OFF 000000       __CFG_MCLRE$EXTMCLR 000000           __CFG_BOREN$OFF 000000  
                  status 000FD8           __CFG_HFOFST$ON 000000          __initialization FBAC  
           __end_of_main FC58     __end_of_enableSerial FCE2                   ??_main 0005  
          __activetblptr 000002     enableSerial@baudRate 0001                   _ANSELD 000F3B  
         __CFG_WDTEN$OFF 000000                   _RCREG2 000F74                   _SPBRG2 000F75  
                 _TXREG2 000F73           __CFG_XINST$OFF 000000           __CFG_STVREN$ON 000000  
              ??_dispSeg 0002                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization FBB4          __CFG_PBADEN$OFF 000000           __pcstackCOMRAM 0001  
__size_of_initOscillator 001C          __CFG_PLLCFG$OFF 000000       __size_of_initPorts 0030  
     __CFG_CCP2MX$PORTC1 000000    __size_of_enableSerial 008A       __CFG_CCP3MX$PORTB5 000000  
      __CFG_PRICLKEN$OFF 000000                  _SPBRGH2 000F76             _enableSerial FC58  
        __CFG_PWRTEN$OFF 000000                  __Hparam 0000                  __Lparam 0000  
                __pcinit FBAC                  __ramtop 1000                  __ptext0 FC0A  
                __ptext1 FBDA                  __ptext2 FBBE                  __ptext3 FC58  
                __ptext4 FCE2                  _dispSeg FCE2        __end_of_initPorts FC0A  
   end_of_initialization FBB4            __Lmediumconst 0000                _TRISDbits 000F95  
         _initOscillator FBBE      start_initialization FBAC   __end_of_initOscillator FBDA  
            __pbssCOMRAM 0006          ?_initOscillator 0001                 ?_dispSeg 0001  
              _initPorts FBDA                 _LATAbits 000F89                 _LATCbits 000F8B  
               _LATDbits 000F8C                 _LATEbits 000F8D                 _PIR3bits 000FA4  
       __CFG_WDTPS$32768 000000               ?_initPorts 0001                 __Hrparam 0000  
               __Lrparam 0000        __CFG_P2BMX$PORTD2 000000         __size_of_dispSeg 031E  
            _OSCCON2bits 000FD2            __size_of_main 004E         ??_initOscillator 0001  
            ??_initPorts 0001            ?_enableSerial 0001               _RCSTA2bits 000F71  
             _OSCCONbits 000FD3           dispSeg@segment 0002             wait_ms@timel 0006  
      __CFG_T3CMX$PORTC0 000000            dispSeg@letter 0001           ??_enableSerial 0003  
      __CFG_FOSC$INTIO67 000000  
