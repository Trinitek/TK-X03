

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Thu Mar 13 13:19:22 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    28                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    29  0000                     
    30                           	psect	idataBIGRAM
    31  001006                     __pidataBIGRAM:
    32                           	opt stack 0
    33                           
    34                           ;initializer for _virtualMemory
    35  001006  00                 	db	0
    36  001007  00                 	db	0
    37  001008  00                 	db	0
    38  001009  00                 	db	0
    39  00100A  00                 	db	0
    40  00100B  00                 	db	0
    41  00100C  00                 	db	0
    42  00100D  00                 	db	0
    43  00100E  00                 	db	0
    44  00100F  00                 	db	0
    45  001010  00                 	db	0
    46  001011  00                 	db	0
    47  001012  00                 	db	0
    48  001013  00                 	db	0
    49  001014  00                 	db	0
    50  001015  00                 	db	0
    51  001016  00                 	db	0
    52  001017  00                 	db	0
    53  001018  00                 	db	0
    54  001019  00                 	db	0
    55  00101A  00                 	db	0
    56  00101B  00                 	db	0
    57  00101C  00                 	db	0
    58  00101D  00                 	db	0
    59  00101E  00                 	db	0
    60  00101F  00                 	db	0
    61  001020  00                 	db	0
    62  001021  00                 	db	0
    63  001022  00                 	db	0
    64  001023  00                 	db	0
    65  001024  00                 	db	0
    66  001025  00                 	db	0
    67  001026  00                 	db	0
    68  001027  00                 	db	0
    69  001028  00                 	db	0
    70  001029  00                 	db	0
    71  00102A  00                 	db	0
    72  00102B  00                 	db	0
    73  00102C  00                 	db	0
    74  00102D  00                 	db	0
    75  00102E  00                 	db	0
    76  00102F  00                 	db	0
    77  001030  00                 	db	0
    78  001031  00                 	db	0
    79  001032  00                 	db	0
    80  001033  00                 	db	0
    81  001034  00                 	db	0
    82  001035  00                 	db	0
    83  001036  00                 	db	0
    84  001037  00                 	db	0
    85  001038  00                 	db	0
    86  001039  00                 	db	0
    87  00103A  00                 	db	0
    88  00103B  00                 	db	0
    89  00103C  00                 	db	0
    90  00103D  00                 	db	0
    91  00103E  00                 	db	0
    92  00103F  00                 	db	0
    93  001040  00                 	db	0
    94  001041  00                 	db	0
    95  001042  00                 	db	0
    96  001043  00                 	db	0
    97  001044  00                 	db	0
    98  001045  00                 	db	0
    99  001046  00                 	db	0
   100  001047  00                 	db	0
   101  001048  00                 	db	0
   102  001049  00                 	db	0
   103  00104A  00                 	db	0
   104  00104B  00                 	db	0
   105  00104C  00                 	db	0
   106  00104D  00                 	db	0
   107  00104E  00                 	db	0
   108  00104F  00                 	db	0
   109  001050  00                 	db	0
   110  001051  00                 	db	0
   111  001052  00                 	db	0
   112  001053  00                 	db	0
   113  001054  00                 	db	0
   114  001055  00                 	db	0
   115  001056  00                 	db	0
   116  001057  00                 	db	0
   117  001058  00                 	db	0
   118  001059  00                 	db	0
   119  00105A  00                 	db	0
   120  00105B  00                 	db	0
   121  00105C  00                 	db	0
   122  00105D  00                 	db	0
   123  00105E  00                 	db	0
   124  00105F  00                 	db	0
   125  001060  00                 	db	0
   126  001061  00                 	db	0
   127  001062  00                 	db	0
   128  001063  00                 	db	0
   129  001064  00                 	db	0
   130  001065  00                 	db	0
   131  001066  00                 	db	0
   132  001067  00                 	db	0
   133  001068  00                 	db	0
   134  001069  00                 	db	0
   135  00106A  00                 	db	0
   136  00106B  00                 	db	0
   137  00106C  00                 	db	0
   138  00106D  00                 	db	0
   139  00106E  00                 	db	0
   140  00106F  00                 	db	0
   141  001070  00                 	db	0
   142  001071  00                 	db	0
   143  001072  00                 	db	0
   144  001073  00                 	db	0
   145  001074  00                 	db	0
   146  001075  00                 	db	0
   147  001076  00                 	db	0
   148  001077  00                 	db	0
   149  001078  00                 	db	0
   150  001079  00                 	db	0
   151  00107A  00                 	db	0
   152  00107B  00                 	db	0
   153  00107C  00                 	db	0
   154  00107D  00                 	db	0
   155  00107E  00                 	db	0
   156  00107F  00                 	db	0
   157  001080  00                 	db	0
   158  001081  00                 	db	0
   159  001082  00                 	db	0
   160  001083  00                 	db	0
   161  001084  00                 	db	0
   162  001085  00                 	db	0
   163  001086  00                 	db	0
   164  001087  00                 	db	0
   165  001088  00                 	db	0
   166  001089  00                 	db	0
   167  00108A  00                 	db	0
   168  00108B  00                 	db	0
   169  00108C  00                 	db	0
   170  00108D  00                 	db	0
   171  00108E  00                 	db	0
   172  00108F  00                 	db	0
   173  001090  00                 	db	0
   174  001091  00                 	db	0
   175  001092  00                 	db	0
   176  001093  00                 	db	0
   177  001094  00                 	db	0
   178  001095  00                 	db	0
   179  001096  00                 	db	0
   180  001097  00                 	db	0
   181  001098  00                 	db	0
   182  001099  00                 	db	0
   183  00109A  00                 	db	0
   184  00109B  00                 	db	0
   185  00109C  00                 	db	0
   186  00109D  00                 	db	0
   187  00109E  00                 	db	0
   188  00109F  00                 	db	0
   189  0010A0  00                 	db	0
   190  0010A1  00                 	db	0
   191  0010A2  00                 	db	0
   192  0010A3  00                 	db	0
   193  0010A4  00                 	db	0
   194  0010A5  00                 	db	0
   195  0010A6  00                 	db	0
   196  0010A7  00                 	db	0
   197  0010A8  00                 	db	0
   198  0010A9  00                 	db	0
   199  0010AA  00                 	db	0
   200  0010AB  00                 	db	0
   201  0010AC  00                 	db	0
   202  0010AD  00                 	db	0
   203  0010AE  00                 	db	0
   204  0010AF  00                 	db	0
   205  0010B0  00                 	db	0
   206  0010B1  00                 	db	0
   207  0010B2  00                 	db	0
   208  0010B3  00                 	db	0
   209  0010B4  00                 	db	0
   210  0010B5  00                 	db	0
   211  0010B6  00                 	db	0
   212  0010B7  00                 	db	0
   213  0010B8  00                 	db	0
   214  0010B9  00                 	db	0
   215  0010BA  00                 	db	0
   216  0010BB  00                 	db	0
   217  0010BC  00                 	db	0
   218  0010BD  00                 	db	0
   219  0010BE  00                 	db	0
   220  0010BF  00                 	db	0
   221  0010C0  00                 	db	0
   222  0010C1  00                 	db	0
   223  0010C2  00                 	db	0
   224  0010C3  00                 	db	0
   225  0010C4  00                 	db	0
   226  0010C5  00                 	db	0
   227  0010C6  00                 	db	0
   228  0010C7  00                 	db	0
   229  0010C8  00                 	db	0
   230  0010C9  00                 	db	0
   231  0010CA  00                 	db	0
   232  0010CB  00                 	db	0
   233  0010CC  00                 	db	0
   234  0010CD  00                 	db	0
   235  0010CE  00                 	db	0
   236  0010CF  00                 	db	0
   237  0010D0  00                 	db	0
   238  0010D1  00                 	db	0
   239  0010D2  00                 	db	0
   240  0010D3  00                 	db	0
   241  0010D4  00                 	db	0
   242  0010D5  00                 	db	0
   243  0010D6  00                 	db	0
   244  0010D7  00                 	db	0
   245  0010D8  00                 	db	0
   246  0010D9  00                 	db	0
   247  0010DA  00                 	db	0
   248  0010DB  00                 	db	0
   249  0010DC  00                 	db	0
   250  0010DD  00                 	db	0
   251  0010DE  00                 	db	0
   252  0010DF  00                 	db	0
   253  0010E0  00                 	db	0
   254  0010E1  00                 	db	0
   255  0010E2  00                 	db	0
   256  0010E3  00                 	db	0
   257  0010E4  00                 	db	0
   258  0010E5  00                 	db	0
   259  0010E6  00                 	db	0
   260  0010E7  00                 	db	0
   261  0010E8  00                 	db	0
   262  0010E9  00                 	db	0
   263  0010EA  00                 	db	0
   264  0010EB  00                 	db	0
   265  0010EC  00                 	db	0
   266  0010ED  00                 	db	0
   267  0010EE  00                 	db	0
   268  0010EF  00                 	db	0
   269  0010F0  00                 	db	0
   270  0010F1  00                 	db	0
   271  0010F2  00                 	db	0
   272  0010F3  00                 	db	0
   273  0010F4  00                 	db	0
   274  0010F5  00                 	db	0
   275  0010F6  00                 	db	0
   276  0010F7  00                 	db	0
   277  0010F8  00                 	db	0
   278  0010F9  00                 	db	0
   279  0010FA  00                 	db	0
   280  0010FB  00                 	db	0
   281  0010FC  00                 	db	0
   282  0010FD  00                 	db	0
   283  0010FE  00                 	db	0
   284  0010FF  00                 	db	0
   285  001100  00                 	db	0
   286  001101  00                 	db	0
   287  001102  00                 	db	0
   288  001103  00                 	db	0
   289  001104  00                 	db	0
   290  001105  00                 	db	0
   291  001106  1B                 	db	27
   292  001107  38                 	db	56
   293  001108  06                 	db	6
   294  001109  03                 	db	3
   295  00110A  08                 	db	8
   296  00110B  00                 	db	0
   297  00110C  00                 	db	0
   298  00110D  00                 	db	0
   299  00110E  00                 	db	0
   300  00110F  00                 	db	0
   301  001110  00                 	db	0
   302  001111  00                 	db	0
   303  001112  00                 	db	0
   304  001113  00                 	db	0
   305  001114  00                 	db	0
   306  001115  00                 	db	0
   307  001116  00                 	db	0
   308  001117  00                 	db	0
   309  001118  00                 	db	0
   310  001119  00                 	db	0
   311  00111A  00                 	db	0
   312  00111B  00                 	db	0
   313  00111C  00                 	db	0
   314  00111D  00                 	db	0
   315  00111E  00                 	db	0
   316  00111F  00                 	db	0
   317  001120  00                 	db	0
   318  001121  00                 	db	0
   319  001122  00                 	db	0
   320  001123  00                 	db	0
   321  001124  00                 	db	0
   322  001125  00                 	db	0
   323  001126  00                 	db	0
   324  001127  00                 	db	0
   325  001128  00                 	db	0
   326  001129  00                 	db	0
   327  00112A  00                 	db	0
   328  00112B  00                 	db	0
   329  00112C  00                 	db	0
   330  00112D  00                 	db	0
   331  00112E  00                 	db	0
   332  00112F  00                 	db	0
   333  001130  00                 	db	0
   334  001131  00                 	db	0
   335  001132  00                 	db	0
   336  001133  00                 	db	0
   337  001134  00                 	db	0
   338  001135  00                 	db	0
   339  001136  00                 	db	0
   340  001137  00                 	db	0
   341  001138  00                 	db	0
   342  001139  00                 	db	0
   343  00113A  00                 	db	0
   344  00113B  00                 	db	0
   345  00113C  00                 	db	0
   346  00113D  00                 	db	0
   347  00113E  00                 	db	0
   348  00113F  00                 	db	0
   349  001140  00                 	db	0
   350  001141  00                 	db	0
   351  001142  00                 	db	0
   352  001143  00                 	db	0
   353  001144  00                 	db	0
   354  001145  00                 	db	0
   355  001146  00                 	db	0
   356  001147  00                 	db	0
   357  001148  00                 	db	0
   358  001149  00                 	db	0
   359  00114A  00                 	db	0
   360  00114B  00                 	db	0
   361  00114C  00                 	db	0
   362  00114D  00                 	db	0
   363  00114E  00                 	db	0
   364  00114F  00                 	db	0
   365  001150  00                 	db	0
   366  001151  00                 	db	0
   367  001152  00                 	db	0
   368  001153  00                 	db	0
   369  001154  00                 	db	0
   370  001155  00                 	db	0
   371  001156  00                 	db	0
   372  001157  00                 	db	0
   373  001158  00                 	db	0
   374  001159  00                 	db	0
   375  00115A  00                 	db	0
   376  00115B  00                 	db	0
   377  00115C  00                 	db	0
   378  00115D  00                 	db	0
   379  00115E  00                 	db	0
   380  00115F  00                 	db	0
   381  001160  00                 	db	0
   382  001161  00                 	db	0
   383  001162  00                 	db	0
   384  001163  00                 	db	0
   385  001164  00                 	db	0
   386  001165  00                 	db	0
   387  001166  00                 	db	0
   388  001167  00                 	db	0
   389  001168  00                 	db	0
   390  001169  00                 	db	0
   391  00116A  00                 	db	0
   392  00116B  00                 	db	0
   393  00116C  00                 	db	0
   394  00116D  00                 	db	0
   395  00116E  00                 	db	0
   396  00116F  00                 	db	0
   397  001170  00                 	db	0
   398  001171  00                 	db	0
   399  001172  00                 	db	0
   400  001173  00                 	db	0
   401  001174  00                 	db	0
   402  001175  00                 	db	0
   403  001176  00                 	db	0
   404  001177  00                 	db	0
   405  001178  00                 	db	0
   406  001179  00                 	db	0
   407  00117A  00                 	db	0
   408  00117B  00                 	db	0
   409  00117C  00                 	db	0
   410  00117D  00                 	db	0
   411  00117E  00                 	db	0
   412  00117F  00                 	db	0
   413  001180  00                 	db	0
   414  001181  00                 	db	0
   415  001182  00                 	db	0
   416  001183  00                 	db	0
   417  001184  00                 	db	0
   418  001185  00                 	db	0
   419  001186  00                 	db	0
   420  001187  00                 	db	0
   421  001188  00                 	db	0
   422  001189  00                 	db	0
   423  00118A  00                 	db	0
   424  00118B  00                 	db	0
   425  00118C  00                 	db	0
   426  00118D  00                 	db	0
   427  00118E  00                 	db	0
   428  00118F  00                 	db	0
   429  001190  00                 	db	0
   430  001191  00                 	db	0
   431  001192  00                 	db	0
   432  001193  00                 	db	0
   433  001194  00                 	db	0
   434  001195  00                 	db	0
   435  001196  00                 	db	0
   436  001197  00                 	db	0
   437  001198  00                 	db	0
   438  001199  00                 	db	0
   439  00119A  00                 	db	0
   440  00119B  00                 	db	0
   441  00119C  00                 	db	0
   442  00119D  00                 	db	0
   443  00119E  00                 	db	0
   444  00119F  00                 	db	0
   445  0011A0  00                 	db	0
   446  0011A1  00                 	db	0
   447  0011A2  00                 	db	0
   448  0011A3  00                 	db	0
   449  0011A4  00                 	db	0
   450  0011A5  00                 	db	0
   451  0011A6  00                 	db	0
   452  0011A7  00                 	db	0
   453  0011A8  00                 	db	0
   454  0011A9  00                 	db	0
   455  0011AA  00                 	db	0
   456  0011AB  00                 	db	0
   457  0011AC  00                 	db	0
   458  0011AD  00                 	db	0
   459  0011AE  00                 	db	0
   460  0011AF  00                 	db	0
   461  0011B0  00                 	db	0
   462  0011B1  00                 	db	0
   463  0011B2  00                 	db	0
   464  0011B3  00                 	db	0
   465  0011B4  00                 	db	0
   466  0011B5  00                 	db	0
   467  0011B6  00                 	db	0
   468  0011B7  00                 	db	0
   469  0011B8  00                 	db	0
   470  0011B9  00                 	db	0
   471  0011BA  00                 	db	0
   472  0011BB  00                 	db	0
   473  0011BC  00                 	db	0
   474  0011BD  00                 	db	0
   475  0011BE  00                 	db	0
   476  0011BF  00                 	db	0
   477  0011C0  00                 	db	0
   478  0011C1  00                 	db	0
   479  0011C2  00                 	db	0
   480  0011C3  00                 	db	0
   481  0011C4  00                 	db	0
   482  0011C5  00                 	db	0
   483  0011C6  00                 	db	0
   484  0011C7  00                 	db	0
   485  0011C8  00                 	db	0
   486  0011C9  00                 	db	0
   487  0011CA  00                 	db	0
   488  0011CB  00                 	db	0
   489  0011CC  00                 	db	0
   490  0011CD  00                 	db	0
   491  0011CE  00                 	db	0
   492  0011CF  00                 	db	0
   493  0011D0  00                 	db	0
   494  0011D1  00                 	db	0
   495  0011D2  00                 	db	0
   496  0011D3  00                 	db	0
   497  0011D4  00                 	db	0
   498  0011D5  00                 	db	0
   499  0011D6  00                 	db	0
   500  0011D7  00                 	db	0
   501  0011D8  00                 	db	0
   502  0011D9  00                 	db	0
   503  0011DA  00                 	db	0
   504  0011DB  00                 	db	0
   505  0011DC  00                 	db	0
   506  0011DD  00                 	db	0
   507  0011DE  00                 	db	0
   508  0011DF  00                 	db	0
   509  0011E0  00                 	db	0
   510  0011E1  00                 	db	0
   511  0011E2  00                 	db	0
   512  0011E3  00                 	db	0
   513  0011E4  00                 	db	0
   514  0011E5  00                 	db	0
   515  0011E6  00                 	db	0
   516  0011E7  00                 	db	0
   517  0011E8  00                 	db	0
   518  0011E9  00                 	db	0
   519  0011EA  00                 	db	0
   520  0011EB  00                 	db	0
   521  0011EC  00                 	db	0
   522  0011ED  00                 	db	0
   523  0011EE  00                 	db	0
   524  0011EF  00                 	db	0
   525  0011F0  00                 	db	0
   526  0011F1  00                 	db	0
   527  0011F2  00                 	db	0
   528  0011F3  00                 	db	0
   529  0011F4  00                 	db	0
   530  0011F5  00                 	db	0
   531  0011F6  00                 	db	0
   532  0011F7  00                 	db	0
   533  0011F8  00                 	db	0
   534  0011F9  00                 	db	0
   535  0011FA  00                 	db	0
   536  0011FB  00                 	db	0
   537  0011FC  00                 	db	0
   538  0011FD  00                 	db	0
   539  0011FE  00                 	db	0
   540  0011FF  00                 	db	0
   541  001200  00                 	db	0
   542  001201  00                 	db	0
   543  001202  00                 	db	0
   544  001203  00                 	db	0
   545  001204  00                 	db	0
   546  001205  00                 	db	0
   547  001206  00                 	db	0
   548  001207  00                 	db	0
   549  001208  00                 	db	0
   550  001209  00                 	db	0
   551  00120A  00                 	db	0
   552  00120B  00                 	db	0
   553  00120C  00                 	db	0
   554  00120D  00                 	db	0
   555  00120E  00                 	db	0
   556  00120F  00                 	db	0
   557  001210  00                 	db	0
   558  001211  00                 	db	0
   559  001212  00                 	db	0
   560  001213  00                 	db	0
   561  001214  00                 	db	0
   562  001215  00                 	db	0
   563  001216  00                 	db	0
   564  001217  00                 	db	0
   565  001218  00                 	db	0
   566  001219  00                 	db	0
   567  00121A  00                 	db	0
   568  00121B  00                 	db	0
   569  00121C  00                 	db	0
   570  00121D  00                 	db	0
   571  00121E  00                 	db	0
   572  00121F  00                 	db	0
   573  001220  00                 	db	0
   574  001221  00                 	db	0
   575  001222  00                 	db	0
   576  001223  00                 	db	0
   577  001224  00                 	db	0
   578  001225  00                 	db	0
   579  001226  00                 	db	0
   580  001227  00                 	db	0
   581  001228  00                 	db	0
   582  001229  00                 	db	0
   583  00122A  00                 	db	0
   584  00122B  00                 	db	0
   585  00122C  00                 	db	0
   586  00122D  00                 	db	0
   587  00122E  00                 	db	0
   588  00122F  00                 	db	0
   589  001230  00                 	db	0
   590  001231  00                 	db	0
   591  001232  00                 	db	0
   592  001233  00                 	db	0
   593  001234  00                 	db	0
   594  001235  00                 	db	0
   595  001236  00                 	db	0
   596  001237  00                 	db	0
   597  001238  00                 	db	0
   598  001239  00                 	db	0
   599  00123A  00                 	db	0
   600  00123B  00                 	db	0
   601  00123C  00                 	db	0
   602  00123D  00                 	db	0
   603  00123E  00                 	db	0
   604  00123F  00                 	db	0
   605  001240  00                 	db	0
   606  001241  00                 	db	0
   607  001242  00                 	db	0
   608  001243  00                 	db	0
   609  001244  00                 	db	0
   610  001245  00                 	db	0
   611  001246  00                 	db	0
   612  001247  00                 	db	0
   613  001248  00                 	db	0
   614  001249  00                 	db	0
   615  00124A  00                 	db	0
   616  00124B  00                 	db	0
   617  00124C  00                 	db	0
   618  00124D  00                 	db	0
   619  00124E  00                 	db	0
   620  00124F  00                 	db	0
   621  001250  00                 	db	0
   622  001251  00                 	db	0
   623  001252  00                 	db	0
   624  001253  00                 	db	0
   625  001254  00                 	db	0
   626  001255  00                 	db	0
   627  001256  00                 	db	0
   628  001257  00                 	db	0
   629  001258  00                 	db	0
   630  001259  00                 	db	0
   631  00125A  00                 	db	0
   632  00125B  00                 	db	0
   633  00125C  00                 	db	0
   634  00125D  00                 	db	0
   635  00125E  00                 	db	0
   636  00125F  00                 	db	0
   637  001260  00                 	db	0
   638  001261  00                 	db	0
   639  001262  00                 	db	0
   640  001263  00                 	db	0
   641  001264  00                 	db	0
   642  001265  00                 	db	0
   643  001266  00                 	db	0
   644  001267  00                 	db	0
   645  001268  00                 	db	0
   646  001269  00                 	db	0
   647  00126A  00                 	db	0
   648  00126B  00                 	db	0
   649  00126C  00                 	db	0
   650  00126D  00                 	db	0
   651  00126E  00                 	db	0
   652  00126F  00                 	db	0
   653  001270  00                 	db	0
   654  001271  00                 	db	0
   655  001272  00                 	db	0
   656  001273  00                 	db	0
   657  001274  00                 	db	0
   658  001275  00                 	db	0
   659  001276  00                 	db	0
   660  001277  00                 	db	0
   661  001278  00                 	db	0
   662  001279  00                 	db	0
   663  00127A  00                 	db	0
   664  00127B  00                 	db	0
   665  00127C  00                 	db	0
   666  00127D  00                 	db	0
   667  00127E  00                 	db	0
   668  00127F  00                 	db	0
   669  001280  00                 	db	0
   670  001281  00                 	db	0
   671  001282  00                 	db	0
   672  001283  00                 	db	0
   673  001284  00                 	db	0
   674  001285  00                 	db	0
   675  001286  00                 	db	0
   676  001287  00                 	db	0
   677  001288  00                 	db	0
   678  001289  00                 	db	0
   679  00128A  00                 	db	0
   680  00128B  00                 	db	0
   681  00128C  00                 	db	0
   682  00128D  00                 	db	0
   683  00128E  00                 	db	0
   684  00128F  00                 	db	0
   685  001290  00                 	db	0
   686  001291  00                 	db	0
   687  001292  00                 	db	0
   688  001293  00                 	db	0
   689  001294  00                 	db	0
   690  001295  00                 	db	0
   691  001296  00                 	db	0
   692  001297  00                 	db	0
   693  001298  00                 	db	0
   694  001299  00                 	db	0
   695  00129A  00                 	db	0
   696  00129B  00                 	db	0
   697  00129C  00                 	db	0
   698  00129D  00                 	db	0
   699  00129E  00                 	db	0
   700  00129F  00                 	db	0
   701  0012A0  00                 	db	0
   702  0012A1  00                 	db	0
   703  0012A2  00                 	db	0
   704  0012A3  00                 	db	0
   705  0012A4  00                 	db	0
   706  0012A5  00                 	db	0
   707  0012A6  00                 	db	0
   708  0012A7  00                 	db	0
   709  0012A8  00                 	db	0
   710  0012A9  00                 	db	0
   711  0012AA  00                 	db	0
   712  0012AB  00                 	db	0
   713  0012AC  00                 	db	0
   714  0012AD  00                 	db	0
   715  0012AE  00                 	db	0
   716  0012AF  00                 	db	0
   717  0012B0  00                 	db	0
   718  0012B1  00                 	db	0
   719  0012B2  00                 	db	0
   720  0012B3  00                 	db	0
   721  0012B4  00                 	db	0
   722  0012B5  00                 	db	0
   723  0012B6  00                 	db	0
   724  0012B7  00                 	db	0
   725  0012B8  00                 	db	0
   726  0012B9  00                 	db	0
   727  0012BA  00                 	db	0
   728  0012BB  00                 	db	0
   729  0012BC  00                 	db	0
   730  0012BD  00                 	db	0
   731  0012BE  00                 	db	0
   732  0012BF  00                 	db	0
   733  0012C0  00                 	db	0
   734  0012C1  00                 	db	0
   735  0012C2  00                 	db	0
   736  0012C3  00                 	db	0
   737  0012C4  00                 	db	0
   738  0012C5  00                 	db	0
   739  0012C6  00                 	db	0
   740  0012C7  00                 	db	0
   741  0012C8  00                 	db	0
   742  0012C9  00                 	db	0
   743  0012CA  00                 	db	0
   744  0012CB  00                 	db	0
   745  0012CC  00                 	db	0
   746  0012CD  00                 	db	0
   747  0012CE  00                 	db	0
   748  0012CF  00                 	db	0
   749  0012D0  00                 	db	0
   750  0012D1  00                 	db	0
   751  0012D2  00                 	db	0
   752  0012D3  00                 	db	0
   753  0012D4  00                 	db	0
   754  0012D5  00                 	db	0
   755  0012D6  00                 	db	0
   756  0012D7  00                 	db	0
   757  0012D8  00                 	db	0
   758  0012D9  00                 	db	0
   759  0012DA  00                 	db	0
   760  0012DB  00                 	db	0
   761  0012DC  00                 	db	0
   762  0012DD  00                 	db	0
   763  0012DE  00                 	db	0
   764  0012DF  00                 	db	0
   765  0012E0  00                 	db	0
   766  0012E1  00                 	db	0
   767  0012E2  00                 	db	0
   768  0012E3  00                 	db	0
   769  0012E4  00                 	db	0
   770  0012E5  00                 	db	0
   771  0012E6  00                 	db	0
   772  0012E7  00                 	db	0
   773  0012E8  00                 	db	0
   774  0012E9  00                 	db	0
   775  0012EA  00                 	db	0
   776  0012EB  00                 	db	0
   777  0012EC  00                 	db	0
   778  0012ED  00                 	db	0
   779  0012EE  00                 	db	0
   780  0012EF  00                 	db	0
   781  0012F0  00                 	db	0
   782  0012F1  00                 	db	0
   783  0012F2  00                 	db	0
   784  0012F3  00                 	db	0
   785  0012F4  00                 	db	0
   786  0012F5  00                 	db	0
   787  0012F6  00                 	db	0
   788  0012F7  00                 	db	0
   789  0012F8  00                 	db	0
   790  0012F9  00                 	db	0
   791  0012FA  00                 	db	0
   792  0012FB  00                 	db	0
   793  0012FC  00                 	db	0
   794  0012FD  00                 	db	0
   795  0012FE  00                 	db	0
   796  0012FF  00                 	db	0
   797  001300  00                 	db	0
   798  001301  00                 	db	0
   799  001302  00                 	db	0
   800  001303  00                 	db	0
   801  001304  00                 	db	0
   802  001305  00                 	db	0
   803  001306  00                 	db	0
   804  001307  00                 	db	0
   805  001308  00                 	db	0
   806  001309  00                 	db	0
   807  00130A  00                 	db	0
   808  00130B  00                 	db	0
   809  00130C  00                 	db	0
   810  00130D  00                 	db	0
   811  00130E  00                 	db	0
   812  00130F  00                 	db	0
   813  001310  00                 	db	0
   814  001311  00                 	db	0
   815  001312  00                 	db	0
   816  001313  00                 	db	0
   817  001314  00                 	db	0
   818  001315  00                 	db	0
   819  001316  00                 	db	0
   820  001317  00                 	db	0
   821  001318  00                 	db	0
   822  001319  00                 	db	0
   823  00131A  00                 	db	0
   824  00131B  00                 	db	0
   825  00131C  00                 	db	0
   826  00131D  00                 	db	0
   827  00131E  00                 	db	0
   828  00131F  00                 	db	0
   829  001320  00                 	db	0
   830  001321  00                 	db	0
   831  001322  00                 	db	0
   832  001323  00                 	db	0
   833  001324  00                 	db	0
   834  001325  00                 	db	0
   835  001326  00                 	db	0
   836  001327  00                 	db	0
   837  001328  00                 	db	0
   838  001329  00                 	db	0
   839  00132A  00                 	db	0
   840  00132B  00                 	db	0
   841  00132C  00                 	db	0
   842  00132D  00                 	db	0
   843  00132E  00                 	db	0
   844  00132F  00                 	db	0
   845  001330  00                 	db	0
   846  001331  00                 	db	0
   847  001332  00                 	db	0
   848  001333  00                 	db	0
   849  001334  00                 	db	0
   850  001335  00                 	db	0
   851  001336  00                 	db	0
   852  001337  00                 	db	0
   853  001338  00                 	db	0
   854  001339  00                 	db	0
   855  00133A  00                 	db	0
   856  00133B  00                 	db	0
   857  00133C  00                 	db	0
   858  00133D  00                 	db	0
   859  00133E  00                 	db	0
   860  00133F  00                 	db	0
   861  001340  00                 	db	0
   862  001341  00                 	db	0
   863  001342  00                 	db	0
   864  001343  00                 	db	0
   865  001344  00                 	db	0
   866  001345  00                 	db	0
   867  001346  00                 	db	0
   868  001347  00                 	db	0
   869  001348  00                 	db	0
   870  001349  00                 	db	0
   871  00134A  00                 	db	0
   872  00134B  00                 	db	0
   873  00134C  00                 	db	0
   874  00134D  00                 	db	0
   875  00134E  00                 	db	0
   876  00134F  00                 	db	0
   877  001350  00                 	db	0
   878  001351  00                 	db	0
   879  001352  00                 	db	0
   880  001353  00                 	db	0
   881  001354  00                 	db	0
   882  001355  00                 	db	0
   883  001356  00                 	db	0
   884  001357  00                 	db	0
   885  001358  00                 	db	0
   886  001359  00                 	db	0
   887  00135A  00                 	db	0
   888  00135B  00                 	db	0
   889  00135C  00                 	db	0
   890  00135D  00                 	db	0
   891  00135E  00                 	db	0
   892  00135F  00                 	db	0
   893  001360  00                 	db	0
   894  001361  00                 	db	0
   895  001362  00                 	db	0
   896  001363  00                 	db	0
   897  001364  00                 	db	0
   898  001365  00                 	db	0
   899  001366  00                 	db	0
   900  001367  00                 	db	0
   901  001368  00                 	db	0
   902  001369  00                 	db	0
   903  00136A  00                 	db	0
   904  00136B  00                 	db	0
   905  00136C  00                 	db	0
   906  00136D  00                 	db	0
   907  00136E  00                 	db	0
   908  00136F  00                 	db	0
   909  001370  00                 	db	0
   910  001371  00                 	db	0
   911  001372  00                 	db	0
   912  001373  00                 	db	0
   913  001374  00                 	db	0
   914  001375  00                 	db	0
   915  001376  00                 	db	0
   916  001377  00                 	db	0
   917  001378  00                 	db	0
   918  001379  00                 	db	0
   919  00137A  00                 	db	0
   920  00137B  00                 	db	0
   921  00137C  00                 	db	0
   922  00137D  00                 	db	0
   923  00137E  00                 	db	0
   924  00137F  00                 	db	0
   925  001380  00                 	db	0
   926  001381  00                 	db	0
   927  001382  00                 	db	0
   928  001383  00                 	db	0
   929  001384  00                 	db	0
   930  001385  00                 	db	0
   931  001386  00                 	db	0
   932  001387  00                 	db	0
   933  001388  00                 	db	0
   934  001389  00                 	db	0
   935  00138A  00                 	db	0
   936  00138B  00                 	db	0
   937  00138C  00                 	db	0
   938  00138D  00                 	db	0
   939  00138E  00                 	db	0
   940  00138F  00                 	db	0
   941  001390  00                 	db	0
   942  001391  00                 	db	0
   943  001392  00                 	db	0
   944  001393  00                 	db	0
   945  001394  00                 	db	0
   946  001395  00                 	db	0
   947  001396  00                 	db	0
   948  001397  00                 	db	0
   949  001398  00                 	db	0
   950  001399  00                 	db	0
   951  00139A  00                 	db	0
   952  00139B  00                 	db	0
   953  00139C  00                 	db	0
   954  00139D  00                 	db	0
   955  00139E  00                 	db	0
   956  00139F  00                 	db	0
   957  0013A0  00                 	db	0
   958  0013A1  00                 	db	0
   959  0013A2  00                 	db	0
   960  0013A3  00                 	db	0
   961  0013A4  00                 	db	0
   962  0013A5  00                 	db	0
   963  0013A6  00                 	db	0
   964  0013A7  00                 	db	0
   965  0013A8  00                 	db	0
   966  0013A9  00                 	db	0
   967  0013AA  00                 	db	0
   968  0013AB  00                 	db	0
   969  0013AC  00                 	db	0
   970  0013AD  00                 	db	0
   971  0013AE  00                 	db	0
   972  0013AF  00                 	db	0
   973  0013B0  00                 	db	0
   974  0013B1  00                 	db	0
   975  0013B2  00                 	db	0
   976  0013B3  00                 	db	0
   977  0013B4  00                 	db	0
   978  0013B5  00                 	db	0
   979  0013B6  00                 	db	0
   980  0013B7  00                 	db	0
   981  0013B8  00                 	db	0
   982  0013B9  00                 	db	0
   983  0013BA  00                 	db	0
   984  0013BB  00                 	db	0
   985  0013BC  00                 	db	0
   986  0013BD  00                 	db	0
   987  0013BE  00                 	db	0
   988  0013BF  00                 	db	0
   989  0013C0  00                 	db	0
   990  0013C1  00                 	db	0
   991  0013C2  00                 	db	0
   992  0013C3  00                 	db	0
   993  0013C4  00                 	db	0
   994  0013C5  00                 	db	0
   995  0013C6  00                 	db	0
   996  0013C7  00                 	db	0
   997  0013C8  00                 	db	0
   998  0013C9  00                 	db	0
   999  0013CA  00                 	db	0
  1000  0013CB  00                 	db	0
  1001  0013CC  00                 	db	0
  1002  0013CD  00                 	db	0
  1003  0013CE  00                 	db	0
  1004  0013CF  00                 	db	0
  1005  0013D0  00                 	db	0
  1006  0013D1  00                 	db	0
  1007  0013D2  00                 	db	0
  1008  0013D3  00                 	db	0
  1009  0013D4  00                 	db	0
  1010  0013D5  00                 	db	0
  1011  0013D6  00                 	db	0
  1012  0013D7  00                 	db	0
  1013  0013D8  00                 	db	0
  1014  0013D9  00                 	db	0
  1015  0013DA  00                 	db	0
  1016  0013DB  00                 	db	0
  1017  0013DC  00                 	db	0
  1018  0013DD  00                 	db	0
  1019  0013DE  00                 	db	0
  1020  0013DF  00                 	db	0
  1021  0013E0  00                 	db	0
  1022  0013E1  00                 	db	0
  1023  0013E2  00                 	db	0
  1024  0013E3  00                 	db	0
  1025  0013E4  00                 	db	0
  1026  0013E5  00                 	db	0
  1027  0013E6  00                 	db	0
  1028  0013E7  00                 	db	0
  1029  0013E8  00                 	db	0
  1030  0013E9  00                 	db	0
  1031  0013EA  00                 	db	0
  1032  0013EB  00                 	db	0
  1033  0013EC  00                 	db	0
  1034  0013ED  00                 	db	0
  1035  0013EE  00                 	db	0
  1036  0013EF  00                 	db	0
  1037  0013F0  00                 	db	0
  1038  0013F1  00                 	db	0
  1039  0013F2  00                 	db	0
  1040  0013F3  00                 	db	0
  1041  0013F4  00                 	db	0
  1042  0013F5  00                 	db	0
  1043  0013F6  00                 	db	0
  1044  0013F7  00                 	db	0
  1045  0013F8  00                 	db	0
  1046  0013F9  00                 	db	0
  1047  0013FA  00                 	db	0
  1048  0013FB  00                 	db	0
  1049  0013FC  00                 	db	0
  1050  0013FD  00                 	db	0
  1051  0013FE  00                 	db	0
  1052  0013FF  00                 	db	0
  1053  001400  00                 	db	0
  1054  001401  00                 	db	0
  1055  001402  00                 	db	0
  1056  001403  00                 	db	0
  1057  001404  00                 	db	0
  1058  001405  00                 	db	0
  1059  001406  00                 	db	0
  1060  001407  00                 	db	0
  1061  001408  00                 	db	0
  1062  001409  00                 	db	0
  1063  00140A  00                 	db	0
  1064  00140B  00                 	db	0
  1065  00140C  00                 	db	0
  1066  00140D  00                 	db	0
  1067  00140E  00                 	db	0
  1068  00140F  00                 	db	0
  1069  001410  00                 	db	0
  1070  001411  00                 	db	0
  1071  001412  00                 	db	0
  1072  001413  00                 	db	0
  1073  001414  00                 	db	0
  1074  001415  00                 	db	0
  1075  001416  00                 	db	0
  1076  001417  00                 	db	0
  1077  001418  00                 	db	0
  1078  001419  00                 	db	0
  1079  00141A  00                 	db	0
  1080  00141B  00                 	db	0
  1081  00141C  00                 	db	0
  1082  00141D  00                 	db	0
  1083  00141E  00                 	db	0
  1084  00141F  00                 	db	0
  1085  001420  00                 	db	0
  1086  001421  00                 	db	0
  1087  001422  00                 	db	0
  1088  001423  00                 	db	0
  1089  001424  00                 	db	0
  1090  001425  00                 	db	0
  1091  001426  00                 	db	0
  1092  001427  00                 	db	0
  1093  001428  00                 	db	0
  1094  001429  00                 	db	0
  1095  00142A  00                 	db	0
  1096  00142B  00                 	db	0
  1097  00142C  00                 	db	0
  1098  00142D  00                 	db	0
  1099  00142E  00                 	db	0
  1100  00142F  00                 	db	0
  1101  001430  00                 	db	0
  1102  001431  00                 	db	0
  1103  001432  00                 	db	0
  1104  001433  00                 	db	0
  1105  001434  00                 	db	0
  1106  001435  00                 	db	0
  1107  001436  00                 	db	0
  1108  001437  00                 	db	0
  1109  001438  00                 	db	0
  1110  001439  00                 	db	0
  1111  00143A  00                 	db	0
  1112  00143B  00                 	db	0
  1113  00143C  00                 	db	0
  1114  00143D  00                 	db	0
  1115  00143E  00                 	db	0
  1116  00143F  00                 	db	0
  1117  001440  00                 	db	0
  1118  001441  00                 	db	0
  1119  001442  00                 	db	0
  1120  001443  00                 	db	0
  1121  001444  00                 	db	0
  1122  001445  00                 	db	0
  1123  001446  00                 	db	0
  1124  001447  00                 	db	0
  1125  001448  00                 	db	0
  1126  001449  00                 	db	0
  1127  00144A  00                 	db	0
  1128  00144B  00                 	db	0
  1129  00144C  00                 	db	0
  1130  00144D  00                 	db	0
  1131  00144E  00                 	db	0
  1132  00144F  00                 	db	0
  1133  001450  00                 	db	0
  1134  001451  00                 	db	0
  1135  001452  00                 	db	0
  1136  001453  00                 	db	0
  1137  001454  00                 	db	0
  1138  001455  00                 	db	0
  1139  001456  00                 	db	0
  1140  001457  00                 	db	0
  1141  001458  00                 	db	0
  1142  001459  00                 	db	0
  1143  00145A  00                 	db	0
  1144  00145B  00                 	db	0
  1145  00145C  00                 	db	0
  1146  00145D  00                 	db	0
  1147  00145E  00                 	db	0
  1148  00145F  00                 	db	0
  1149  001460  00                 	db	0
  1150  001461  00                 	db	0
  1151  001462  00                 	db	0
  1152  001463  00                 	db	0
  1153  001464  00                 	db	0
  1154  001465  00                 	db	0
  1155  001466  00                 	db	0
  1156  001467  00                 	db	0
  1157  001468  00                 	db	0
  1158  001469  00                 	db	0
  1159  00146A  00                 	db	0
  1160  00146B  00                 	db	0
  1161  00146C  00                 	db	0
  1162  00146D  00                 	db	0
  1163  00146E  00                 	db	0
  1164  00146F  00                 	db	0
  1165  001470  00                 	db	0
  1166  001471  00                 	db	0
  1167  001472  00                 	db	0
  1168  001473  00                 	db	0
  1169  001474  00                 	db	0
  1170  001475  00                 	db	0
  1171  001476  00                 	db	0
  1172  001477  00                 	db	0
  1173  001478  00                 	db	0
  1174  001479  00                 	db	0
  1175  00147A  00                 	db	0
  1176  00147B  00                 	db	0
  1177  00147C  00                 	db	0
  1178  00147D  00                 	db	0
  1179  00147E  00                 	db	0
  1180  00147F  00                 	db	0
  1181  001480  00                 	db	0
  1182  001481  00                 	db	0
  1183  001482  00                 	db	0
  1184  001483  00                 	db	0
  1185  001484  00                 	db	0
  1186  001485  00                 	db	0
  1187  001486  00                 	db	0
  1188  001487  00                 	db	0
  1189  001488  00                 	db	0
  1190  001489  00                 	db	0
  1191  00148A  00                 	db	0
  1192  00148B  00                 	db	0
  1193  00148C  00                 	db	0
  1194  00148D  00                 	db	0
  1195  00148E  00                 	db	0
  1196  00148F  00                 	db	0
  1197  001490  00                 	db	0
  1198  001491  00                 	db	0
  1199  001492  00                 	db	0
  1200  001493  00                 	db	0
  1201  001494  00                 	db	0
  1202  001495  00                 	db	0
  1203  001496  00                 	db	0
  1204  001497  00                 	db	0
  1205  001498  00                 	db	0
  1206  001499  00                 	db	0
  1207  00149A  00                 	db	0
  1208  00149B  00                 	db	0
  1209  00149C  00                 	db	0
  1210  00149D  00                 	db	0
  1211  00149E  00                 	db	0
  1212  00149F  00                 	db	0
  1213  0014A0  00                 	db	0
  1214  0014A1  00                 	db	0
  1215  0014A2  00                 	db	0
  1216  0014A3  00                 	db	0
  1217  0014A4  00                 	db	0
  1218  0014A5  00                 	db	0
  1219  0014A6  00                 	db	0
  1220  0014A7  00                 	db	0
  1221  0014A8  00                 	db	0
  1222  0014A9  00                 	db	0
  1223  0014AA  00                 	db	0
  1224  0014AB  00                 	db	0
  1225  0014AC  00                 	db	0
  1226  0014AD  00                 	db	0
  1227  0014AE  00                 	db	0
  1228  0014AF  00                 	db	0
  1229  0014B0  00                 	db	0
  1230  0014B1  00                 	db	0
  1231  0014B2  00                 	db	0
  1232  0014B3  00                 	db	0
  1233  0014B4  00                 	db	0
  1234  0014B5  00                 	db	0
  1235  0014B6  00                 	db	0
  1236  0014B7  00                 	db	0
  1237  0014B8  00                 	db	0
  1238  0014B9  00                 	db	0
  1239  0014BA  00                 	db	0
  1240  0014BB  00                 	db	0
  1241  0014BC  00                 	db	0
  1242  0014BD  00                 	db	0
  1243  0014BE  00                 	db	0
  1244  0014BF  00                 	db	0
  1245  0014C0  00                 	db	0
  1246  0014C1  00                 	db	0
  1247  0014C2  00                 	db	0
  1248  0014C3  00                 	db	0
  1249  0014C4  00                 	db	0
  1250  0014C5  00                 	db	0
  1251  0014C6  00                 	db	0
  1252  0014C7  00                 	db	0
  1253  0014C8  00                 	db	0
  1254  0014C9  00                 	db	0
  1255  0014CA  00                 	db	0
  1256  0014CB  00                 	db	0
  1257  0014CC  00                 	db	0
  1258  0014CD  00                 	db	0
  1259  0014CE  00                 	db	0
  1260  0014CF  00                 	db	0
  1261  0014D0  00                 	db	0
  1262  0014D1  00                 	db	0
  1263  0014D2  00                 	db	0
  1264  0014D3  00                 	db	0
  1265  0014D4  00                 	db	0
  1266  0014D5  00                 	db	0
  1267  0014D6  00                 	db	0
  1268  0014D7  00                 	db	0
  1269  0014D8  00                 	db	0
  1270  0014D9  00                 	db	0
  1271  0014DA  00                 	db	0
  1272  0014DB  00                 	db	0
  1273  0014DC  00                 	db	0
  1274  0014DD  00                 	db	0
  1275  0014DE  00                 	db	0
  1276  0014DF  00                 	db	0
  1277  0014E0  00                 	db	0
  1278  0014E1  00                 	db	0
  1279  0014E2  00                 	db	0
  1280  0014E3  00                 	db	0
  1281  0014E4  00                 	db	0
  1282  0014E5  00                 	db	0
  1283  0014E6  00                 	db	0
  1284  0014E7  00                 	db	0
  1285  0014E8  00                 	db	0
  1286  0014E9  00                 	db	0
  1287  0014EA  00                 	db	0
  1288  0014EB  00                 	db	0
  1289  0014EC  00                 	db	0
  1290  0014ED  00                 	db	0
  1291  0014EE  00                 	db	0
  1292  0014EF  00                 	db	0
  1293  0014F0  00                 	db	0
  1294  0014F1  00                 	db	0
  1295  0014F2  00                 	db	0
  1296  0014F3  00                 	db	0
  1297  0014F4  00                 	db	0
  1298  0014F5  00                 	db	0
  1299  0014F6  00                 	db	0
  1300  0014F7  00                 	db	0
  1301  0014F8  00                 	db	0
  1302  0014F9  00                 	db	0
  1303  0014FA  00                 	db	0
  1304  0014FB  00                 	db	0
  1305  0014FC  00                 	db	0
  1306  0014FD  00                 	db	0
  1307  0014FE  00                 	db	0
  1308  0014FF  00                 	db	0
  1309  001500  00                 	db	0
  1310  001501  00                 	db	0
  1311  001502  00                 	db	0
  1312  001503  00                 	db	0
  1313  001504  00                 	db	0
  1314  001505  00                 	db	0
  1315  001506  00                 	db	0
  1316  001507  00                 	db	0
  1317  001508  00                 	db	0
  1318  001509  00                 	db	0
  1319  00150A  00                 	db	0
  1320  00150B  00                 	db	0
  1321  00150C  00                 	db	0
  1322  00150D  00                 	db	0
  1323  00150E  00                 	db	0
  1324  00150F  00                 	db	0
  1325  001510  00                 	db	0
  1326  001511  00                 	db	0
  1327  001512  00                 	db	0
  1328  001513  00                 	db	0
  1329  001514  00                 	db	0
  1330  001515  00                 	db	0
  1331  001516  00                 	db	0
  1332  001517  00                 	db	0
  1333  001518  00                 	db	0
  1334  001519  00                 	db	0
  1335  00151A  00                 	db	0
  1336  00151B  00                 	db	0
  1337  00151C  00                 	db	0
  1338  00151D  00                 	db	0
  1339  00151E  00                 	db	0
  1340  00151F  00                 	db	0
  1341  001520  00                 	db	0
  1342  001521  00                 	db	0
  1343  001522  00                 	db	0
  1344  001523  00                 	db	0
  1345  001524  00                 	db	0
  1346  001525  00                 	db	0
  1347  001526  00                 	db	0
  1348  001527  00                 	db	0
  1349  001528  00                 	db	0
  1350  001529  00                 	db	0
  1351  00152A  00                 	db	0
  1352  00152B  00                 	db	0
  1353  00152C  00                 	db	0
  1354  00152D  00                 	db	0
  1355  00152E  00                 	db	0
  1356  00152F  00                 	db	0
  1357  001530  00                 	db	0
  1358  001531  00                 	db	0
  1359  001532  00                 	db	0
  1360  001533  00                 	db	0
  1361  001534  00                 	db	0
  1362  001535  00                 	db	0
  1363  001536  00                 	db	0
  1364  001537  00                 	db	0
  1365  001538  00                 	db	0
  1366  001539  00                 	db	0
  1367  00153A  00                 	db	0
  1368  00153B  00                 	db	0
  1369  00153C  00                 	db	0
  1370  00153D  00                 	db	0
  1371  00153E  00                 	db	0
  1372  00153F  00                 	db	0
  1373  001540  00                 	db	0
  1374  001541  00                 	db	0
  1375  001542  00                 	db	0
  1376  001543  00                 	db	0
  1377  001544  00                 	db	0
  1378  001545  00                 	db	0
  1379  001546  00                 	db	0
  1380  001547  00                 	db	0
  1381  001548  00                 	db	0
  1382  001549  00                 	db	0
  1383  00154A  00                 	db	0
  1384  00154B  00                 	db	0
  1385  00154C  00                 	db	0
  1386  00154D  00                 	db	0
  1387  00154E  00                 	db	0
  1388  00154F  00                 	db	0
  1389  001550  00                 	db	0
  1390  001551  00                 	db	0
  1391  001552  00                 	db	0
  1392  001553  00                 	db	0
  1393  001554  00                 	db	0
  1394  001555  00                 	db	0
  1395  001556  00                 	db	0
  1396  001557  00                 	db	0
  1397  001558  00                 	db	0
  1398  001559  00                 	db	0
  1399  00155A  00                 	db	0
  1400  00155B  00                 	db	0
  1401  00155C  00                 	db	0
  1402  00155D  00                 	db	0
  1403  00155E  00                 	db	0
  1404  00155F  00                 	db	0
  1405  001560  00                 	db	0
  1406  001561  00                 	db	0
  1407  001562  00                 	db	0
  1408  001563  00                 	db	0
  1409  001564  00                 	db	0
  1410  001565  00                 	db	0
  1411  001566  00                 	db	0
  1412  001567  00                 	db	0
  1413  001568  00                 	db	0
  1414  001569  00                 	db	0
  1415  00156A  00                 	db	0
  1416  00156B  00                 	db	0
  1417  00156C  00                 	db	0
  1418  00156D  00                 	db	0
  1419  00156E  00                 	db	0
  1420  00156F  00                 	db	0
  1421  001570  00                 	db	0
  1422  001571  00                 	db	0
  1423  001572  00                 	db	0
  1424  001573  00                 	db	0
  1425  001574  00                 	db	0
  1426  001575  00                 	db	0
  1427  001576  00                 	db	0
  1428  001577  00                 	db	0
  1429  001578  00                 	db	0
  1430  001579  00                 	db	0
  1431  00157A  00                 	db	0
  1432  00157B  00                 	db	0
  1433  00157C  00                 	db	0
  1434  00157D  00                 	db	0
  1435  00157E  00                 	db	0
  1436  00157F  00                 	db	0
  1437  001580  00                 	db	0
  1438  001581  00                 	db	0
  1439  001582  00                 	db	0
  1440  001583  00                 	db	0
  1441  001584  00                 	db	0
  1442  001585  00                 	db	0
  1443  001586  00                 	db	0
  1444  001587  00                 	db	0
  1445  001588  00                 	db	0
  1446  001589  00                 	db	0
  1447  00158A  00                 	db	0
  1448  00158B  00                 	db	0
  1449  00158C  00                 	db	0
  1450  00158D  00                 	db	0
  1451  00158E  00                 	db	0
  1452  00158F  00                 	db	0
  1453  001590  00                 	db	0
  1454  001591  00                 	db	0
  1455  001592  00                 	db	0
  1456  001593  00                 	db	0
  1457  001594  00                 	db	0
  1458  001595  00                 	db	0
  1459  001596  00                 	db	0
  1460  001597  00                 	db	0
  1461  001598  00                 	db	0
  1462  001599  00                 	db	0
  1463  00159A  00                 	db	0
  1464  00159B  00                 	db	0
  1465  00159C  00                 	db	0
  1466  00159D  00                 	db	0
  1467  00159E  00                 	db	0
  1468  00159F  00                 	db	0
  1469  0015A0  00                 	db	0
  1470  0015A1  00                 	db	0
  1471  0015A2  00                 	db	0
  1472  0015A3  00                 	db	0
  1473  0015A4  00                 	db	0
  1474  0015A5  00                 	db	0
  1475  0015A6  00                 	db	0
  1476  0015A7  00                 	db	0
  1477  0015A8  00                 	db	0
  1478  0015A9  00                 	db	0
  1479  0015AA  00                 	db	0
  1480  0015AB  00                 	db	0
  1481  0015AC  00                 	db	0
  1482  0015AD  00                 	db	0
  1483  0015AE  00                 	db	0
  1484  0015AF  00                 	db	0
  1485  0015B0  00                 	db	0
  1486  0015B1  00                 	db	0
  1487  0015B2  00                 	db	0
  1488  0015B3  00                 	db	0
  1489  0015B4  00                 	db	0
  1490  0015B5  00                 	db	0
  1491  0015B6  00                 	db	0
  1492  0015B7  00                 	db	0
  1493  0015B8  00                 	db	0
  1494  0015B9  00                 	db	0
  1495  0015BA  00                 	db	0
  1496  0015BB  00                 	db	0
  1497  0015BC  00                 	db	0
  1498  0015BD  00                 	db	0
  1499  0015BE  00                 	db	0
  1500  0015BF  00                 	db	0
  1501  0015C0  00                 	db	0
  1502  0015C1  00                 	db	0
  1503  0015C2  00                 	db	0
  1504  0015C3  00                 	db	0
  1505  0015C4  00                 	db	0
  1506  0015C5  00                 	db	0
  1507  0015C6  00                 	db	0
  1508  0015C7  00                 	db	0
  1509  0015C8  00                 	db	0
  1510  0015C9  00                 	db	0
  1511  0015CA  00                 	db	0
  1512  0015CB  00                 	db	0
  1513  0015CC  00                 	db	0
  1514  0015CD  00                 	db	0
  1515  0015CE  00                 	db	0
  1516  0015CF  00                 	db	0
  1517  0015D0  00                 	db	0
  1518  0015D1  00                 	db	0
  1519  0015D2  00                 	db	0
  1520  0015D3  00                 	db	0
  1521  0015D4  00                 	db	0
  1522  0015D5  00                 	db	0
  1523  0015D6  00                 	db	0
  1524  0015D7  00                 	db	0
  1525  0015D8  00                 	db	0
  1526  0015D9  00                 	db	0
  1527  0015DA  00                 	db	0
  1528  0015DB  00                 	db	0
  1529  0015DC  00                 	db	0
  1530  0015DD  00                 	db	0
  1531  0015DE  00                 	db	0
  1532  0015DF  00                 	db	0
  1533  0015E0  00                 	db	0
  1534  0015E1  00                 	db	0
  1535  0015E2  00                 	db	0
  1536  0015E3  00                 	db	0
  1537  0015E4  00                 	db	0
  1538  0015E5  00                 	db	0
  1539  0015E6  00                 	db	0
  1540  0015E7  00                 	db	0
  1541  0015E8  00                 	db	0
  1542  0015E9  00                 	db	0
  1543  0015EA  00                 	db	0
  1544  0015EB  00                 	db	0
  1545  0015EC  00                 	db	0
  1546  0015ED  00                 	db	0
  1547  0015EE  00                 	db	0
  1548  0015EF  00                 	db	0
  1549  0015F0  00                 	db	0
  1550  0015F1  00                 	db	0
  1551  0015F2  00                 	db	0
  1552  0015F3  00                 	db	0
  1553  0015F4  00                 	db	0
  1554  0015F5  00                 	db	0
  1555  0015F6  00                 	db	0
  1556  0015F7  00                 	db	0
  1557  0015F8  00                 	db	0
  1558  0015F9  00                 	db	0
  1559  0015FA  00                 	db	0
  1560  0015FB  00                 	db	0
  1561  0015FC  00                 	db	0
  1562  0015FD  00                 	db	0
  1563  0015FE  00                 	db	0
  1564  0015FF  00                 	db	0
  1565  001600  00                 	db	0
  1566  001601  00                 	db	0
  1567  001602  00                 	db	0
  1568  001603  00                 	db	0
  1569  001604  00                 	db	0
  1570  001605  00                 	db	0
  1571  001606  00                 	db	0
  1572  001607  00                 	db	0
  1573  001608  00                 	db	0
  1574  001609  00                 	db	0
  1575  00160A  00                 	db	0
  1576  00160B  00                 	db	0
  1577  00160C  00                 	db	0
  1578  00160D  00                 	db	0
  1579  00160E  00                 	db	0
  1580  00160F  00                 	db	0
  1581  001610  00                 	db	0
  1582  001611  00                 	db	0
  1583  001612  00                 	db	0
  1584  001613  00                 	db	0
  1585  001614  00                 	db	0
  1586  001615  00                 	db	0
  1587  001616  00                 	db	0
  1588  001617  00                 	db	0
  1589  001618  00                 	db	0
  1590  001619  00                 	db	0
  1591  00161A  00                 	db	0
  1592  00161B  00                 	db	0
  1593  00161C  00                 	db	0
  1594  00161D  00                 	db	0
  1595  00161E  00                 	db	0
  1596  00161F  00                 	db	0
  1597  001620  00                 	db	0
  1598  001621  00                 	db	0
  1599  001622  00                 	db	0
  1600  001623  00                 	db	0
  1601  001624  00                 	db	0
  1602  001625  00                 	db	0
  1603  001626  00                 	db	0
  1604  001627  00                 	db	0
  1605  001628  00                 	db	0
  1606  001629  00                 	db	0
  1607  00162A  00                 	db	0
  1608  00162B  00                 	db	0
  1609  00162C  00                 	db	0
  1610  00162D  00                 	db	0
  1611  00162E  00                 	db	0
  1612  00162F  00                 	db	0
  1613  001630  00                 	db	0
  1614  001631  00                 	db	0
  1615  001632  00                 	db	0
  1616  001633  00                 	db	0
  1617  001634  00                 	db	0
  1618  001635  00                 	db	0
  1619  001636  00                 	db	0
  1620  001637  00                 	db	0
  1621  001638  00                 	db	0
  1622  001639  00                 	db	0
  1623  00163A  00                 	db	0
  1624  00163B  00                 	db	0
  1625  00163C  00                 	db	0
  1626  00163D  00                 	db	0
  1627  00163E  00                 	db	0
  1628  00163F  00                 	db	0
  1629  001640  00                 	db	0
  1630  001641  00                 	db	0
  1631  001642  00                 	db	0
  1632  001643  00                 	db	0
  1633  001644  00                 	db	0
  1634  001645  00                 	db	0
  1635  001646  00                 	db	0
  1636  001647  00                 	db	0
  1637  001648  00                 	db	0
  1638  001649  00                 	db	0
  1639  00164A  00                 	db	0
  1640  00164B  00                 	db	0
  1641  00164C  00                 	db	0
  1642  00164D  00                 	db	0
  1643  00164E  00                 	db	0
  1644  00164F  00                 	db	0
  1645  001650  00                 	db	0
  1646  001651  00                 	db	0
  1647  001652  00                 	db	0
  1648  001653  00                 	db	0
  1649  001654  00                 	db	0
  1650  001655  00                 	db	0
  1651  001656  00                 	db	0
  1652  001657  00                 	db	0
  1653  001658  00                 	db	0
  1654  001659  00                 	db	0
  1655  00165A  00                 	db	0
  1656  00165B  00                 	db	0
  1657  00165C  00                 	db	0
  1658  00165D  00                 	db	0
  1659  00165E  00                 	db	0
  1660  00165F  00                 	db	0
  1661  001660  00                 	db	0
  1662  001661  00                 	db	0
  1663  001662  00                 	db	0
  1664  001663  00                 	db	0
  1665  001664  00                 	db	0
  1666  001665  00                 	db	0
  1667  001666  00                 	db	0
  1668  001667  00                 	db	0
  1669  001668  00                 	db	0
  1670  001669  00                 	db	0
  1671  00166A  00                 	db	0
  1672  00166B  00                 	db	0
  1673  00166C  00                 	db	0
  1674  00166D  00                 	db	0
  1675  00166E  00                 	db	0
  1676  00166F  00                 	db	0
  1677  001670  00                 	db	0
  1678  001671  00                 	db	0
  1679  001672  00                 	db	0
  1680  001673  00                 	db	0
  1681  001674  00                 	db	0
  1682  001675  00                 	db	0
  1683  001676  00                 	db	0
  1684  001677  00                 	db	0
  1685  001678  00                 	db	0
  1686  001679  00                 	db	0
  1687  00167A  00                 	db	0
  1688  00167B  00                 	db	0
  1689  00167C  00                 	db	0
  1690  00167D  00                 	db	0
  1691  00167E  00                 	db	0
  1692  00167F  00                 	db	0
  1693  001680  00                 	db	0
  1694  001681  00                 	db	0
  1695  001682  00                 	db	0
  1696  001683  00                 	db	0
  1697  001684  00                 	db	0
  1698  001685  00                 	db	0
  1699  001686  00                 	db	0
  1700  001687  00                 	db	0
  1701  001688  00                 	db	0
  1702  001689  00                 	db	0
  1703  00168A  00                 	db	0
  1704  00168B  00                 	db	0
  1705  00168C  00                 	db	0
  1706  00168D  00                 	db	0
  1707  00168E  00                 	db	0
  1708  00168F  00                 	db	0
  1709  001690  00                 	db	0
  1710  001691  00                 	db	0
  1711  001692  00                 	db	0
  1712  001693  00                 	db	0
  1713  001694  00                 	db	0
  1714  001695  00                 	db	0
  1715  001696  00                 	db	0
  1716  001697  00                 	db	0
  1717  001698  00                 	db	0
  1718  001699  00                 	db	0
  1719  00169A  00                 	db	0
  1720  00169B  00                 	db	0
  1721  00169C  00                 	db	0
  1722  00169D  00                 	db	0
  1723  00169E  00                 	db	0
  1724  00169F  00                 	db	0
  1725  0016A0  00                 	db	0
  1726  0016A1  00                 	db	0
  1727  0016A2  00                 	db	0
  1728  0016A3  00                 	db	0
  1729  0016A4  00                 	db	0
  1730  0016A5  00                 	db	0
  1731  0016A6  00                 	db	0
  1732  0016A7  00                 	db	0
  1733  0016A8  00                 	db	0
  1734  0016A9  00                 	db	0
  1735  0016AA  00                 	db	0
  1736  0016AB  00                 	db	0
  1737  0016AC  00                 	db	0
  1738  0016AD  00                 	db	0
  1739  0016AE  00                 	db	0
  1740  0016AF  00                 	db	0
  1741  0016B0  00                 	db	0
  1742  0016B1  00                 	db	0
  1743  0016B2  00                 	db	0
  1744  0016B3  00                 	db	0
  1745  0016B4  00                 	db	0
  1746  0016B5  00                 	db	0
  1747  0016B6  00                 	db	0
  1748  0016B7  00                 	db	0
  1749  0016B8  00                 	db	0
  1750  0016B9  00                 	db	0
  1751  0016BA  00                 	db	0
  1752  0016BB  00                 	db	0
  1753  0016BC  00                 	db	0
  1754  0016BD  00                 	db	0
  1755  0016BE  00                 	db	0
  1756  0016BF  00                 	db	0
  1757  0016C0  00                 	db	0
  1758  0016C1  00                 	db	0
  1759  0016C2  00                 	db	0
  1760  0016C3  00                 	db	0
  1761  0016C4  00                 	db	0
  1762  0016C5  00                 	db	0
  1763  0016C6  00                 	db	0
  1764  0016C7  00                 	db	0
  1765  0016C8  00                 	db	0
  1766  0016C9  00                 	db	0
  1767  0016CA  00                 	db	0
  1768  0016CB  00                 	db	0
  1769  0016CC  00                 	db	0
  1770  0016CD  00                 	db	0
  1771  0016CE  00                 	db	0
  1772  0016CF  00                 	db	0
  1773  0016D0  00                 	db	0
  1774  0016D1  00                 	db	0
  1775  0016D2  00                 	db	0
  1776  0016D3  00                 	db	0
  1777  0016D4  00                 	db	0
  1778  0016D5  00                 	db	0
  1779  0016D6  00                 	db	0
  1780  0016D7  00                 	db	0
  1781  0016D8  00                 	db	0
  1782  0016D9  00                 	db	0
  1783  0016DA  00                 	db	0
  1784  0016DB  00                 	db	0
  1785  0016DC  00                 	db	0
  1786  0016DD  00                 	db	0
  1787  0016DE  00                 	db	0
  1788  0016DF  00                 	db	0
  1789  0016E0  00                 	db	0
  1790  0016E1  00                 	db	0
  1791  0016E2  00                 	db	0
  1792  0016E3  00                 	db	0
  1793  0016E4  00                 	db	0
  1794  0016E5  00                 	db	0
  1795  0016E6  00                 	db	0
  1796  0016E7  00                 	db	0
  1797  0016E8  00                 	db	0
  1798  0016E9  00                 	db	0
  1799  0016EA  00                 	db	0
  1800  0016EB  00                 	db	0
  1801  0016EC  00                 	db	0
  1802  0016ED  00                 	db	0
  1803  0016EE  00                 	db	0
  1804  0016EF  00                 	db	0
  1805  0016F0  00                 	db	0
  1806  0016F1  00                 	db	0
  1807  0016F2  00                 	db	0
  1808  0016F3  00                 	db	0
  1809  0016F4  00                 	db	0
  1810  0016F5  00                 	db	0
  1811  0016F6  00                 	db	0
  1812  0016F7  00                 	db	0
  1813  0016F8  00                 	db	0
  1814  0016F9  00                 	db	0
  1815  0016FA  00                 	db	0
  1816  0016FB  00                 	db	0
  1817  0016FC  00                 	db	0
  1818  0016FD  00                 	db	0
  1819  0016FE  00                 	db	0
  1820  0016FF  00                 	db	0
  1821  001700  00                 	db	0
  1822  001701  00                 	db	0
  1823  001702  00                 	db	0
  1824  001703  00                 	db	0
  1825  001704  00                 	db	0
  1826  001705  00                 	db	0
  1827  001706  00                 	db	0
  1828  001707  00                 	db	0
  1829  001708  00                 	db	0
  1830  001709  00                 	db	0
  1831  00170A  00                 	db	0
  1832  00170B  00                 	db	0
  1833  00170C  00                 	db	0
  1834  00170D  00                 	db	0
  1835  00170E  00                 	db	0
  1836  00170F  00                 	db	0
  1837  001710  00                 	db	0
  1838  001711  00                 	db	0
  1839  001712  00                 	db	0
  1840  001713  00                 	db	0
  1841  001714  00                 	db	0
  1842  001715  00                 	db	0
  1843  001716  00                 	db	0
  1844  001717  00                 	db	0
  1845  001718  00                 	db	0
  1846  001719  00                 	db	0
  1847  00171A  00                 	db	0
  1848  00171B  00                 	db	0
  1849  00171C  00                 	db	0
  1850  00171D  00                 	db	0
  1851  00171E  00                 	db	0
  1852  00171F  00                 	db	0
  1853  001720  00                 	db	0
  1854  001721  00                 	db	0
  1855  001722  00                 	db	0
  1856  001723  00                 	db	0
  1857  001724  00                 	db	0
  1858  001725  00                 	db	0
  1859  001726  00                 	db	0
  1860  001727  00                 	db	0
  1861  001728  00                 	db	0
  1862  001729  00                 	db	0
  1863  00172A  00                 	db	0
  1864  00172B  00                 	db	0
  1865  00172C  00                 	db	0
  1866  00172D  00                 	db	0
  1867  00172E  00                 	db	0
  1868  00172F  00                 	db	0
  1869  001730  00                 	db	0
  1870  001731  00                 	db	0
  1871  001732  00                 	db	0
  1872  001733  00                 	db	0
  1873  001734  00                 	db	0
  1874  001735  00                 	db	0
  1875  001736  00                 	db	0
  1876  001737  00                 	db	0
  1877  001738  00                 	db	0
  1878  001739  00                 	db	0
  1879  00173A  00                 	db	0
  1880  00173B  00                 	db	0
  1881  00173C  00                 	db	0
  1882  00173D  00                 	db	0
  1883  00173E  00                 	db	0
  1884  00173F  00                 	db	0
  1885  001740  00                 	db	0
  1886  001741  00                 	db	0
  1887  001742  00                 	db	0
  1888  001743  00                 	db	0
  1889  001744  00                 	db	0
  1890  001745  00                 	db	0
  1891  001746  00                 	db	0
  1892  001747  00                 	db	0
  1893  001748  00                 	db	0
  1894  001749  00                 	db	0
  1895  00174A  00                 	db	0
  1896  00174B  00                 	db	0
  1897  00174C  00                 	db	0
  1898  00174D  00                 	db	0
  1899  00174E  00                 	db	0
  1900  00174F  00                 	db	0
  1901  001750  00                 	db	0
  1902  001751  00                 	db	0
  1903  001752  00                 	db	0
  1904  001753  00                 	db	0
  1905  001754  00                 	db	0
  1906  001755  00                 	db	0
  1907  001756  00                 	db	0
  1908  001757  00                 	db	0
  1909  001758  00                 	db	0
  1910  001759  00                 	db	0
  1911  00175A  00                 	db	0
  1912  00175B  00                 	db	0
  1913  00175C  00                 	db	0
  1914  00175D  00                 	db	0
  1915  00175E  00                 	db	0
  1916  00175F  00                 	db	0
  1917  001760  00                 	db	0
  1918  001761  00                 	db	0
  1919  001762  00                 	db	0
  1920  001763  00                 	db	0
  1921  001764  00                 	db	0
  1922  001765  00                 	db	0
  1923  001766  00                 	db	0
  1924  001767  00                 	db	0
  1925  001768  00                 	db	0
  1926  001769  00                 	db	0
  1927  00176A  00                 	db	0
  1928  00176B  00                 	db	0
  1929  00176C  00                 	db	0
  1930  00176D  00                 	db	0
  1931  00176E  00                 	db	0
  1932  00176F  00                 	db	0
  1933  001770  00                 	db	0
  1934  001771  00                 	db	0
  1935  001772  00                 	db	0
  1936  001773  00                 	db	0
  1937  001774  00                 	db	0
  1938  001775  00                 	db	0
  1939  001776  00                 	db	0
  1940  001777  00                 	db	0
  1941  001778  00                 	db	0
  1942  001779  00                 	db	0
  1943  00177A  00                 	db	0
  1944  00177B  00                 	db	0
  1945  00177C  00                 	db	0
  1946  00177D  00                 	db	0
  1947  00177E  00                 	db	0
  1948  00177F  00                 	db	0
  1949  001780  00                 	db	0
  1950  001781  00                 	db	0
  1951  001782  00                 	db	0
  1952  001783  00                 	db	0
  1953  001784  00                 	db	0
  1954  001785  00                 	db	0
  1955  001786  00                 	db	0
  1956  001787  00                 	db	0
  1957  001788  00                 	db	0
  1958  001789  00                 	db	0
  1959  00178A  00                 	db	0
  1960  00178B  00                 	db	0
  1961  00178C  00                 	db	0
  1962  00178D  00                 	db	0
  1963  00178E  00                 	db	0
  1964  00178F  00                 	db	0
  1965  001790  00                 	db	0
  1966  001791  00                 	db	0
  1967  001792  00                 	db	0
  1968  001793  00                 	db	0
  1969  001794  00                 	db	0
  1970  001795  00                 	db	0
  1971  001796  00                 	db	0
  1972  001797  00                 	db	0
  1973  001798  00                 	db	0
  1974  001799  00                 	db	0
  1975  00179A  00                 	db	0
  1976  00179B  00                 	db	0
  1977  00179C  00                 	db	0
  1978  00179D  00                 	db	0
  1979  00179E  00                 	db	0
  1980  00179F  00                 	db	0
  1981  0017A0  00                 	db	0
  1982  0017A1  00                 	db	0
  1983  0017A2  00                 	db	0
  1984  0017A3  00                 	db	0
  1985  0017A4  00                 	db	0
  1986  0017A5  00                 	db	0
  1987  0017A6  00                 	db	0
  1988  0017A7  00                 	db	0
  1989  0017A8  00                 	db	0
  1990  0017A9  00                 	db	0
  1991  0017AA  00                 	db	0
  1992  0017AB  00                 	db	0
  1993  0017AC  00                 	db	0
  1994  0017AD  00                 	db	0
  1995  0017AE  00                 	db	0
  1996  0017AF  00                 	db	0
  1997  0017B0  00                 	db	0
  1998  0017B1  00                 	db	0
  1999  0017B2  00                 	db	0
  2000  0017B3  00                 	db	0
  2001  0017B4  00                 	db	0
  2002  0017B5  00                 	db	0
  2003  0017B6  00                 	db	0
  2004  0017B7  00                 	db	0
  2005  0017B8  00                 	db	0
  2006  0017B9  00                 	db	0
  2007  0017BA  00                 	db	0
  2008  0017BB  00                 	db	0
  2009  0017BC  00                 	db	0
  2010  0017BD  00                 	db	0
  2011  0017BE  00                 	db	0
  2012  0017BF  00                 	db	0
  2013  0017C0  00                 	db	0
  2014  0017C1  00                 	db	0
  2015  0017C2  00                 	db	0
  2016  0017C3  00                 	db	0
  2017  0017C4  00                 	db	0
  2018  0017C5  00                 	db	0
  2019  0017C6  00                 	db	0
  2020  0017C7  00                 	db	0
  2021  0017C8  00                 	db	0
  2022  0017C9  00                 	db	0
  2023  0017CA  00                 	db	0
  2024  0017CB  00                 	db	0
  2025  0017CC  00                 	db	0
  2026  0017CD  00                 	db	0
  2027  0017CE  00                 	db	0
  2028  0017CF  00                 	db	0
  2029  0017D0  00                 	db	0
  2030  0017D1  00                 	db	0
  2031  0017D2  00                 	db	0
  2032  0017D3  00                 	db	0
  2033  0017D4  00                 	db	0
  2034  0017D5  00                 	db	0
  2035  0017D6  00                 	db	0
  2036  0017D7  00                 	db	0
  2037  0017D8  00                 	db	0
  2038  0017D9  00                 	db	0
  2039  0017DA  00                 	db	0
  2040  0017DB  00                 	db	0
  2041  0017DC  00                 	db	0
  2042  0017DD  00                 	db	0
  2043  0017DE  00                 	db	0
  2044  0017DF  00                 	db	0
  2045  0017E0  00                 	db	0
  2046  0017E1  00                 	db	0
  2047  0017E2  00                 	db	0
  2048  0017E3  00                 	db	0
  2049  0017E4  00                 	db	0
  2050  0017E5  00                 	db	0
  2051  0017E6  00                 	db	0
  2052  0017E7  00                 	db	0
  2053  0017E8  00                 	db	0
  2054  0017E9  00                 	db	0
  2055  0017EA  00                 	db	0
  2056  0017EB  00                 	db	0
  2057  0017EC  00                 	db	0
  2058  0017ED  00                 	db	0
  2059  0017EE  00                 	db	0
  2060  0017EF  00                 	db	0
  2061  0017F0  00                 	db	0
  2062  0017F1  00                 	db	0
  2063  0017F2  00                 	db	0
  2064  0017F3  00                 	db	0
  2065  0017F4  00                 	db	0
  2066  0017F5  00                 	db	0
  2067  0017F6  00                 	db	0
  2068  0017F7  00                 	db	0
  2069  0017F8  00                 	db	0
  2070  0017F9  00                 	db	0
  2071  0017FA  00                 	db	0
  2072  0017FB  00                 	db	0
  2073  0017FC  00                 	db	0
  2074  0017FD  00                 	db	0
  2075  0017FE  00                 	db	0
  2076  0017FF  00                 	db	0
  2077  001800  00                 	db	0
  2078  001801  00                 	db	0
  2079  001802  00                 	db	0
  2080  001803  00                 	db	0
  2081  001804  00                 	db	0
  2082  001805  00                 	db	0
  2083                           
  2084                           	psect	smallconst
  2085  001000                     __psmallconst:
  2086                           	opt stack 0
  2087  001000  00                 	db	0
  2088  001001                     _virtualMemory_size:
  2089                           	opt stack 0
  2090  001001  0800               	dw	2048
  2091  001003  0000               	dw	0
  2092  001005                     __end_of_virtualMemory_size:
  2093                           	opt stack 0
  2094  0000                     _ANSELD	set	3899
  2095  0000                     _BAUDCON2bits	set	3952
  2096  0000                     _LATA	set	3977
  2097  0000                     _LATAbits	set	3977
  2098  0000                     _LATC	set	3979
  2099  0000                     _LATCbits	set	3979
  2100  0000                     _LATD	set	3980
  2101  0000                     _LATDbits	set	3980
  2102  0000                     _LATE	set	3981
  2103  0000                     _LATEbits	set	3981
  2104  0000                     _OSCCON2bits	set	4050
  2105  0000                     _OSCCONbits	set	4051
  2106  0000                     _RCREG2	set	3956
  2107  0000                     _RCSTA2bits	set	3953
  2108  0000                     _SPBRG2	set	3957
  2109  0000                     _SPBRGH2	set	3958
  2110  0000                     _TRISA	set	3986
  2111  0000                     _TRISC	set	3988
  2112  0000                     _TRISDbits	set	3989
  2113  0000                     _TRISE	set	3990
  2114  0000                     _TXREG2	set	3955
  2115  0000                     _TXSTA2bits	set	3954
  2116                           
  2117                           ; #config settings
  2118  001005  00                 	db	0	; dummy byte at the end
  2119  0000                     
  2120                           	psect	cinit
  2121  002510                     __pcinit:
  2122                           	opt stack 0
  2123  002510                     start_initialization:
  2124                           	opt stack 0
  2125  002510                     __initialization:
  2126                           	opt stack 0
  2127                           
  2128                           ; Clear objects allocated to BANK1 (256 bytes)
  2129  002510  EE01  F000         	lfsr	0,__pbssBANK1
  2130  002514  EE11 F000          	lfsr	1,256
  2131  002518                     clear_0:
  2132  002518  6AEE               	clrf	postinc0,c
  2133  00251A  50E5               	movf	postdec1,w,c
  2134  00251C  50E1               	movf	fsr1l,w,c
  2135  00251E  E1FC               	bnz	clear_0
  2136  002520  50E2               	movf	fsr1h,w,c
  2137  002522  E1FA               	bnz	clear_0
  2138                           
  2139                           ; Clear objects allocated to COMRAM (14 bytes)
  2140  002524  EE00  F013         	lfsr	0,__pbssCOMRAM
  2141  002528  0E0E               	movlw	14
  2142  00252A                     clear_1:
  2143  00252A  6AEE               	clrf	postinc0,c
  2144  00252C  06E8               	decf	wreg,f,c
  2145  00252E  E1FD               	bnz	clear_1
  2146                           
  2147                           ; Initialize objects allocated to BIGRAM (2048 bytes)
  2148                           ; load TBLPTR registers with __pidataBIGRAM
  2149  002530  0E06               	movlw	low __pidataBIGRAM
  2150  002532  6EF6               	movwf	tblptrl,c
  2151  002534  0E10               	movlw	high __pidataBIGRAM
  2152  002536  6EF7               	movwf	tblptrh,c
  2153  002538  0E00               	movlw	low (__pidataBIGRAM shr (0+16))
  2154  00253A  6EF8               	movwf	tblptru,c
  2155  00253C  EE02  F000         	lfsr	0,__pdataBIGRAM
  2156  002540  EE18 F000          	lfsr	1,2048
  2157  002544                     copy_data0:
  2158  002544  0009               	tblrd		*+
  2159  002546  CFF5 FFEE          	movff	tablat,postinc0
  2160  00254A  50E5               	movf	postdec1,w,c
  2161  00254C  50E1               	movf	fsr1l,w,c
  2162  00254E  E1FA               	bnz	copy_data0
  2163  002550  50E2               	movf	fsr1h,w,c
  2164  002552  E1F8               	bnz	copy_data0
  2165  002554                     end_of_initialization:
  2166                           	opt stack 0
  2167  002554                     __end_of__initialization:
  2168                           	opt stack 0
  2169  002554  0100               	movlb	0
  2170  002556  EF60  F012         	goto	_main	;jump to C main() function
  2171                           tblptru	equ	0xFF8
  2172                           tblptrh	equ	0xFF7
  2173                           tblptrl	equ	0xFF6
  2174                           tablat	equ	0xFF5
  2175                           postinc0	equ	0xFEE
  2176                           wreg	equ	0xFE8
  2177                           postdec1	equ	0xFE5
  2178                           fsr1h	equ	0xFE2
  2179                           fsr1l	equ	0xFE1
  2180                           
  2181                           	psect	bssCOMRAM
  2182  000013                     __pbssCOMRAM:
  2183                           	opt stack 0
  2184  000013                     wait_ms@timel:
  2185                           	opt stack 0
  2186  000013                     	ds	4
  2187  000017                     _regMX:
  2188                           	opt stack 0
  2189  000017                     	ds	2
  2190  000019                     _regPC:
  2191                           	opt stack 0
  2192  000019                     	ds	2
  2193  00001B                     _immData_1:
  2194                           	opt stack 0
  2195  00001B                     	ds	1
  2196  00001C                     _immData_2:
  2197                           	opt stack 0
  2198  00001C                     	ds	1
  2199  00001D                     _regA:
  2200                           	opt stack 0
  2201  00001D                     	ds	1
  2202  00001E                     _regB:
  2203                           	opt stack 0
  2204  00001E                     	ds	1
  2205  00001F                     _regF:
  2206                           	opt stack 0
  2207  00001F                     	ds	1
  2208  000020                     _regSP:
  2209                           	opt stack 0
  2210  000020                     	ds	1
  2211                           tblptru	equ	0xFF8
  2212                           tblptrh	equ	0xFF7
  2213                           tblptrl	equ	0xFF6
  2214                           tablat	equ	0xFF5
  2215                           postinc0	equ	0xFEE
  2216                           wreg	equ	0xFE8
  2217                           postdec1	equ	0xFE5
  2218                           fsr1h	equ	0xFE2
  2219                           fsr1l	equ	0xFE1
  2220                           
  2221                           	psect	bssBANK1
  2222  000100                     __pbssBANK1:
  2223                           	opt stack 0
  2224  000100                     _stack:
  2225                           	opt stack 0
  2226  000100                     	ds	256
  2227                           tblptru	equ	0xFF8
  2228                           tblptrh	equ	0xFF7
  2229                           tblptrl	equ	0xFF6
  2230                           tablat	equ	0xFF5
  2231                           postinc0	equ	0xFEE
  2232                           wreg	equ	0xFE8
  2233                           postdec1	equ	0xFE5
  2234                           fsr1h	equ	0xFE2
  2235                           fsr1l	equ	0xFE1
  2236                           
  2237                           	psect	dataBIGRAM
  2238  000200                     __pdataBIGRAM:
  2239                           	opt stack 0
  2240  000200                     _virtualMemory:
  2241                           	opt stack 0
  2242  000200                     	ds	2048
  2243                           tblptru	equ	0xFF8
  2244                           tblptrh	equ	0xFF7
  2245                           tblptrl	equ	0xFF6
  2246                           tablat	equ	0xFF5
  2247                           postinc0	equ	0xFEE
  2248                           wreg	equ	0xFE8
  2249                           postdec1	equ	0xFE5
  2250                           fsr1h	equ	0xFE2
  2251                           fsr1l	equ	0xFE1
  2252                           
  2253                           	psect	cstackCOMRAM
  2254  000001                     __pcstackCOMRAM:
  2255                           	opt stack 0
  2256  000001                     ??_update_immData:
  2257  000001                     ?_immData_toPointer:
  2258                           	opt stack 0
  2259  000001                     dispSeg@letter:
  2260                           	opt stack 0
  2261  000001                     setMXbits@value:
  2262                           	opt stack 0
  2263  000001                     getFbits@subRegister:
  2264                           	opt stack 0
  2265  000001                     setFbits@value:
  2266                           	opt stack 0
  2267  000001                     getPortData@portNumber:
  2268                           	opt stack 0
  2269  000001                     getMXbits@regMX_temp:
  2270                           	opt stack 0
  2271  000001                     enableSerial@baudRate:
  2272                           	opt stack 0
  2273                           
  2274                           ; 2 bytes @ 0x0
  2275  000001                     	ds	1
  2276  000002                     ??_setFbits:
  2277  000002                     dispSeg@segment:
  2278                           	opt stack 0
  2279  000002                     getFbits@regF_temp:
  2280                           	opt stack 0
  2281  000002                     setMXbits@value_temp:
  2282                           	opt stack 0
  2283                           
  2284                           ; 2 bytes @ 0x1
  2285  000002                     	ds	1
  2286  000003                     ??_enableSerial:
  2287  000003                     getMXbits@subRegister:
  2288                           	opt stack 0
  2289  000003                     setFbits@subRegister:
  2290                           	opt stack 0
  2291  000003                     immData_toPointer@pointer:
  2292                           	opt stack 0
  2293                           
  2294                           ; 2 bytes @ 0x2
  2295  000003                     	ds	1
  2296  000004                     setFbits@regF_temp1:
  2297                           	opt stack 0
  2298  000004                     setMXbits@regMX_temp:
  2299                           	opt stack 0
  2300                           
  2301                           ; 2 bytes @ 0x3
  2302  000004                     	ds	1
  2303  000005                     setFbits@regF_temp2:
  2304                           	opt stack 0
  2305  000005                     setPortData@outputData:
  2306                           	opt stack 0
  2307                           
  2308                           ; 1 bytes @ 0x4
  2309  000005                     	ds	1
  2310  000006                     ??_initializeRegisters:
  2311  000006                     setMXbits@subRegister:
  2312                           	opt stack 0
  2313  000006                     setPortData@portNumber:
  2314                           	opt stack 0
  2315                           
  2316                           ; 1 bytes @ 0x5
  2317  000006                     	ds	1
  2318  000007                     setPortData@outputData_temp16:
  2319                           	opt stack 0
  2320                           
  2321                           ; 2 bytes @ 0x6
  2322  000007                     	ds	2
  2323  000009                     ??_processOpcode:
  2324                           
  2325                           ; 0 bytes @ 0x8
  2326  000009                     	ds	3
  2327  00000C                     processOpcode@regPC_temp:
  2328                           	opt stack 0
  2329                           
  2330                           ; 2 bytes @ 0xB
  2331  00000C                     	ds	2
  2332  00000E                     processOpcode@carriedBit:
  2333                           	opt stack 0
  2334                           
  2335                           ; 1 bytes @ 0xD
  2336  00000E                     	ds	1
  2337  00000F                     processOpcode@regA_temp8:
  2338                           	opt stack 0
  2339                           
  2340                           ; 1 bytes @ 0xE
  2341  00000F                     	ds	1
  2342  000010                     processOpcode@regA_temp16:
  2343                           	opt stack 0
  2344                           
  2345                           ; 2 bytes @ 0xF
  2346  000010                     	ds	2
  2347  000012                     ??_main:
  2348                           
  2349                           ; 0 bytes @ 0x11
  2350  000012                     	ds	1
  2351                           tblptru	equ	0xFF8
  2352                           tblptrh	equ	0xFF7
  2353                           tblptrl	equ	0xFF6
  2354                           tablat	equ	0xFF5
  2355                           postinc0	equ	0xFEE
  2356                           wreg	equ	0xFE8
  2357                           postdec1	equ	0xFE5
  2358                           fsr1h	equ	0xFE2
  2359                           fsr1l	equ	0xFE1
  2360                           
  2361 ;;
  2362 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  2363 ;;
  2364 ;; *************** function _main *****************
  2365 ;; Defined at:
  2366 ;;		line 18 in file "source/main.c"
  2367 ;; Parameters:    Size  Location     Type
  2368 ;;		None
  2369 ;; Auto vars:     Size  Location     Type
  2370 ;;		None
  2371 ;; Return value:  Size  Location     Type
  2372 ;;		None               void
  2373 ;; Registers used:
  2374 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2375 ;; Tracked objects:
  2376 ;;		On entry : 0/0
  2377 ;;		On exit  : 0/0
  2378 ;;		Unchanged: 0/0
  2379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2382 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2383 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2384 ;;Total ram usage:        1 bytes
  2385 ;; Hardware stack levels required when called:    3
  2386 ;; This function calls:
  2387 ;;		_dispSeg
  2388 ;;		_initOscillator
  2389 ;;		_initPorts
  2390 ;;		_initializeRegisters
  2391 ;;		_processOpcode
  2392 ;; This function is called by:
  2393 ;;		Startup code after reset
  2394 ;; This function uses a non-reentrant model
  2395 ;;
  2396                           
  2397                           	psect	text0
  2398  0024C0                     __ptext0:
  2399                           	opt stack 0
  2400  0024C0                     _main:
  2401                           	opt stack 28
  2402                           
  2403                           ;main.c: 20: initOscillator();
  2404                           
  2405                           ;incstack = 0
  2406  0024C0  EC0A  F013         	call	_initOscillator	;wreg free
  2407                           
  2408                           ;main.c: 21: initPorts();
  2409  0024C4  ECCB  F012         	call	_initPorts	;wreg free
  2410                           
  2411                           ;main.c: 22: dispSeg(1, '-'); dispSeg(2, '-');
  2412  0024C8  6E12               	movwf	??_main& (0+255),c
  2413  0024CA  0E2D               	movlw	45
  2414  0024CC  6E01               	movwf	dispSeg@letter,c
  2415  0024CE  5012               	movf	??_main& (0+255),w,c
  2416  0024D0  0E01               	movlw	1
  2417  0024D2  ECDD  F00F         	call	_dispSeg
  2418  0024D6  6E12               	movwf	??_main& (0+255),c
  2419  0024D8  0E2D               	movlw	45
  2420  0024DA  6E01               	movwf	dispSeg@letter,c
  2421  0024DC  5012               	movf	??_main& (0+255),w,c
  2422  0024DE  0E02               	movlw	2
  2423  0024E0  ECDD  F00F         	call	_dispSeg
  2424                           
  2425                           ;main.c: 24: initializeRegisters();
  2426  0024E4  ECFD  F011         	call	_initializeRegisters	;wreg free
  2427  0024E8                     l1602:
  2428                           
  2429                           ;main.c: 27: {
  2430                           ;main.c: 28: if (regPC < 256 || regPC > 2047)
  2431  0024E8  0E00               	movlw	0
  2432  0024EA  5C19               	subwf	_regPC,w,c
  2433  0024EC  0E01               	movlw	1
  2434  0024EE  581A               	subwfb	_regPC+1,w,c
  2435  0024F0  A0D8               	btfss	status,0,c
  2436  0024F2  D006               	goto	l1606
  2437  0024F4  0E00               	movlw	0
  2438  0024F6  5C19               	subwf	_regPC,w,c
  2439  0024F8  0E08               	movlw	8
  2440  0024FA  581A               	subwfb	_regPC+1,w,c
  2441  0024FC  A0D8               	btfss	status,0,c
  2442  0024FE  D005               	goto	l1608
  2443  002500                     l1606:
  2444                           
  2445                           ;main.c: 29: {
  2446                           ;main.c: 30: regPC = 256;
  2447  002500  0E01               	movlw	1
  2448  002502  6E1A               	movwf	_regPC+1,c
  2449  002504  0E00               	movlw	0
  2450  002506  6E19               	movwf	_regPC,c
  2451                           
  2452                           ;main.c: 31: continue;
  2453  002508  D7EF               	goto	l1602
  2454  00250A                     l1608:
  2455                           
  2456                           ;main.c: 32: }
  2457                           ;main.c: 37: processOpcode();
  2458  00250A  EC03  F00C         	call	_processOpcode	;wreg free
  2459  00250E  D7EC               	goto	l1602
  2460  002510                     __end_of_main:
  2461                           	opt stack 0
  2462                           tblptru	equ	0xFF8
  2463                           tblptrh	equ	0xFF7
  2464                           tblptrl	equ	0xFF6
  2465                           tablat	equ	0xFF5
  2466                           postinc0	equ	0xFEE
  2467                           wreg	equ	0xFE8
  2468                           postdec1	equ	0xFE5
  2469                           fsr1h	equ	0xFE2
  2470                           fsr1l	equ	0xFE1
  2471                           status	equ	0xFD8
  2472                           
  2473 ;; *************** function _processOpcode *****************
  2474 ;; Defined at:
  2475 ;;		line 254 in file "source/emulator.c"
  2476 ;; Parameters:    Size  Location     Type
  2477 ;;		None
  2478 ;; Auto vars:     Size  Location     Type
  2479 ;;  regA_temp16     2   15[COMRAM] unsigned int 
  2480 ;;  regPC_temp      2   11[COMRAM] unsigned int 
  2481 ;;  regA_temp8      1   14[COMRAM] unsigned char 
  2482 ;;  carriedBit      1   13[COMRAM] unsigned char 
  2483 ;; Return value:  Size  Location     Type
  2484 ;;		None               void
  2485 ;; Registers used:
  2486 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2487 ;; Tracked objects:
  2488 ;;		On entry : 0/0
  2489 ;;		On exit  : 0/0
  2490 ;;		Unchanged: 0/0
  2491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2493 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2494 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2495 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2496 ;;Total ram usage:        9 bytes
  2497 ;; Hardware stack levels used:    1
  2498 ;; Hardware stack levels required when called:    2
  2499 ;; This function calls:
  2500 ;;		_getFbits
  2501 ;;		_getMXbits
  2502 ;;		_getPortData
  2503 ;;		_immData_toPointer
  2504 ;;		_setFbits
  2505 ;;		_setMXbits
  2506 ;;		_setPortData
  2507 ;;		_update_immData
  2508 ;; This function is called by:
  2509 ;;		_main
  2510 ;; This function uses a non-reentrant model
  2511 ;;
  2512                           
  2513                           	psect	text1
  2514  001806                     __ptext1:
  2515                           	opt stack 0
  2516  001806                     _processOpcode:
  2517                           	opt stack 28
  2518                           
  2519                           ;emulator.c: 257: update_immData();
  2520                           
  2521                           ;incstack = 0
  2522  001806  EC31  F012         	call	_update_immData	;wreg free
  2523                           
  2524                           ;emulator.c: 260: uint8_t regA_temp8 = regA;
  2525  00180A  C01D  F00F         	movff	_regA,processOpcode@regA_temp8
  2526                           
  2527                           ;emulator.c: 261: uint16_t regA_temp16 = (uint16_t) regA;
  2528  00180E  C01D  F010         	movff	_regA,processOpcode@regA_temp16
  2529  001812  6A11               	clrf	processOpcode@regA_temp16+1,c
  2530                           
  2531                           ;emulator.c: 262: uint16_t regPC_temp = regPC;
  2532  001814  C019  F00C         	movff	_regPC,processOpcode@regPC_temp
  2533  001818  C01A  F00D         	movff	_regPC+1,processOpcode@regPC_temp+1
  2534                           
  2535                           ;emulator.c: 263: uint8_t carriedBit;
  2536                           ;emulator.c: 266: switch (virtualMemory[regPC])
  2537  00181C  D2FB               	goto	l1590
  2538  00181E                     l1314:
  2539                           
  2540                           ;emulator.c: 274: setFbits(0, 1);
  2541  00181E  6E09               	movwf	??_processOpcode& (0+255),c
  2542  001820  0E01               	movlw	1
  2543  001822  6E01               	movwf	setFbits@value,c
  2544  001824  5009               	movf	??_processOpcode& (0+255),w,c
  2545  001826  0E00               	movlw	0
  2546  001828  ECAD  F012         	call	_setFbits
  2547                           
  2548                           ;emulator.c: 275: break;
  2549  00182C  D3C3               	goto	l1592
  2550  00182E                     l1316:
  2551                           
  2552                           ;emulator.c: 278: setFbits(0, 0);
  2553  00182E  6E09               	movwf	??_processOpcode& (0+255),c
  2554  001830  0E00               	movlw	0
  2555  001832  6E01               	movwf	setFbits@value,c
  2556  001834  5009               	movf	??_processOpcode& (0+255),w,c
  2557  001836  0E00               	movlw	0
  2558  001838  ECAD  F012         	call	_setFbits
  2559                           
  2560                           ;emulator.c: 279: break;
  2561  00183C  D3BB               	goto	l1592
  2562  00183E                     l1318:
  2563                           
  2564                           ;emulator.c: 285: regA = getPortData(regB);
  2565  00183E  501E               	movf	_regB,w,c
  2566  001840  EC24  F013         	call	_getPortData
  2567  001844  D1F0               	goto	L11
  2568  001846                     l1320:
  2569                           
  2570                           ;emulator.c: 289: regA = getPortData(immData_1);
  2571  001846  501B               	movf	_immData_1,w,c
  2572  001848  EC24  F013         	call	_getPortData
  2573  00184C  6E1D               	movwf	_regA,c
  2574  00184E  D2AC               	goto	L20
  2575  001850                     l1324:
  2576                           
  2577                           ;emulator.c: 294: setPortData(regB, regA);
  2578  001850  C01D  F005         	movff	_regA,setPortData@outputData
  2579  001854  501E               	movf	_regB,w,c
  2580  001856  EC6C  F011         	call	_setPortData
  2581                           
  2582                           ;emulator.c: 295: break;
  2583  00185A  D3AC               	goto	l1592
  2584  00185C                     l1326:
  2585                           
  2586                           ;emulator.c: 298: setPortData(immData_1, regA);
  2587  00185C  C01D  F005         	movff	_regA,setPortData@outputData
  2588  001860  501B               	movf	_immData_1,w,c
  2589  001862  EC6C  F011         	call	_setPortData
  2590  001866  D2A0               	goto	L20
  2591  001868                     l1330:
  2592                           
  2593                           ;emulator.c: 303: setPortData(immData_1, immData_2);
  2594  001868  C01C  F005         	movff	_immData_2,setPortData@outputData
  2595  00186C  501B               	movf	_immData_1,w,c
  2596  00186E  EC6C  F011         	call	_setPortData
  2597  001872  D11A               	goto	l1464
  2598  001874                     l1334:
  2599                           
  2600                           ;emulator.c: 311: regA = virtualMemory[regMX];
  2601  001874  0E00               	movlw	low _virtualMemory
  2602  001876  2417               	addwf	_regMX,w,c
  2603  001878  6ED9               	movwf	fsr2l,c
  2604  00187A  0E02               	movlw	high _virtualMemory
  2605  00187C  2018               	addwfc	_regMX+1,w,c
  2606  00187E  D1D1               	goto	L26
  2607  001880                     l1336:
  2608                           
  2609                           ;emulator.c: 315: regA = getMXbits(0);
  2610  001880  0E00               	movlw	0
  2611  001882  EC2F  F013         	call	_getMXbits
  2612  001886  D1CF               	goto	L11
  2613  001888                     l1338:
  2614                           
  2615                           ;emulator.c: 319: regA = getMXbits(1);
  2616  001888  0E01               	movlw	1
  2617  00188A  EC2F  F013         	call	_getMXbits
  2618  00188E  D1CB               	goto	L11
  2619  001890                     l258:
  2620                           
  2621                           ;emulator.c: 323: regA = regSP;
  2622  001890  C020  F01D         	movff	_regSP,_regA
  2623                           
  2624                           ;emulator.c: 324: break;
  2625  001894  D38F               	goto	l1592
  2626  001896                     l259:
  2627                           
  2628                           ;emulator.c: 327: regA = regF;
  2629  001896  C01F  F01D         	movff	_regF,_regA
  2630                           
  2631                           ;emulator.c: 328: break;
  2632  00189A  D38C               	goto	l1592
  2633  00189C                     l260:
  2634                           
  2635                           ;emulator.c: 331: regA = regB;
  2636  00189C  C01E  F01D         	movff	_regB,_regA
  2637                           
  2638                           ;emulator.c: 332: break;
  2639  0018A0  D389               	goto	l1592
  2640  0018A2                     l1340:
  2641                           
  2642                           ;emulator.c: 344: virtualMemory[regMX] = regA;
  2643  0018A2  0E00               	movlw	low _virtualMemory
  2644  0018A4  2417               	addwf	_regMX,w,c
  2645  0018A6  6ED9               	movwf	fsr2l,c
  2646  0018A8  0E02               	movlw	high _virtualMemory
  2647  0018AA  2018               	addwfc	_regMX+1,w,c
  2648  0018AC  6EDA               	movwf	fsr2h,c
  2649  0018AE  C01D  FFDF         	movff	_regA,indf2
  2650                           
  2651                           ;emulator.c: 346: break;
  2652  0018B2  D380               	goto	l1592
  2653  0018B4                     l1342:
  2654                           
  2655                           ;emulator.c: 349: setMXbits(0, regA);
  2656  0018B4  C01D  F001         	movff	_regA,setMXbits@value
  2657  0018B8  0E00               	movlw	0
  2658  0018BA  ECE3  F012         	call	_setMXbits
  2659                           
  2660                           ;emulator.c: 350: break;
  2661  0018BE  D37A               	goto	l1592
  2662  0018C0                     l1344:
  2663                           
  2664                           ;emulator.c: 353: setMXbits(1, regA);
  2665  0018C0  C01D  F001         	movff	_regA,setMXbits@value
  2666  0018C4  0E01               	movlw	1
  2667  0018C6  ECE3  F012         	call	_setMXbits
  2668                           
  2669                           ;emulator.c: 354: break;
  2670  0018CA  D374               	goto	l1592
  2671  0018CC                     l264:
  2672                           
  2673                           ;emulator.c: 357: regSP = regA;
  2674  0018CC  C01D  F020         	movff	_regA,_regSP
  2675                           
  2676                           ;emulator.c: 358: break;
  2677  0018D0  D371               	goto	l1592
  2678  0018D2                     l265:
  2679                           
  2680                           ;emulator.c: 361: regB = regA;
  2681  0018D2  C01D  F01E         	movff	_regA,_regB
  2682                           
  2683                           ;emulator.c: 362: break;
  2684  0018D6  D36E               	goto	l1592
  2685  0018D8                     l266:
  2686                           
  2687                           ;emulator.c: 365: regA = immData_1;
  2688  0018D8  C01B  F01D         	movff	_immData_1,_regA
  2689  0018DC  D265               	goto	L20
  2690  0018DE                     l267:
  2691                           
  2692                           ;emulator.c: 371: regA_temp8 = regA;
  2693  0018DE  C01D  F00F         	movff	_regA,processOpcode@regA_temp8
  2694                           
  2695                           ;emulator.c: 372: regA = regB;
  2696  0018E2  C01E  F01D         	movff	_regB,_regA
  2697                           
  2698                           ;emulator.c: 373: regB = regA_temp8;
  2699  0018E6  C00F  F01E         	movff	processOpcode@regA_temp8,_regB
  2700                           
  2701                           ;emulator.c: 374: break;
  2702  0018EA  D364               	goto	l1592
  2703  0018EC                     l1348:
  2704                           
  2705                           ;emulator.c: 380: regA &= regB;
  2706  0018EC  501E               	movf	_regB,w,c
  2707  0018EE  161D               	andwf	_regA,f,c
  2708                           
  2709                           ;emulator.c: 381: break;
  2710  0018F0  D361               	goto	l1592
  2711  0018F2                     l1350:
  2712                           
  2713                           ;emulator.c: 385: regA = regA & regB;
  2714  0018F2  501D               	movf	_regA,w,c
  2715  0018F4  141E               	andwf	_regB,w,c
  2716  0018F6  D00B               	goto	L10
  2717  0018F8                     l1354:
  2718                           
  2719                           ;emulator.c: 390: regA |= regB;
  2720  0018F8  501E               	movf	_regB,w,c
  2721  0018FA  121D               	iorwf	_regA,f,c
  2722                           
  2723                           ;emulator.c: 391: break;
  2724  0018FC  D35B               	goto	l1592
  2725  0018FE                     l1356:
  2726                           
  2727                           ;emulator.c: 395: regA = regA | regB;
  2728  0018FE  501D               	movf	_regA,w,c
  2729  001900  101E               	iorwf	_regB,w,c
  2730  001902  D005               	goto	L10
  2731  001904                     l1360:
  2732                           
  2733                           ;emulator.c: 400: regA ^= regB;
  2734  001904  501E               	movf	_regB,w,c
  2735  001906  1A1D               	xorwf	_regA,f,c
  2736                           
  2737                           ;emulator.c: 401: break;
  2738  001908  D355               	goto	l1592
  2739  00190A                     l1362:
  2740                           
  2741                           ;emulator.c: 405: regA = regA ^ regB;
  2742  00190A  501D               	movf	_regA,w,c
  2743  00190C  181E               	xorwf	_regB,w,c
  2744  00190E                     L10:
  2745  00190E  6E1D               	movwf	_regA,c
  2746  001910                     l1366:
  2747                           
  2748                           ;emulator.c: 410: regA =~ regA;
  2749  001910  1E1D               	comf	_regA,f,c
  2750                           
  2751                           ;emulator.c: 411: break;
  2752  001912  D350               	goto	l1592
  2753  001914                     l275:
  2754                           
  2755                           ;emulator.c: 415: regA_temp8 = regA;
  2756  001914  C01D  F00F         	movff	_regA,processOpcode@regA_temp8
  2757                           
  2758                           ;emulator.c: 417: if (regA_temp8 == 1) setFbits(0, 1);
  2759  001918  040F               	decf	processOpcode@regA_temp8,w,c
  2760  00191A  A4D8               	btfss	status,2,c
  2761  00191C  D008               	goto	l1372
  2762  00191E  6E09               	movwf	??_processOpcode& (0+255),c
  2763  001920  0E01               	movlw	1
  2764  001922  6E01               	movwf	setFbits@value,c
  2765  001924  5009               	movf	??_processOpcode& (0+255),w,c
  2766  001926  0E00               	movlw	0
  2767  001928  ECAD  F012         	call	_setFbits
  2768  00192C  D343               	goto	l1592
  2769  00192E                     l1372:
  2770                           
  2771                           ;emulator.c: 418: else setFbits(0, 0);
  2772  00192E  6E09               	movwf	??_processOpcode& (0+255),c
  2773  001930  0E00               	movlw	0
  2774  001932  6E01               	movwf	setFbits@value,c
  2775  001934  5009               	movf	??_processOpcode& (0+255),w,c
  2776  001936  0E00               	movlw	0
  2777  001938  ECAD  F012         	call	_setFbits
  2778  00193C  D33B               	goto	l1592
  2779  00193E                     l278:
  2780                           
  2781                           ;emulator.c: 426: regA_temp8 = regA;
  2782  00193E  C01D  F00F         	movff	_regA,processOpcode@regA_temp8
  2783                           
  2784                           ;emulator.c: 429: if (regA_temp8 == 1) setFbits(0, 1);
  2785  001942  040F               	decf	processOpcode@regA_temp8,w,c
  2786  001944  A4D8               	btfss	status,2,c
  2787  001946  D008               	goto	l1378
  2788  001948  6E09               	movwf	??_processOpcode& (0+255),c
  2789  00194A  0E01               	movlw	1
  2790  00194C  6E01               	movwf	setFbits@value,c
  2791  00194E  5009               	movf	??_processOpcode& (0+255),w,c
  2792  001950  0E00               	movlw	0
  2793  001952  ECAD  F012         	call	_setFbits
  2794  001956  D32E               	goto	l1592
  2795  001958                     l1378:
  2796                           
  2797                           ;emulator.c: 430: else setFbits(0, 0);
  2798  001958  6E09               	movwf	??_processOpcode& (0+255),c
  2799  00195A  0E00               	movlw	0
  2800  00195C  6E01               	movwf	setFbits@value,c
  2801  00195E  5009               	movf	??_processOpcode& (0+255),w,c
  2802  001960  0E00               	movlw	0
  2803  001962  ECAD  F012         	call	_setFbits
  2804  001966  D326               	goto	l1592
  2805  001968                     l281:
  2806                           
  2807                           ;emulator.c: 438: carriedBit = regA;
  2808  001968  C01D  F00E         	movff	_regA,processOpcode@carriedBit
  2809                           
  2810                           ;emulator.c: 445: regA = regA + carriedBit;
  2811  00196C  501D               	movf	_regA,w,c
  2812  00196E  240E               	addwf	processOpcode@carriedBit,w,c
  2813  001970  D15A               	goto	L11
  2814  001972                     l282:
  2815                           
  2816                           ;emulator.c: 450: carriedBit = regA;
  2817  001972  C01D  F00E         	movff	_regA,processOpcode@carriedBit
  2818                           
  2819                           ;emulator.c: 457: regA += carriedBit;
  2820  001976  500E               	movf	processOpcode@carriedBit,w,c
  2821  001978  D1B4               	goto	L12
  2822  00197A                     l1384:
  2823                           
  2824                           ;emulator.c: 462: if (regA == regB) setFbits(3, 1);
  2825  00197A  501E               	movf	_regB,w,c
  2826  00197C  621D               	cpfseq	_regA,c
  2827  00197E  D008               	goto	l1388
  2828  001980  6E09               	movwf	??_processOpcode& (0+255),c
  2829  001982  0E01               	movlw	1
  2830  001984  6E01               	movwf	setFbits@value,c
  2831  001986  5009               	movf	??_processOpcode& (0+255),w,c
  2832  001988  0E03               	movlw	3
  2833  00198A  ECAD  F012         	call	_setFbits
  2834  00198E  D007               	goto	l1390
  2835  001990                     l1388:
  2836                           
  2837                           ;emulator.c: 463: else setFbits(3, 0);
  2838  001990  6E09               	movwf	??_processOpcode& (0+255),c
  2839  001992  0E00               	movlw	0
  2840  001994  6E01               	movwf	setFbits@value,c
  2841  001996  5009               	movf	??_processOpcode& (0+255),w,c
  2842  001998  0E03               	movlw	3
  2843  00199A  ECAD  F012         	call	_setFbits
  2844  00199E                     l1390:
  2845                           
  2846                           ;emulator.c: 466: if (regA < regB) setFbits(2, 1);
  2847  00199E  501E               	movf	_regB,w,c
  2848  0019A0  5C1D               	subwf	_regA,w,c
  2849  0019A2  B0D8               	btfsc	status,0,c
  2850  0019A4  D008               	goto	l1394
  2851  0019A6  6E09               	movwf	??_processOpcode& (0+255),c
  2852  0019A8  0E01               	movlw	1
  2853  0019AA  6E01               	movwf	setFbits@value,c
  2854  0019AC  5009               	movf	??_processOpcode& (0+255),w,c
  2855  0019AE  0E02               	movlw	2
  2856  0019B0  ECAD  F012         	call	_setFbits
  2857  0019B4  D007               	goto	l1396
  2858  0019B6                     l1394:
  2859                           
  2860                           ;emulator.c: 467: else setFbits(2, 0);
  2861  0019B6  6E09               	movwf	??_processOpcode& (0+255),c
  2862  0019B8  0E00               	movlw	0
  2863  0019BA  6E01               	movwf	setFbits@value,c
  2864  0019BC  5009               	movf	??_processOpcode& (0+255),w,c
  2865  0019BE  0E02               	movlw	2
  2866  0019C0  ECAD  F012         	call	_setFbits
  2867  0019C4                     l1396:
  2868                           
  2869                           ;emulator.c: 470: if (regA > regB) setFbits(1, 1);
  2870  0019C4  501D               	movf	_regA,w,c
  2871  0019C6  5C1E               	subwf	_regB,w,c
  2872  0019C8  B0D8               	btfsc	status,0,c
  2873  0019CA  D008               	goto	l1400
  2874  0019CC  6E09               	movwf	??_processOpcode& (0+255),c
  2875  0019CE  0E01               	movlw	1
  2876  0019D0  6E01               	movwf	setFbits@value,c
  2877  0019D2  5009               	movf	??_processOpcode& (0+255),w,c
  2878  0019D4  0E01               	movlw	1
  2879  0019D6  ECAD  F012         	call	_setFbits
  2880  0019DA  D2EC               	goto	l1592
  2881  0019DC                     l1400:
  2882                           
  2883                           ;emulator.c: 471: else setFbits(1, 0);
  2884  0019DC  6E09               	movwf	??_processOpcode& (0+255),c
  2885  0019DE  0E00               	movlw	0
  2886  0019E0  6E01               	movwf	setFbits@value,c
  2887  0019E2  5009               	movf	??_processOpcode& (0+255),w,c
  2888  0019E4  0E01               	movlw	1
  2889  0019E6  ECAD  F012         	call	_setFbits
  2890  0019EA  D2E4               	goto	l1592
  2891  0019EC                     l1402:
  2892                           
  2893                           ;emulator.c: 483: regPC = immData_toPointer();
  2894  0019EC  EC18  F013         	call	_immData_toPointer	;wreg free
  2895  0019F0  D011               	goto	L28
  2896  0019F2                     l1406:
  2897                           
  2898                           ;emulator.c: 488: if (getFbits(3) == 1) regPC = regMX;
  2899  0019F2  0E03               	movlw	3
  2900  0019F4  ECF7  F012         	call	_getFbits
  2901  0019F8                     L22:
  2902  0019F8  6E09               	movwf	??_processOpcode& (0+255),c
  2903  0019FA  0409               	decf	??_processOpcode,w,c
  2904  0019FC                     L21:
  2905  0019FC  A4D8               	btfss	status,2,c
  2906  0019FE  D2DA               	goto	l1592
  2907  001A00  D066               	goto	L13
  2908  001A02                     l1410:
  2909                           
  2910                           ;emulator.c: 492: if (getFbits(3) == 1) regPC = immData_toPointer();
  2911  001A02  0E03               	movlw	3
  2912  001A04  ECF7  F012         	call	_getFbits
  2913  001A08  6E09               	movwf	??_processOpcode& (0+255),c
  2914  001A0A  0409               	decf	??_processOpcode,w,c
  2915  001A0C  A4D8               	btfss	status,2,c
  2916  001A0E  D04C               	goto	l1464
  2917  001A10  EC18  F013         	call	_immData_toPointer	;wreg free
  2918  001A14                     L28:
  2919  001A14  C001  F019         	movff	?_immData_toPointer,_regPC
  2920  001A18  C002  F01A         	movff	?_immData_toPointer+1,_regPC+1
  2921  001A1C  D045               	goto	l1464
  2922  001A1E                     l1416:
  2923                           
  2924                           ;emulator.c: 497: if (getFbits(3) == 0) regPC = regMX;
  2925  001A1E  0E03               	movlw	3
  2926  001A20  ECF7  F012         	call	_getFbits
  2927  001A24  D036               	goto	L24
  2928  001A26                     l1420:
  2929                           
  2930                           ;emulator.c: 501: if (getFbits(3) == 0) regPC = immData_toPointer();
  2931  001A26  0E03               	movlw	3
  2932  001A28  ECF7  F012         	call	_getFbits
  2933  001A2C  0900               	iorlw	0
  2934  001A2E  A4D8               	btfss	status,2,c
  2935  001A30  D03B               	goto	l1464
  2936  001A32  EC18  F013         	call	_immData_toPointer	;wreg free
  2937  001A36  D7EE               	goto	L28
  2938  001A38                     l1426:
  2939                           
  2940                           ;emulator.c: 506: if (getFbits(1) == 1) regPC = regMX;
  2941  001A38  0E01               	movlw	1
  2942  001A3A  ECF7  F012         	call	_getFbits
  2943  001A3E  D7DC               	goto	L22
  2944  001A40                     l1430:
  2945                           
  2946                           ;emulator.c: 510: if (getFbits(1) == 1) regPC = immData_toPointer();
  2947  001A40  0E01               	movlw	1
  2948  001A42  ECF7  F012         	call	_getFbits
  2949  001A46  6E09               	movwf	??_processOpcode& (0+255),c
  2950  001A48  0409               	decf	??_processOpcode,w,c
  2951  001A4A  A4D8               	btfss	status,2,c
  2952  001A4C  D02D               	goto	l1464
  2953  001A4E  EC18  F013         	call	_immData_toPointer	;wreg free
  2954  001A52  D7E0               	goto	L28
  2955  001A54                     l1436:
  2956                           
  2957                           ;emulator.c: 515: if (getFbits(2) == 1) regPC = regMX;
  2958  001A54  0E02               	movlw	2
  2959  001A56  ECF7  F012         	call	_getFbits
  2960  001A5A  D7CE               	goto	L22
  2961  001A5C                     l1440:
  2962                           
  2963                           ;emulator.c: 519: if (getFbits(2) == 1) regPC = immData_toPointer();
  2964  001A5C  0E02               	movlw	2
  2965  001A5E  ECF7  F012         	call	_getFbits
  2966  001A62  6E09               	movwf	??_processOpcode& (0+255),c
  2967  001A64  0409               	decf	??_processOpcode,w,c
  2968  001A66  A4D8               	btfss	status,2,c
  2969  001A68  D01F               	goto	l1464
  2970  001A6A  EC18  F013         	call	_immData_toPointer	;wreg free
  2971  001A6E  D7D2               	goto	L28
  2972  001A70                     l1446:
  2973                           
  2974                           ;emulator.c: 524: if (getFbits(0) == 1) regPC = regMX;
  2975  001A70  0E00               	movlw	0
  2976  001A72  ECF7  F012         	call	_getFbits
  2977  001A76  D7C0               	goto	L22
  2978  001A78                     l1450:
  2979                           
  2980                           ;emulator.c: 528: if (getFbits(0) == 1) regPC = immData_toPointer();
  2981  001A78  0E00               	movlw	0
  2982  001A7A  ECF7  F012         	call	_getFbits
  2983  001A7E  6E09               	movwf	??_processOpcode& (0+255),c
  2984  001A80  0409               	decf	??_processOpcode,w,c
  2985  001A82  A4D8               	btfss	status,2,c
  2986  001A84  D011               	goto	l1464
  2987  001A86  EC18  F013         	call	_immData_toPointer	;wreg free
  2988  001A8A  D7C4               	goto	L28
  2989  001A8C                     l1456:
  2990                           
  2991                           ;emulator.c: 533: if (getFbits(0) == 0) regPC = regMX;
  2992  001A8C  0E00               	movlw	0
  2993  001A8E  ECF7  F012         	call	_getFbits
  2994  001A92                     L24:
  2995  001A92  0900               	iorlw	0
  2996  001A94  D7B3               	goto	L21
  2997  001A96                     l1460:
  2998                           
  2999                           ;emulator.c: 537: if (getFbits(0) == 0) regPC = immData_toPointer();
  3000  001A96  0E00               	movlw	0
  3001  001A98  ECF7  F012         	call	_getFbits
  3002  001A9C  0900               	iorlw	0
  3003  001A9E  A4D8               	btfss	status,2,c
  3004  001AA0  D003               	goto	l1464
  3005  001AA2  EC18  F013         	call	_immData_toPointer	;wreg free
  3006  001AA6  D7B6               	goto	L28
  3007  001AA8                     l1464:
  3008                           
  3009                           ;emulator.c: 538: regPC += 2;
  3010  001AA8  0E02               	movlw	2
  3011  001AAA  2619               	addwf	_regPC,f,c
  3012  001AAC  0E00               	movlw	0
  3013  001AAE  221A               	addwfc	_regPC+1,f,c
  3014                           
  3015                           ;emulator.c: 539: break;
  3016  001AB0  D281               	goto	l1592
  3017  001AB2                     l1466:
  3018                           
  3019                           ;emulator.c: 543: stack[regSP] = regPC;
  3020  001AB2  5020               	movf	_regSP,w,c
  3021  001AB4  0D01               	mullw	1
  3022  001AB6  0101               	movlb	1	; () banked
  3023  001AB8  0E00               	movlw	low _stack
  3024  001ABA  24F3               	addwf	prodl,w,c
  3025  001ABC  6ED9               	movwf	fsr2l,c
  3026  001ABE  0101               	movlb	1	; () banked
  3027  001AC0  0E01               	movlw	high _stack
  3028  001AC2  20F4               	addwfc	prodh,w,c
  3029  001AC4  6EDA               	movwf	fsr2h,c
  3030  001AC6  C019  FFDF         	movff	_regPC,indf2
  3031                           
  3032                           ; BSR set to: 1
  3033                           ;emulator.c: 544: regSP += 2;
  3034  001ACA  0E02               	movlw	2
  3035  001ACC  2620               	addwf	_regSP,f,c
  3036  001ACE                     L13:
  3037                           
  3038                           ; BSR set to: 1
  3039                           ;emulator.c: 545: regPC = regMX;
  3040  001ACE  C017  F019         	movff	_regMX,_regPC
  3041  001AD2  C018  F01A         	movff	_regMX+1,_regPC+1
  3042                           
  3043                           ;emulator.c: 546: break;
  3044  001AD6  D26E               	goto	l1592
  3045  001AD8                     l1472:
  3046                           
  3047                           ;emulator.c: 550: stack[regSP] = regPC;
  3048  001AD8  5020               	movf	_regSP,w,c
  3049  001ADA  0D01               	mullw	1
  3050  001ADC  0101               	movlb	1	; () banked
  3051  001ADE  0E00               	movlw	low _stack
  3052  001AE0  24F3               	addwf	prodl,w,c
  3053  001AE2  6ED9               	movwf	fsr2l,c
  3054  001AE4  0101               	movlb	1	; () banked
  3055  001AE6  0E01               	movlw	high _stack
  3056  001AE8  20F4               	addwfc	prodh,w,c
  3057  001AEA  6EDA               	movwf	fsr2h,c
  3058  001AEC  C019  FFDF         	movff	_regPC,indf2
  3059                           
  3060                           ; BSR set to: 1
  3061                           ;emulator.c: 551: regSP += 2;
  3062  001AF0  0E02               	movlw	2
  3063  001AF2  2620               	addwf	_regSP,f,c
  3064                           
  3065                           ; BSR set to: 1
  3066                           ;emulator.c: 552: regPC = immData_toPointer();
  3067  001AF4  EC18  F013         	call	_immData_toPointer	;wreg free
  3068  001AF8  D78D               	goto	L28
  3069  001AFA                     l1480:
  3070                           
  3071                           ;emulator.c: 558: regSP -= 2;
  3072  001AFA  0E02               	movlw	2
  3073  001AFC  5E20               	subwf	_regSP,f,c
  3074                           
  3075                           ;emulator.c: 560: regPC_temp = (uint16_t) stack[regSP];
  3076  001AFE  5020               	movf	_regSP,w,c
  3077  001B00  0D01               	mullw	1
  3078  001B02  0101               	movlb	1	; () banked
  3079  001B04  0E00               	movlw	low _stack
  3080  001B06  24F3               	addwf	prodl,w,c
  3081  001B08  6ED9               	movwf	fsr2l,c
  3082  001B0A  0101               	movlb	1	; () banked
  3083  001B0C  0E01               	movlw	high _stack
  3084  001B0E  20F4               	addwfc	prodh,w,c
  3085  001B10  6EDA               	movwf	fsr2h,c
  3086  001B12  50DF               	movf	indf2,w,c
  3087  001B14  6E09               	movwf	??_processOpcode& (0+255),c
  3088  001B16  5009               	movf	??_processOpcode,w,c
  3089  001B18  6E0C               	movwf	processOpcode@regPC_temp,c
  3090  001B1A  6A0D               	clrf	processOpcode@regPC_temp+1,c
  3091                           
  3092                           ; BSR set to: 1
  3093                           ;emulator.c: 562: regPC += regPC_temp + (uint16_t) stack[regSP];
  3094  001B1C  5020               	movf	_regSP,w,c
  3095  001B1E  0D01               	mullw	1
  3096  001B20  0101               	movlb	1	; () banked
  3097  001B22  0E00               	movlw	low _stack
  3098  001B24  24F3               	addwf	prodl,w,c
  3099  001B26  6ED9               	movwf	fsr2l,c
  3100  001B28  0101               	movlb	1	; () banked
  3101  001B2A  0E01               	movlw	high _stack
  3102  001B2C  20F4               	addwfc	prodh,w,c
  3103  001B2E  6EDA               	movwf	fsr2h,c
  3104  001B30  50DF               	movf	indf2,w,c
  3105  001B32  6E09               	movwf	??_processOpcode& (0+255),c
  3106  001B34  5009               	movf	??_processOpcode,w,c
  3107  001B36  240C               	addwf	processOpcode@regPC_temp,w,c
  3108  001B38  6E0A               	movwf	(??_processOpcode+1)& (0+255),c
  3109  001B3A  0E00               	movlw	0
  3110  001B3C  200D               	addwfc	processOpcode@regPC_temp+1,w,c
  3111  001B3E  6E0B               	movwf	(??_processOpcode+2)& (0+255),c
  3112  001B40  500A               	movf	??_processOpcode+1,w,c
  3113  001B42  2619               	addwf	_regPC,f,c
  3114  001B44  500B               	movf	??_processOpcode+2,w,c
  3115  001B46  D7B3               	goto	L15
  3116  001B48                     l1486:
  3117                           
  3118                           ;emulator.c: 570: stack[regSP] = regA;
  3119  001B48  5020               	movf	_regSP,w,c
  3120  001B4A  0D01               	mullw	1
  3121  001B4C  0101               	movlb	1	; () banked
  3122  001B4E  0E00               	movlw	low _stack
  3123  001B50  24F3               	addwf	prodl,w,c
  3124  001B52  6ED9               	movwf	fsr2l,c
  3125  001B54  0101               	movlb	1	; () banked
  3126  001B56  0E01               	movlw	high _stack
  3127  001B58  20F4               	addwfc	prodh,w,c
  3128  001B5A  6EDA               	movwf	fsr2h,c
  3129  001B5C  C01D  FFDF         	movff	_regA,indf2
  3130  001B60  D02A               	goto	L17
  3131  001B62                     l1490:
  3132                           
  3133                           ;emulator.c: 576: stack[regSP] = regB;
  3134  001B62  5020               	movf	_regSP,w,c
  3135  001B64  0D01               	mullw	1
  3136  001B66  0101               	movlb	1	; () banked
  3137  001B68  0E00               	movlw	low _stack
  3138  001B6A  24F3               	addwf	prodl,w,c
  3139  001B6C  6ED9               	movwf	fsr2l,c
  3140  001B6E  0101               	movlb	1	; () banked
  3141  001B70  0E01               	movlw	high _stack
  3142  001B72  20F4               	addwfc	prodh,w,c
  3143  001B74  6EDA               	movwf	fsr2h,c
  3144  001B76  C01E  FFDF         	movff	_regB,indf2
  3145  001B7A  D01D               	goto	L17
  3146  001B7C                     l1494:
  3147                           
  3148                           ;emulator.c: 582: stack[regSP] = regMX;
  3149  001B7C  5020               	movf	_regSP,w,c
  3150  001B7E  0D01               	mullw	1
  3151  001B80  0101               	movlb	1	; () banked
  3152  001B82  0E00               	movlw	low _stack
  3153  001B84  24F3               	addwf	prodl,w,c
  3154  001B86  6ED9               	movwf	fsr2l,c
  3155  001B88  0101               	movlb	1	; () banked
  3156  001B8A  0E01               	movlw	high _stack
  3157  001B8C  20F4               	addwfc	prodh,w,c
  3158  001B8E  6EDA               	movwf	fsr2h,c
  3159  001B90  C017  FFDF         	movff	_regMX,indf2
  3160                           
  3161                           ; BSR set to: 1
  3162                           ;emulator.c: 583: regSP += 2;
  3163  001B94  0E02               	movlw	2
  3164  001B96  2620               	addwf	_regSP,f,c
  3165                           
  3166                           ;emulator.c: 584: break;
  3167  001B98  D20D               	goto	l1592
  3168  001B9A                     l1498:
  3169                           
  3170                           ;emulator.c: 588: stack[regSP] = getMXbits(0);
  3171  001B9A  5020               	movf	_regSP,w,c
  3172  001B9C  0D01               	mullw	1
  3173  001B9E  0101               	movlb	1	; () banked
  3174  001BA0  0E00               	movlw	low _stack
  3175  001BA2  24F3               	addwf	prodl,w,c
  3176  001BA4  6ED9               	movwf	fsr2l,c
  3177  001BA6  0101               	movlb	1	; () banked
  3178  001BA8  0E01               	movlw	high _stack
  3179  001BAA  20F4               	addwfc	prodh,w,c
  3180  001BAC  6EDA               	movwf	fsr2h,c
  3181  001BAE  0E00               	movlw	0
  3182  001BB0  EC2F  F013         	call	_getMXbits
  3183  001BB4  D00F               	goto	L18
  3184  001BB6                     L17:
  3185                           
  3186                           ;emulator.c: 589: regSP++;
  3187  001BB6  2A20               	incf	_regSP,f,c
  3188                           
  3189                           ;emulator.c: 590: break;
  3190  001BB8  D1FD               	goto	l1592
  3191  001BBA                     l1502:
  3192                           
  3193                           ;emulator.c: 594: stack[regSP] = getMXbits(1);
  3194  001BBA  5020               	movf	_regSP,w,c
  3195  001BBC  0D01               	mullw	1
  3196  001BBE  0101               	movlb	1	; () banked
  3197  001BC0  0E00               	movlw	low _stack
  3198  001BC2  24F3               	addwf	prodl,w,c
  3199  001BC4  6ED9               	movwf	fsr2l,c
  3200  001BC6  0101               	movlb	1	; () banked
  3201  001BC8  0E01               	movlw	high _stack
  3202  001BCA  20F4               	addwfc	prodh,w,c
  3203  001BCC  6EDA               	movwf	fsr2h,c
  3204  001BCE  0E01               	movlw	1
  3205  001BD0  EC2F  F013         	call	_getMXbits
  3206  001BD4                     L18:
  3207  001BD4  6EDF               	movwf	indf2,c
  3208  001BD6  D7EF               	goto	L17
  3209  001BD8                     l1506:
  3210                           
  3211                           ;emulator.c: 600: stack[regSP] = regF;
  3212  001BD8  5020               	movf	_regSP,w,c
  3213  001BDA  0D01               	mullw	1
  3214  001BDC  0101               	movlb	1	; () banked
  3215  001BDE  0E00               	movlw	low _stack
  3216  001BE0  24F3               	addwf	prodl,w,c
  3217  001BE2  6ED9               	movwf	fsr2l,c
  3218  001BE4  0101               	movlb	1	; () banked
  3219  001BE6  0E01               	movlw	high _stack
  3220  001BE8  20F4               	addwfc	prodh,w,c
  3221  001BEA  6EDA               	movwf	fsr2h,c
  3222  001BEC  C01F  FFDF         	movff	_regF,indf2
  3223  001BF0  D7E2               	goto	L17
  3224  001BF2                     l1510:
  3225                           
  3226                           ;emulator.c: 606: stack[regSP] = immData_1;
  3227  001BF2  5020               	movf	_regSP,w,c
  3228  001BF4  0D01               	mullw	1
  3229  001BF6  0101               	movlb	1	; () banked
  3230  001BF8  0E00               	movlw	low _stack
  3231  001BFA  24F3               	addwf	prodl,w,c
  3232  001BFC  6ED9               	movwf	fsr2l,c
  3233  001BFE  0101               	movlb	1	; () banked
  3234  001C00  0E01               	movlw	high _stack
  3235  001C02  20F4               	addwfc	prodh,w,c
  3236  001C04  6EDA               	movwf	fsr2h,c
  3237  001C06  C01B  FFDF         	movff	_immData_1,indf2
  3238                           
  3239                           ; BSR set to: 1
  3240                           ;emulator.c: 607: regSP++;
  3241  001C0A  2A20               	incf	_regSP,f,c
  3242  001C0C  D0CD               	goto	L20
  3243  001C0E                     l1516:
  3244                           
  3245                           ;emulator.c: 612: regSP--;
  3246  001C0E  0620               	decf	_regSP,f,c
  3247                           
  3248                           ;emulator.c: 614: regA = stack[regSP];
  3249  001C10  5020               	movf	_regSP,w,c
  3250  001C12  0D01               	mullw	1
  3251  001C14  0101               	movlb	1	; () banked
  3252  001C16  0E00               	movlw	low _stack
  3253  001C18  24F3               	addwf	prodl,w,c
  3254  001C1A  6ED9               	movwf	fsr2l,c
  3255  001C1C  0101               	movlb	1	; () banked
  3256  001C1E  0E01               	movlw	high _stack
  3257  001C20  20F4               	addwfc	prodh,w,c
  3258  001C22                     L26:
  3259  001C22  6EDA               	movwf	fsr2h,c
  3260  001C24  50DF               	movf	indf2,w,c
  3261  001C26                     L11:
  3262  001C26  6E1D               	movwf	_regA,c
  3263                           
  3264                           ;emulator.c: 615: break;
  3265  001C28  D1C5               	goto	l1592
  3266  001C2A                     l1520:
  3267                           
  3268                           ;emulator.c: 618: regSP--;
  3269  001C2A  0620               	decf	_regSP,f,c
  3270                           
  3271                           ;emulator.c: 620: regB = stack[regSP];
  3272  001C2C  5020               	movf	_regSP,w,c
  3273  001C2E  0D01               	mullw	1
  3274  001C30  0101               	movlb	1	; () banked
  3275  001C32  0E00               	movlw	low _stack
  3276  001C34  24F3               	addwf	prodl,w,c
  3277  001C36  6ED9               	movwf	fsr2l,c
  3278  001C38  0101               	movlb	1	; () banked
  3279  001C3A  0E01               	movlw	high _stack
  3280  001C3C  20F4               	addwfc	prodh,w,c
  3281  001C3E  6EDA               	movwf	fsr2h,c
  3282  001C40  50DF               	movf	indf2,w,c
  3283  001C42  6E1E               	movwf	_regB,c
  3284                           
  3285                           ;emulator.c: 621: break;
  3286  001C44  D1B7               	goto	l1592
  3287  001C46                     l1524:
  3288                           
  3289                           ;emulator.c: 624: regSP -= 2;
  3290  001C46  0E02               	movlw	2
  3291  001C48  5E20               	subwf	_regSP,f,c
  3292                           
  3293                           ;emulator.c: 626: regMX = stack[regSP];
  3294  001C4A  5020               	movf	_regSP,w,c
  3295  001C4C  0D01               	mullw	1
  3296  001C4E  0101               	movlb	1	; () banked
  3297  001C50  0E00               	movlw	low _stack
  3298  001C52  24F3               	addwf	prodl,w,c
  3299  001C54  6ED9               	movwf	fsr2l,c
  3300  001C56  0101               	movlb	1	; () banked
  3301  001C58  0E01               	movlw	high _stack
  3302  001C5A  20F4               	addwfc	prodh,w,c
  3303  001C5C  6EDA               	movwf	fsr2h,c
  3304  001C5E  50DF               	movf	indf2,w,c
  3305  001C60  6E09               	movwf	??_processOpcode& (0+255),c
  3306  001C62  5009               	movf	??_processOpcode,w,c
  3307  001C64  6E17               	movwf	_regMX,c
  3308  001C66  6A18               	clrf	_regMX+1,c
  3309                           
  3310                           ;emulator.c: 627: break;
  3311  001C68  D1A5               	goto	l1592
  3312  001C6A                     l1528:
  3313                           
  3314                           ;emulator.c: 630: regSP--;
  3315  001C6A  0620               	decf	_regSP,f,c
  3316                           
  3317                           ;emulator.c: 632: setMXbits(0, stack[regSP]);
  3318  001C6C  5020               	movf	_regSP,w,c
  3319  001C6E  0D01               	mullw	1
  3320  001C70  0101               	movlb	1	; () banked
  3321  001C72  0E00               	movlw	low _stack
  3322  001C74  24F3               	addwf	prodl,w,c
  3323  001C76  6ED9               	movwf	fsr2l,c
  3324  001C78  0101               	movlb	1	; () banked
  3325  001C7A  0E01               	movlw	high _stack
  3326  001C7C  20F4               	addwfc	prodh,w,c
  3327  001C7E  6EDA               	movwf	fsr2h,c
  3328  001C80  50DF               	movf	indf2,w,c
  3329  001C82  6E01               	movwf	setMXbits@value,c
  3330  001C84  0E00               	movlw	0
  3331  001C86  ECE3  F012         	call	_setMXbits
  3332                           
  3333                           ;emulator.c: 633: break;
  3334  001C8A  D194               	goto	l1592
  3335  001C8C                     l1532:
  3336                           
  3337                           ;emulator.c: 636: regSP--;
  3338  001C8C  0620               	decf	_regSP,f,c
  3339                           
  3340                           ;emulator.c: 638: setMXbits(1, stack[regSP]);
  3341  001C8E  5020               	movf	_regSP,w,c
  3342  001C90  0D01               	mullw	1
  3343  001C92  0101               	movlb	1	; () banked
  3344  001C94  0E00               	movlw	low _stack
  3345  001C96  24F3               	addwf	prodl,w,c
  3346  001C98  6ED9               	movwf	fsr2l,c
  3347  001C9A  0101               	movlb	1	; () banked
  3348  001C9C  0E01               	movlw	high _stack
  3349  001C9E  20F4               	addwfc	prodh,w,c
  3350  001CA0  6EDA               	movwf	fsr2h,c
  3351  001CA2  50DF               	movf	indf2,w,c
  3352  001CA4  6E01               	movwf	setMXbits@value,c
  3353  001CA6  0E01               	movlw	1
  3354  001CA8  ECE3  F012         	call	_setMXbits
  3355                           
  3356                           ;emulator.c: 639: break;
  3357  001CAC  D183               	goto	l1592
  3358  001CAE                     l1536:
  3359                           
  3360                           ;emulator.c: 646: regA_temp16 += (uint16_t) regB;
  3361  001CAE  501E               	movf	_regB,w,c
  3362  001CB0  2610               	addwf	processOpcode@regA_temp16,f,c
  3363  001CB2  0E00               	movlw	0
  3364  001CB4  2211               	addwfc	processOpcode@regA_temp16+1,f,c
  3365                           
  3366                           ;emulator.c: 647: if (regA_temp16 > 255) setFbits(4, 1);
  3367  001CB6  0E00               	movlw	0
  3368  001CB8  5C10               	subwf	processOpcode@regA_temp16,w,c
  3369  001CBA  0E01               	movlw	1
  3370  001CBC  5811               	subwfb	processOpcode@regA_temp16+1,w,c
  3371  001CBE  A0D8               	btfss	status,0,c
  3372  001CC0  D008               	goto	l1540
  3373  001CC2  6E09               	movwf	??_processOpcode& (0+255),c
  3374  001CC4  0E01               	movlw	1
  3375  001CC6  6E01               	movwf	setFbits@value,c
  3376  001CC8  5009               	movf	??_processOpcode& (0+255),w,c
  3377  001CCA  0E04               	movlw	4
  3378  001CCC  ECAD  F012         	call	_setFbits
  3379  001CD0  D007               	goto	l1542
  3380  001CD2                     l1540:
  3381                           
  3382                           ;emulator.c: 648: else setFbits(4, 0);
  3383  001CD2  6E09               	movwf	??_processOpcode& (0+255),c
  3384  001CD4  0E00               	movlw	0
  3385  001CD6  6E01               	movwf	setFbits@value,c
  3386  001CD8  5009               	movf	??_processOpcode& (0+255),w,c
  3387  001CDA  0E04               	movlw	4
  3388  001CDC  ECAD  F012         	call	_setFbits
  3389  001CE0                     l1542:
  3390                           
  3391                           ;emulator.c: 649: regA += regB;
  3392  001CE0  501E               	movf	_regB,w,c
  3393  001CE2                     L12:
  3394  001CE2  261D               	addwf	_regA,f,c
  3395                           
  3396                           ;emulator.c: 650: break;
  3397  001CE4  D167               	goto	l1592
  3398  001CE6                     l1544:
  3399                           
  3400                           ;emulator.c: 654: regA_temp16 += (uint16_t) immData_1;
  3401  001CE6  501B               	movf	_immData_1,w,c
  3402  001CE8  2610               	addwf	processOpcode@regA_temp16,f,c
  3403  001CEA  0E00               	movlw	0
  3404  001CEC  2211               	addwfc	processOpcode@regA_temp16+1,f,c
  3405                           
  3406                           ;emulator.c: 655: if (regA_temp16 > 255) setFbits(4, 1);
  3407  001CEE  0E00               	movlw	0
  3408  001CF0  5C10               	subwf	processOpcode@regA_temp16,w,c
  3409  001CF2  0E01               	movlw	1
  3410  001CF4  5811               	subwfb	processOpcode@regA_temp16+1,w,c
  3411  001CF6  A0D8               	btfss	status,0,c
  3412  001CF8  D008               	goto	l1548
  3413  001CFA  6E09               	movwf	??_processOpcode& (0+255),c
  3414  001CFC  0E01               	movlw	1
  3415  001CFE  6E01               	movwf	setFbits@value,c
  3416  001D00  5009               	movf	??_processOpcode& (0+255),w,c
  3417  001D02  0E04               	movlw	4
  3418  001D04  ECAD  F012         	call	_setFbits
  3419  001D08  D007               	goto	l1550
  3420  001D0A                     l1548:
  3421                           
  3422                           ;emulator.c: 656: else setFbits(4, 0);
  3423  001D0A  6E09               	movwf	??_processOpcode& (0+255),c
  3424  001D0C  0E00               	movlw	0
  3425  001D0E  6E01               	movwf	setFbits@value,c
  3426  001D10  5009               	movf	??_processOpcode& (0+255),w,c
  3427  001D12  0E04               	movlw	4
  3428  001D14  ECAD  F012         	call	_setFbits
  3429  001D18                     l1550:
  3430                           
  3431                           ;emulator.c: 658: regA += immData_1;
  3432  001D18  501B               	movf	_immData_1,w,c
  3433  001D1A  261D               	addwf	_regA,f,c
  3434  001D1C  D045               	goto	L20
  3435  001D1E                     l337:
  3436                           
  3437                           ;emulator.c: 665: regA_temp16 = regA;
  3438  001D1E  C01D  F010         	movff	_regA,processOpcode@regA_temp16
  3439  001D22  6A11               	clrf	processOpcode@regA_temp16+1,c
  3440                           
  3441                           ;emulator.c: 667: regA_temp16 += 255;
  3442  001D24  0EFF               	movlw	255
  3443  001D26  2610               	addwf	processOpcode@regA_temp16,f,c
  3444  001D28  0E00               	movlw	0
  3445  001D2A  2211               	addwfc	processOpcode@regA_temp16+1,f,c
  3446                           
  3447                           ;emulator.c: 668: regA_temp16 -= regB;
  3448  001D2C  501E               	movf	_regB,w,c
  3449  001D2E  5E10               	subwf	processOpcode@regA_temp16,f,c
  3450  001D30  0E00               	movlw	0
  3451  001D32  5A11               	subwfb	processOpcode@regA_temp16+1,f,c
  3452                           
  3453                           ;emulator.c: 669: if (regA_temp16 < 255) setFbits(4, 1);
  3454  001D34  0EFF               	movlw	255
  3455  001D36  5C10               	subwf	processOpcode@regA_temp16,w,c
  3456  001D38  0E00               	movlw	0
  3457  001D3A  5811               	subwfb	processOpcode@regA_temp16+1,w,c
  3458  001D3C  B0D8               	btfsc	status,0,c
  3459  001D3E  D008               	goto	l1558
  3460  001D40  6E09               	movwf	??_processOpcode& (0+255),c
  3461  001D42  0E01               	movlw	1
  3462  001D44  6E01               	movwf	setFbits@value,c
  3463  001D46  5009               	movf	??_processOpcode& (0+255),w,c
  3464  001D48  0E04               	movlw	4
  3465  001D4A  ECAD  F012         	call	_setFbits
  3466  001D4E  D007               	goto	l1560
  3467  001D50                     l1558:
  3468                           
  3469                           ;emulator.c: 670: else setFbits(4, 0);
  3470  001D50  6E09               	movwf	??_processOpcode& (0+255),c
  3471  001D52  0E00               	movlw	0
  3472  001D54  6E01               	movwf	setFbits@value,c
  3473  001D56  5009               	movf	??_processOpcode& (0+255),w,c
  3474  001D58  0E04               	movlw	4
  3475  001D5A  ECAD  F012         	call	_setFbits
  3476  001D5E                     l1560:
  3477                           
  3478                           ;emulator.c: 671: regA -= regB;
  3479  001D5E  501E               	movf	_regB,w,c
  3480  001D60  5E1D               	subwf	_regA,f,c
  3481                           
  3482                           ;emulator.c: 672: break;
  3483  001D62  D128               	goto	l1592
  3484  001D64                     l340:
  3485                           
  3486                           ;emulator.c: 676: regA_temp16 = regA;
  3487  001D64  C01D  F010         	movff	_regA,processOpcode@regA_temp16
  3488  001D68  6A11               	clrf	processOpcode@regA_temp16+1,c
  3489                           
  3490                           ;emulator.c: 678: regA_temp16 += 255;
  3491  001D6A  0EFF               	movlw	255
  3492  001D6C  2610               	addwf	processOpcode@regA_temp16,f,c
  3493  001D6E  0E00               	movlw	0
  3494  001D70  2211               	addwfc	processOpcode@regA_temp16+1,f,c
  3495                           
  3496                           ;emulator.c: 679: regA_temp16 -= immData_1;
  3497  001D72  501B               	movf	_immData_1,w,c
  3498  001D74  5E10               	subwf	processOpcode@regA_temp16,f,c
  3499  001D76  0E00               	movlw	0
  3500  001D78  5A11               	subwfb	processOpcode@regA_temp16+1,f,c
  3501                           
  3502                           ;emulator.c: 680: if (regA_temp16 < 255) setFbits(4, 1);
  3503  001D7A  0EFF               	movlw	255
  3504  001D7C  5C10               	subwf	processOpcode@regA_temp16,w,c
  3505  001D7E  0E00               	movlw	0
  3506  001D80  5811               	subwfb	processOpcode@regA_temp16+1,w,c
  3507  001D82  B0D8               	btfsc	status,0,c
  3508  001D84  D008               	goto	l1566
  3509  001D86  6E09               	movwf	??_processOpcode& (0+255),c
  3510  001D88  0E01               	movlw	1
  3511  001D8A  6E01               	movwf	setFbits@value,c
  3512  001D8C  5009               	movf	??_processOpcode& (0+255),w,c
  3513  001D8E  0E04               	movlw	4
  3514  001D90  ECAD  F012         	call	_setFbits
  3515  001D94  D007               	goto	l1568
  3516  001D96                     l1566:
  3517                           
  3518                           ;emulator.c: 681: else setFbits(4, 0);
  3519  001D96  6E09               	movwf	??_processOpcode& (0+255),c
  3520  001D98  0E00               	movlw	0
  3521  001D9A  6E01               	movwf	setFbits@value,c
  3522  001D9C  5009               	movf	??_processOpcode& (0+255),w,c
  3523  001D9E  0E04               	movlw	4
  3524  001DA0  ECAD  F012         	call	_setFbits
  3525  001DA4                     l1568:
  3526                           
  3527                           ;emulator.c: 682: regA -= immData_1;
  3528  001DA4  501B               	movf	_immData_1,w,c
  3529  001DA6  5E1D               	subwf	_regA,f,c
  3530  001DA8                     L20:
  3531                           
  3532                           ;emulator.c: 683: regPC++;
  3533  001DA8  4A19               	infsnz	_regPC,f,c
  3534  001DAA  2A1A               	incf	_regPC+1,f,c
  3535                           
  3536                           ;emulator.c: 684: break;
  3537  001DAC  D103               	goto	l1592
  3538  001DAE                     l1572:
  3539                           
  3540                           ;emulator.c: 688: regA_temp16 = regA + 1;
  3541  001DAE  0E01               	movlw	1
  3542  001DB0  241D               	addwf	_regA,w,c
  3543  001DB2  6E10               	movwf	processOpcode@regA_temp16,c
  3544  001DB4  6A11               	clrf	processOpcode@regA_temp16+1,c
  3545  001DB6  0E00               	movlw	0
  3546  001DB8  2211               	addwfc	processOpcode@regA_temp16+1,f,c
  3547                           
  3548                           ;emulator.c: 689: if (regA_temp16 > 255) setFbits(4, 1);
  3549  001DBA  0E00               	movlw	0
  3550  001DBC  5C10               	subwf	processOpcode@regA_temp16,w,c
  3551  001DBE  0E01               	movlw	1
  3552  001DC0  5811               	subwfb	processOpcode@regA_temp16+1,w,c
  3553  001DC2  A0D8               	btfss	status,0,c
  3554  001DC4  D008               	goto	l1576
  3555  001DC6  6E09               	movwf	??_processOpcode& (0+255),c
  3556  001DC8  0E01               	movlw	1
  3557  001DCA  6E01               	movwf	setFbits@value,c
  3558  001DCC  5009               	movf	??_processOpcode& (0+255),w,c
  3559  001DCE  0E04               	movlw	4
  3560  001DD0  ECAD  F012         	call	_setFbits
  3561  001DD4  D007               	goto	l1578
  3562  001DD6                     l1576:
  3563                           
  3564                           ;emulator.c: 690: else setFbits(4, 0);
  3565  001DD6  6E09               	movwf	??_processOpcode& (0+255),c
  3566  001DD8  0E00               	movlw	0
  3567  001DDA  6E01               	movwf	setFbits@value,c
  3568  001DDC  5009               	movf	??_processOpcode& (0+255),w,c
  3569  001DDE  0E04               	movlw	4
  3570  001DE0  ECAD  F012         	call	_setFbits
  3571  001DE4                     l1578:
  3572                           
  3573                           ;emulator.c: 691: regA++;
  3574  001DE4  2A1D               	incf	_regA,f,c
  3575                           
  3576                           ;emulator.c: 692: break;
  3577  001DE6  D0E6               	goto	l1592
  3578  001DE8                     l1580:
  3579                           
  3580                           ;emulator.c: 696: regA_temp8 = regA - 1;
  3581  001DE8  041D               	decf	_regA,w,c
  3582  001DEA  6E0F               	movwf	processOpcode@regA_temp8,c
  3583                           
  3584                           ;emulator.c: 697: if (regA_temp8 == 255) setFbits(4, 1);
  3585  001DEC  280F               	incf	processOpcode@regA_temp8,w,c
  3586  001DEE  A4D8               	btfss	status,2,c
  3587  001DF0  D008               	goto	l1584
  3588  001DF2  6E09               	movwf	??_processOpcode& (0+255),c
  3589  001DF4  0E01               	movlw	1
  3590  001DF6  6E01               	movwf	setFbits@value,c
  3591  001DF8  5009               	movf	??_processOpcode& (0+255),w,c
  3592  001DFA  0E04               	movlw	4
  3593  001DFC  ECAD  F012         	call	_setFbits
  3594  001E00  D007               	goto	l1586
  3595  001E02                     l1584:
  3596                           
  3597                           ;emulator.c: 698: else setFbits(4, 0);
  3598  001E02  6E09               	movwf	??_processOpcode& (0+255),c
  3599  001E04  0E00               	movlw	0
  3600  001E06  6E01               	movwf	setFbits@value,c
  3601  001E08  5009               	movf	??_processOpcode& (0+255),w,c
  3602  001E0A  0E04               	movlw	4
  3603  001E0C  ECAD  F012         	call	_setFbits
  3604  001E10                     l1586:
  3605                           
  3606                           ;emulator.c: 699: regA--;
  3607  001E10  061D               	decf	_regA,f,c
  3608                           
  3609                           ;emulator.c: 700: break;
  3610  001E12  D0D0               	goto	l1592
  3611  001E14                     l1590:
  3612  001E14  0E00               	movlw	low _virtualMemory
  3613  001E16  2419               	addwf	_regPC,w,c
  3614  001E18  6ED9               	movwf	fsr2l,c
  3615  001E1A  0E02               	movlw	high _virtualMemory
  3616  001E1C  201A               	addwfc	_regPC+1,w,c
  3617  001E1E  6EDA               	movwf	fsr2h,c
  3618  001E20  50DF               	movf	indf2,w,c
  3619                           
  3620                           ; Switch size 1, requested type "space"
  3621                           ; Number of cases is 67, Range of values is 1 to 85
  3622                           ; switch strategies available:
  3623                           ; Name         Instructions Cycles
  3624                           ; simple_byte          202   102 (average)
  3625                           ;	Chosen strategy is simple_byte
  3626  001E22  0A01               	xorlw	1	; case 1
  3627  001E24  B4D8               	btfsc	status,2,c
  3628  001E26  D4FB               	goto	l1314
  3629  001E28  0A03               	xorlw	3	; case 2
  3630  001E2A  B4D8               	btfsc	status,2,c
  3631  001E2C  D500               	goto	l1316
  3632  001E2E  0A01               	xorlw	1	; case 3
  3633  001E30  B4D8               	btfsc	status,2,c
  3634  001E32  D505               	goto	l1318
  3635  001E34  0A07               	xorlw	7	; case 4
  3636  001E36  B4D8               	btfsc	status,2,c
  3637  001E38  D506               	goto	l1320
  3638  001E3A  0A01               	xorlw	1	; case 5
  3639  001E3C  B4D8               	btfsc	status,2,c
  3640  001E3E  D508               	goto	l1324
  3641  001E40  0A03               	xorlw	3	; case 6
  3642  001E42  B4D8               	btfsc	status,2,c
  3643  001E44  D50B               	goto	l1326
  3644  001E46  0A01               	xorlw	1	; case 7
  3645  001E48  B4D8               	btfsc	status,2,c
  3646  001E4A  D50E               	goto	l1330
  3647  001E4C  0A17               	xorlw	23	; case 16
  3648  001E4E  B4D8               	btfsc	status,2,c
  3649  001E50  D511               	goto	l1334
  3650  001E52  0A01               	xorlw	1	; case 17
  3651  001E54  B4D8               	btfsc	status,2,c
  3652  001E56  D514               	goto	l1336
  3653  001E58  0A03               	xorlw	3	; case 18
  3654  001E5A  B4D8               	btfsc	status,2,c
  3655  001E5C  D515               	goto	l1338
  3656  001E5E  0A01               	xorlw	1	; case 19
  3657  001E60  B4D8               	btfsc	status,2,c
  3658  001E62  D516               	goto	l258
  3659  001E64  0A07               	xorlw	7	; case 20
  3660  001E66  B4D8               	btfsc	status,2,c
  3661  001E68  D516               	goto	l259
  3662  001E6A  0A01               	xorlw	1	; case 21
  3663  001E6C  B4D8               	btfsc	status,2,c
  3664  001E6E  D516               	goto	l260
  3665  001E70  0A03               	xorlw	3	; case 22
  3666  001E72  B4D8               	btfsc	status,2,c
  3667  001E74  D516               	goto	l1340
  3668  001E76  0A01               	xorlw	1	; case 23
  3669  001E78  B4D8               	btfsc	status,2,c
  3670  001E7A  D51C               	goto	l1342
  3671  001E7C  0A0F               	xorlw	15	; case 24
  3672  001E7E  B4D8               	btfsc	status,2,c
  3673  001E80  D51F               	goto	l1344
  3674  001E82  0A01               	xorlw	1	; case 25
  3675  001E84  B4D8               	btfsc	status,2,c
  3676  001E86  D522               	goto	l264
  3677  001E88  0A03               	xorlw	3	; case 26
  3678  001E8A  B4D8               	btfsc	status,2,c
  3679  001E8C  D522               	goto	l265
  3680  001E8E  0A01               	xorlw	1	; case 27
  3681  001E90  B4D8               	btfsc	status,2,c
  3682  001E92  D522               	goto	l266
  3683  001E94  0A07               	xorlw	7	; case 28
  3684  001E96  B4D8               	btfsc	status,2,c
  3685  001E98  D522               	goto	l267
  3686  001E9A  0A3C               	xorlw	60	; case 32
  3687  001E9C  B4D8               	btfsc	status,2,c
  3688  001E9E  D526               	goto	l1348
  3689  001EA0  0A01               	xorlw	1	; case 33
  3690  001EA2  B4D8               	btfsc	status,2,c
  3691  001EA4  D526               	goto	l1350
  3692  001EA6  0A03               	xorlw	3	; case 34
  3693  001EA8  B4D8               	btfsc	status,2,c
  3694  001EAA  D526               	goto	l1354
  3695  001EAC  0A01               	xorlw	1	; case 35
  3696  001EAE  B4D8               	btfsc	status,2,c
  3697  001EB0  D526               	goto	l1356
  3698  001EB2  0A07               	xorlw	7	; case 36
  3699  001EB4  B4D8               	btfsc	status,2,c
  3700  001EB6  D529               	goto	l1362
  3701  001EB8  0A01               	xorlw	1	; case 37
  3702  001EBA  B4D8               	btfsc	status,2,c
  3703  001EBC  D529               	goto	l1366
  3704  001EBE  0A03               	xorlw	3	; case 38
  3705  001EC0  B4D8               	btfsc	status,2,c
  3706  001EC2  D528               	goto	l275
  3707  001EC4  0A01               	xorlw	1	; case 39
  3708  001EC6  B4D8               	btfsc	status,2,c
  3709  001EC8  D53A               	goto	l278
  3710  001ECA  0A0F               	xorlw	15	; case 40
  3711  001ECC  B4D8               	btfsc	status,2,c
  3712  001ECE  D54C               	goto	l281
  3713  001ED0  0A01               	xorlw	1	; case 41
  3714  001ED2  B4D8               	btfsc	status,2,c
  3715  001ED4  D54E               	goto	l282
  3716  001ED6  0A03               	xorlw	3	; case 42
  3717  001ED8  B4D8               	btfsc	status,2,c
  3718  001EDA  D54F               	goto	l1384
  3719  001EDC  0A01               	xorlw	1	; case 43
  3720  001EDE  B4D8               	btfsc	status,2,c
  3721  001EE0  D511               	goto	l1360
  3722  001EE2  0A1B               	xorlw	27	; case 48
  3723  001EE4  B4D8               	btfsc	status,2,c
  3724  001EE6  D5F3               	goto	L13
  3725  001EE8  0A01               	xorlw	1	; case 49
  3726  001EEA  B4D8               	btfsc	status,2,c
  3727  001EEC  D57F               	goto	l1402
  3728  001EEE  0A03               	xorlw	3	; case 50
  3729  001EF0  B4D8               	btfsc	status,2,c
  3730  001EF2  D57F               	goto	l1406
  3731  001EF4  0A01               	xorlw	1	; case 51
  3732  001EF6  B4D8               	btfsc	status,2,c
  3733  001EF8  D584               	goto	l1410
  3734  001EFA  0A07               	xorlw	7	; case 52
  3735  001EFC  B4D8               	btfsc	status,2,c
  3736  001EFE  D58F               	goto	l1416
  3737  001F00  0A01               	xorlw	1	; case 53
  3738  001F02  B4D8               	btfsc	status,2,c
  3739  001F04  D590               	goto	l1420
  3740  001F06  0A03               	xorlw	3	; case 54
  3741  001F08  B4D8               	btfsc	status,2,c
  3742  001F0A  D596               	goto	l1426
  3743  001F0C  0A01               	xorlw	1	; case 55
  3744  001F0E  B4D8               	btfsc	status,2,c
  3745  001F10  D597               	goto	l1430
  3746  001F12  0A0F               	xorlw	15	; case 56
  3747  001F14  B4D8               	btfsc	status,2,c
  3748  001F16  D59E               	goto	l1436
  3749  001F18  0A01               	xorlw	1	; case 57
  3750  001F1A  B4D8               	btfsc	status,2,c
  3751  001F1C  D59F               	goto	l1440
  3752  001F1E  0A03               	xorlw	3	; case 58
  3753  001F20  B4D8               	btfsc	status,2,c
  3754  001F22  D5A6               	goto	l1446
  3755  001F24  0A01               	xorlw	1	; case 59
  3756  001F26  B4D8               	btfsc	status,2,c
  3757  001F28  D5A7               	goto	l1450
  3758  001F2A  0A07               	xorlw	7	; case 60
  3759  001F2C  B4D8               	btfsc	status,2,c
  3760  001F2E  D5AE               	goto	l1456
  3761  001F30  0A01               	xorlw	1	; case 61
  3762  001F32  B4D8               	btfsc	status,2,c
  3763  001F34  D5B0               	goto	l1460
  3764  001F36  0A03               	xorlw	3	; case 62
  3765  001F38  B4D8               	btfsc	status,2,c
  3766  001F3A  D5BB               	goto	l1466
  3767  001F3C  0A01               	xorlw	1	; case 63
  3768  001F3E  B4D8               	btfsc	status,2,c
  3769  001F40  D5CB               	goto	l1472
  3770  001F42  0A7F               	xorlw	127	; case 64
  3771  001F44  B4D8               	btfsc	status,2,c
  3772  001F46  D5D9               	goto	l1480
  3773  001F48  0A01               	xorlw	1	; case 65
  3774  001F4A  B4D8               	btfsc	status,2,c
  3775  001F4C  D5FD               	goto	l1486
  3776  001F4E  0A03               	xorlw	3	; case 66
  3777  001F50  B4D8               	btfsc	status,2,c
  3778  001F52  D607               	goto	l1490
  3779  001F54  0A01               	xorlw	1	; case 67
  3780  001F56  B4D8               	btfsc	status,2,c
  3781  001F58  D611               	goto	l1494
  3782  001F5A  0A07               	xorlw	7	; case 68
  3783  001F5C  B4D8               	btfsc	status,2,c
  3784  001F5E  D61D               	goto	l1498
  3785  001F60  0A01               	xorlw	1	; case 69
  3786  001F62  B4D8               	btfsc	status,2,c
  3787  001F64  D62A               	goto	l1502
  3788  001F66  0A03               	xorlw	3	; case 70
  3789  001F68  B4D8               	btfsc	status,2,c
  3790  001F6A  D636               	goto	l1506
  3791  001F6C  0A01               	xorlw	1	; case 71
  3792  001F6E  B4D8               	btfsc	status,2,c
  3793  001F70  D640               	goto	l1510
  3794  001F72  0A0F               	xorlw	15	; case 72
  3795  001F74  B4D8               	btfsc	status,2,c
  3796  001F76  D64B               	goto	l1516
  3797  001F78  0A01               	xorlw	1	; case 73
  3798  001F7A  B4D8               	btfsc	status,2,c
  3799  001F7C  D656               	goto	l1520
  3800  001F7E  0A03               	xorlw	3	; case 74
  3801  001F80  B4D8               	btfsc	status,2,c
  3802  001F82  D661               	goto	l1524
  3803  001F84  0A01               	xorlw	1	; case 75
  3804  001F86  B4D8               	btfsc	status,2,c
  3805  001F88  D670               	goto	l1528
  3806  001F8A  0A07               	xorlw	7	; case 76
  3807  001F8C  B4D8               	btfsc	status,2,c
  3808  001F8E  D67E               	goto	l1532
  3809  001F90  0A1C               	xorlw	28	; case 80
  3810  001F92  B4D8               	btfsc	status,2,c
  3811  001F94  D68C               	goto	l1536
  3812  001F96  0A01               	xorlw	1	; case 81
  3813  001F98  B4D8               	btfsc	status,2,c
  3814  001F9A  D6A5               	goto	l1544
  3815  001F9C  0A03               	xorlw	3	; case 82
  3816  001F9E  B4D8               	btfsc	status,2,c
  3817  001FA0  D6BE               	goto	l337
  3818  001FA2  0A01               	xorlw	1	; case 83
  3819  001FA4  B4D8               	btfsc	status,2,c
  3820  001FA6  D6DE               	goto	l340
  3821  001FA8  0A07               	xorlw	7	; case 84
  3822  001FAA  B4D8               	btfsc	status,2,c
  3823  001FAC  D700               	goto	l1572
  3824  001FAE  0A01               	xorlw	1	; case 85
  3825  001FB0  B4D8               	btfsc	status,2,c
  3826  001FB2  D71A               	goto	l1580
  3827  001FB4                     l1592:
  3828                           
  3829                           ;emulator.c: 704: regPC++;
  3830  001FB4  4A19               	infsnz	_regPC,f,c
  3831  001FB6  2A1A               	incf	_regPC+1,f,c
  3832  001FB8  0012               	return	
  3833  001FBA                     __end_of_processOpcode:
  3834                           	opt stack 0
  3835                           tblptru	equ	0xFF8
  3836                           tblptrh	equ	0xFF7
  3837                           tblptrl	equ	0xFF6
  3838                           tablat	equ	0xFF5
  3839                           prodh	equ	0xFF4
  3840                           prodl	equ	0xFF3
  3841                           postinc0	equ	0xFEE
  3842                           wreg	equ	0xFE8
  3843                           postdec1	equ	0xFE5
  3844                           fsr1h	equ	0xFE2
  3845                           fsr1l	equ	0xFE1
  3846                           indf2	equ	0xFDF
  3847                           fsr2h	equ	0xFDA
  3848                           fsr2l	equ	0xFD9
  3849                           status	equ	0xFD8
  3850                           
  3851 ;; *************** function _update_immData *****************
  3852 ;; Defined at:
  3853 ;;		line 240 in file "source/emulator.c"
  3854 ;; Parameters:    Size  Location     Type
  3855 ;;		None
  3856 ;; Auto vars:     Size  Location     Type
  3857 ;;		None
  3858 ;; Return value:  Size  Location     Type
  3859 ;;		None               void
  3860 ;; Registers used:
  3861 ;;		wreg, status,2, status,0
  3862 ;; Tracked objects:
  3863 ;;		On entry : 0/0
  3864 ;;		On exit  : 0/0
  3865 ;;		Unchanged: 0/0
  3866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3869 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3870 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3871 ;;Total ram usage:        2 bytes
  3872 ;; Hardware stack levels used:    1
  3873 ;; This function calls:
  3874 ;;		Nothing
  3875 ;; This function is called by:
  3876 ;;		_processOpcode
  3877 ;; This function uses a non-reentrant model
  3878 ;;
  3879                           
  3880                           	psect	text2
  3881  002462                     __ptext2:
  3882                           	opt stack 0
  3883  002462                     _update_immData:
  3884                           	opt stack 29
  3885                           
  3886                           ;emulator.c: 243: if (regPC + 1 == 2047 + 1) immData_1 = 256;
  3887                           
  3888                           ;incstack = 0
  3889  002462  0E01               	movlw	1
  3890  002464  2419               	addwf	_regPC,w,c
  3891  002466  6E01               	movwf	??_update_immData& (0+255),c
  3892  002468  0E00               	movlw	0
  3893  00246A  201A               	addwfc	_regPC+1,w,c
  3894  00246C  6E02               	movwf	(??_update_immData+1)& (0+255),c
  3895  00246E  5002               	movf	??_update_immData+1,w,c
  3896  002470  0A08               	xorlw	8
  3897  002472  1001               	iorwf	??_update_immData,w,c
  3898  002474  A4D8               	btfss	status,2,c
  3899  002476  D004               	goto	l1252
  3900  002478  6E01               	movwf	??_update_immData& (0+255),c
  3901  00247A  0E00               	movlw	0
  3902  00247C  6E1B               	movwf	_immData_1,c
  3903  00247E  5001               	movf	??_update_immData& (0+255),w,c
  3904  002480                     l1252:
  3905                           
  3906                           ;emulator.c: 244: if (regPC + 2 == 2047 + 1) immData_2 = 256;
  3907  002480  0E02               	movlw	2
  3908  002482  2419               	addwf	_regPC,w,c
  3909  002484  6E01               	movwf	??_update_immData& (0+255),c
  3910  002486  0E00               	movlw	0
  3911  002488  201A               	addwfc	_regPC+1,w,c
  3912  00248A  6E02               	movwf	(??_update_immData+1)& (0+255),c
  3913  00248C  5002               	movf	??_update_immData+1,w,c
  3914  00248E  0A08               	xorlw	8
  3915  002490  1001               	iorwf	??_update_immData,w,c
  3916  002492  A4D8               	btfss	status,2,c
  3917  002494  D004               	goto	l1256
  3918  002496  6E01               	movwf	??_update_immData& (0+255),c
  3919  002498  0E00               	movlw	0
  3920  00249A  6E1C               	movwf	_immData_2,c
  3921  00249C  5001               	movf	??_update_immData& (0+255),w,c
  3922  00249E                     l1256:
  3923                           
  3924                           ;emulator.c: 245: if (regPC + 2 == 2047 + 2) immData_2 = 256 + 1;
  3925  00249E  0E02               	movlw	2
  3926  0024A0  2419               	addwf	_regPC,w,c
  3927  0024A2  6E01               	movwf	??_update_immData& (0+255),c
  3928  0024A4  0E00               	movlw	0
  3929  0024A6  201A               	addwfc	_regPC+1,w,c
  3930  0024A8  6E02               	movwf	(??_update_immData+1)& (0+255),c
  3931  0024AA  0401               	decf	??_update_immData,w,c
  3932  0024AC  0E08               	movlw	8
  3933  0024AE  B4D8               	btfsc	status,2,c
  3934  0024B0  1802               	xorwf	??_update_immData+1,w,c
  3935  0024B2  A4D8               	btfss	status,2,c
  3936  0024B4  0012               	return	
  3937  0024B6  6E01               	movwf	??_update_immData& (0+255),c
  3938  0024B8  0E01               	movlw	1
  3939  0024BA  6E1C               	movwf	_immData_2,c
  3940  0024BC  5001               	movf	??_update_immData& (0+255),w,c
  3941  0024BE  0012               	return	
  3942  0024C0                     __end_of_update_immData:
  3943                           	opt stack 0
  3944                           tblptru	equ	0xFF8
  3945                           tblptrh	equ	0xFF7
  3946                           tblptrl	equ	0xFF6
  3947                           tablat	equ	0xFF5
  3948                           prodh	equ	0xFF4
  3949                           prodl	equ	0xFF3
  3950                           postinc0	equ	0xFEE
  3951                           wreg	equ	0xFE8
  3952                           postdec1	equ	0xFE5
  3953                           fsr1h	equ	0xFE2
  3954                           fsr1l	equ	0xFE1
  3955                           indf2	equ	0xFDF
  3956                           fsr2h	equ	0xFDA
  3957                           fsr2l	equ	0xFD9
  3958                           status	equ	0xFD8
  3959                           
  3960 ;; *************** function _setPortData *****************
  3961 ;; Defined at:
  3962 ;;		line 212 in file "source/emulator.c"
  3963 ;; Parameters:    Size  Location     Type
  3964 ;;  portNumber      1    wreg     unsigned char 
  3965 ;;  outputData      1    4[COMRAM] unsigned char 
  3966 ;; Auto vars:     Size  Location     Type
  3967 ;;  portNumber      1    5[COMRAM] unsigned char 
  3968 ;;  outputData_t    2    6[COMRAM] unsigned int 
  3969 ;; Return value:  Size  Location     Type
  3970 ;;		None               void
  3971 ;; Registers used:
  3972 ;;		wreg, status,2, status,0, cstack
  3973 ;; Tracked objects:
  3974 ;;		On entry : 0/0
  3975 ;;		On exit  : 0/0
  3976 ;;		Unchanged: 0/0
  3977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3978 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3979 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3981 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3982 ;;Total ram usage:        4 bytes
  3983 ;; Hardware stack levels used:    1
  3984 ;; Hardware stack levels required when called:    1
  3985 ;; This function calls:
  3986 ;;		_dispSeg
  3987 ;;		_enableSerial
  3988 ;; This function is called by:
  3989 ;;		_processOpcode
  3990 ;; This function uses a non-reentrant model
  3991 ;;
  3992                           
  3993                           	psect	text3
  3994  0022D8                     __ptext3:
  3995                           	opt stack 0
  3996  0022D8                     _setPortData:
  3997                           	opt stack 28
  3998                           
  3999                           ;incstack = 0
  4000                           ;setPortData@portNumber stored from wreg
  4001  0022D8  CFE8 F006          	movff	wreg,setPortData@portNumber
  4002                           
  4003                           ;emulator.c: 214: uint16_t outputData_temp16;
  4004                           ;emulator.c: 215: switch (portNumber)
  4005  0022DC  D03B               	goto	l1304
  4006  0022DE                     l226:
  4007                           
  4008                           ;emulator.c: 218: if (outputData == 0) outputData_temp16 = 1200;
  4009  0022DE  6605               	tstfsz	setPortData@outputData,c
  4010  0022E0  D004               	goto	l1280
  4011  0022E2  0E04               	movlw	4
  4012  0022E4  6E08               	movwf	setPortData@outputData_temp16+1,c
  4013  0022E6  0EB0               	movlw	176
  4014  0022E8  6E07               	movwf	setPortData@outputData_temp16,c
  4015  0022EA                     l1280:
  4016                           
  4017                           ;emulator.c: 219: if (outputData == 1) outputData_temp16 = 2400;
  4018  0022EA  0405               	decf	setPortData@outputData,w,c
  4019  0022EC  A4D8               	btfss	status,2,c
  4020  0022EE  D004               	goto	l1284
  4021  0022F0  0E09               	movlw	9
  4022  0022F2  6E08               	movwf	setPortData@outputData_temp16+1,c
  4023  0022F4  0E60               	movlw	96
  4024  0022F6  6E07               	movwf	setPortData@outputData_temp16,c
  4025  0022F8                     l1284:
  4026                           
  4027                           ;emulator.c: 220: if (outputData == 2) outputData_temp16 = 9600;
  4028  0022F8  5005               	movf	setPortData@outputData,w,c
  4029  0022FA  0A02               	xorlw	2
  4030  0022FC  A4D8               	btfss	status,2,c
  4031  0022FE  D004               	goto	l1288
  4032  002300  0E25               	movlw	37
  4033  002302  6E08               	movwf	setPortData@outputData_temp16+1,c
  4034  002304  0E80               	movlw	128
  4035  002306  6E07               	movwf	setPortData@outputData_temp16,c
  4036  002308                     l1288:
  4037                           
  4038                           ;emulator.c: 221: if (outputData == 3) outputData_temp16 = 10417;
  4039  002308  5005               	movf	setPortData@outputData,w,c
  4040  00230A  0A03               	xorlw	3
  4041  00230C  A4D8               	btfss	status,2,c
  4042  00230E  D004               	goto	l1292
  4043  002310  0E28               	movlw	40
  4044  002312  6E08               	movwf	setPortData@outputData_temp16+1,c
  4045  002314  0EB1               	movlw	177
  4046  002316  6E07               	movwf	setPortData@outputData_temp16,c
  4047  002318                     l1292:
  4048                           
  4049                           ;emulator.c: 222: if (outputData == 4) outputData_temp16 = 19200;
  4050  002318  5005               	movf	setPortData@outputData,w,c
  4051  00231A  0A04               	xorlw	4
  4052  00231C  A4D8               	btfss	status,2,c
  4053  00231E  D004               	goto	l1296
  4054  002320  0E4B               	movlw	75
  4055  002322  6E08               	movwf	setPortData@outputData_temp16+1,c
  4056  002324  0E00               	movlw	0
  4057  002326  6E07               	movwf	setPortData@outputData_temp16,c
  4058  002328                     l1296:
  4059                           
  4060                           ;emulator.c: 223: enableSerial(outputData_temp16);
  4061  002328  C007  F001         	movff	setPortData@outputData_temp16,enableSerial@baudRate
  4062  00232C  C008  F002         	movff	setPortData@outputData_temp16+1,enableSerial@baudRate+1
  4063  002330  ECB8  F011         	call	_enableSerial	;wreg free
  4064                           
  4065                           ;emulator.c: 224: break;
  4066  002334  0012               	return	
  4067  002336                     l233:
  4068                           
  4069                           ;emulator.c: 227: TXREG2 = outputData;
  4070  002336  C005  FF73         	movff	setPortData@outputData,3955	;volatile
  4071                           
  4072                           ;emulator.c: 228: break;
  4073  00233A  0012               	return	
  4074  00233C                     l1298:
  4075                           
  4076                           ;emulator.c: 231: dispSeg(1, outputData);
  4077  00233C  C005  F001         	movff	setPortData@outputData,dispSeg@letter
  4078  002340  0E01               	movlw	1
  4079  002342  ECDD  F00F         	call	_dispSeg
  4080                           
  4081                           ;emulator.c: 232: break;
  4082  002346  0012               	return	
  4083  002348                     l1300:
  4084                           
  4085                           ;emulator.c: 235: dispSeg(2, outputData);
  4086  002348  C005  F001         	movff	setPortData@outputData,dispSeg@letter
  4087  00234C  0E02               	movlw	2
  4088  00234E  ECDD  F00F         	call	_dispSeg
  4089                           
  4090                           ;emulator.c: 236: break;
  4091  002352  0012               	return	
  4092  002354                     l1304:
  4093  002354  5006               	movf	setPortData@portNumber,w,c
  4094                           
  4095                           ; Switch size 1, requested type "space"
  4096                           ; Number of cases is 4, Range of values is 0 to 4
  4097                           ; switch strategies available:
  4098                           ; Name         Instructions Cycles
  4099                           ; simple_byte           13     7 (average)
  4100                           ;	Chosen strategy is simple_byte
  4101  002356  0A00               	xorlw	0	; case 0
  4102  002358  B4D8               	btfsc	status,2,c
  4103  00235A  D7C1               	goto	l226
  4104  00235C  0A01               	xorlw	1	; case 1
  4105  00235E  B4D8               	btfsc	status,2,c
  4106  002360  D7EA               	goto	l233
  4107  002362  0A02               	xorlw	2	; case 3
  4108  002364  B4D8               	btfsc	status,2,c
  4109  002366  D7EA               	goto	l1298
  4110  002368  0A07               	xorlw	7	; case 4
  4111  00236A  A4D8               	btfss	status,2,c
  4112  00236C  0012               	return	
  4113  00236E  D7EC               	goto	l1300
  4114  002370                     __end_of_setPortData:
  4115                           	opt stack 0
  4116                           tblptru	equ	0xFF8
  4117                           tblptrh	equ	0xFF7
  4118                           tblptrl	equ	0xFF6
  4119                           tablat	equ	0xFF5
  4120                           prodh	equ	0xFF4
  4121                           prodl	equ	0xFF3
  4122                           postinc0	equ	0xFEE
  4123                           wreg	equ	0xFE8
  4124                           postdec1	equ	0xFE5
  4125                           fsr1h	equ	0xFE2
  4126                           fsr1l	equ	0xFE1
  4127                           indf2	equ	0xFDF
  4128                           fsr2h	equ	0xFDA
  4129                           fsr2l	equ	0xFD9
  4130                           status	equ	0xFD8
  4131                           
  4132 ;; *************** function _enableSerial *****************
  4133 ;; Defined at:
  4134 ;;		line 21 in file "source/serial.c"
  4135 ;; Parameters:    Size  Location     Type
  4136 ;;  baudRate        2    0[COMRAM] unsigned int 
  4137 ;; Auto vars:     Size  Location     Type
  4138 ;;		None
  4139 ;; Return value:  Size  Location     Type
  4140 ;;		None               void
  4141 ;; Registers used:
  4142 ;;		wreg, status,2, status,0
  4143 ;; Tracked objects:
  4144 ;;		On entry : 0/0
  4145 ;;		On exit  : 0/0
  4146 ;;		Unchanged: 0/0
  4147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4148 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4150 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4151 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4152 ;;Total ram usage:        4 bytes
  4153 ;; Hardware stack levels used:    1
  4154 ;; This function calls:
  4155 ;;		Nothing
  4156 ;; This function is called by:
  4157 ;;		_setPortData
  4158 ;; This function uses a non-reentrant model
  4159 ;;
  4160                           
  4161                           	psect	text4
  4162  002370                     __ptext4:
  4163                           	opt stack 0
  4164  002370                     _enableSerial:
  4165                           	opt stack 28
  4166                           
  4167                           ;serial.c: 23: LATDbits.LD3 = 1;
  4168                           
  4169                           ;incstack = 0
  4170  002370  868C               	bsf	3980,3,c	;volatile
  4171                           
  4172                           ;serial.c: 26: switch (baudRate) {
  4173  002372  D00B               	goto	l1206
  4174  002374                     l1196:
  4175                           
  4176                           ;serial.c: 31: SPBRG2 = 103;
  4177  002374  0E67               	movlw	103
  4178  002376  D007               	goto	L33
  4179  002378                     l1198:
  4180                           
  4181                           ;serial.c: 34: SPBRG2 = 25;
  4182  002378  0E19               	movlw	25
  4183  00237A  D005               	goto	L33
  4184  00237C                     l1200:
  4185                           
  4186                           ;serial.c: 37: SPBRG2 = 23;
  4187  00237C  0E17               	movlw	23
  4188  00237E  D003               	goto	L33
  4189  002380                     l1202:
  4190                           
  4191                           ;serial.c: 40: SPBRG2 = 12;
  4192  002380  0E0C               	movlw	12
  4193  002382  D001               	goto	L33
  4194  002384                     l1204:
  4195                           
  4196                           ;serial.c: 43: SPBRG2 = 207;
  4197  002384  0ECF               	movlw	207
  4198  002386                     L33:
  4199  002386  6E75               	movwf	3957,c	;volatile
  4200                           
  4201                           ;serial.c: 44: }
  4202  002388  D02C               	goto	l1208
  4203  00238A                     l1206:
  4204  00238A  C001  F003         	movff	enableSerial@baudRate,??_enableSerial
  4205  00238E  C002  F004         	movff	enableSerial@baudRate+1,??_enableSerial+1
  4206                           
  4207                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 5 sub-sw
      +                          itches
  4208                           ; Switch size 1, requested type "space"
  4209                           ; Number of cases is 5, Range of values is 4 to 75
  4210                           ; switch strategies available:
  4211                           ; Name         Instructions Cycles
  4212                           ; simple_byte           16     9 (average)
  4213                           ;	Chosen strategy is simple_byte
  4214  002392  5004               	movf	??_enableSerial+1,w,c
  4215  002394  0A04               	xorlw	4	; case 4
  4216  002396  B4D8               	btfsc	status,2,c
  4217  002398  D00D               	goto	l1710
  4218  00239A  0A0D               	xorlw	13	; case 9
  4219  00239C  B4D8               	btfsc	status,2,c
  4220  00239E  D00D               	goto	l1712
  4221  0023A0  0A2C               	xorlw	44	; case 37
  4222  0023A2  B4D8               	btfsc	status,2,c
  4223  0023A4  D00F               	goto	l1714
  4224  0023A6  0A0D               	xorlw	13	; case 40
  4225  0023A8  B4D8               	btfsc	status,2,c
  4226  0023AA  D011               	goto	l1716
  4227  0023AC  0A63               	xorlw	99	; case 75
  4228  0023AE  B4D8               	btfsc	status,2,c
  4229  0023B0  D013               	goto	l1718
  4230  0023B2  D7E8               	goto	l1204
  4231  0023B4                     l1710:
  4232                           
  4233                           ; Switch size 1, requested type "space"
  4234                           ; Number of cases is 1, Range of values is 176 to 176
  4235                           ; switch strategies available:
  4236                           ; Name         Instructions Cycles
  4237                           ; simple_byte            4     3 (average)
  4238                           ;	Chosen strategy is simple_byte
  4239  0023B4  5003               	movf	??_enableSerial,w,c
  4240  0023B6  0AB0               	xorlw	176	; case 176
  4241  0023B8  D7E5               	goto	l1204
  4242  0023BA                     l1712:
  4243                           
  4244                           ; Switch size 1, requested type "space"
  4245                           ; Number of cases is 1, Range of values is 96 to 96
  4246                           ; switch strategies available:
  4247                           ; Name         Instructions Cycles
  4248                           ; simple_byte            4     3 (average)
  4249                           ;	Chosen strategy is simple_byte
  4250  0023BA  5003               	movf	??_enableSerial,w,c
  4251  0023BC  0A60               	xorlw	96	; case 96
  4252  0023BE  B4D8               	btfsc	status,2,c
  4253  0023C0  D7D9               	goto	l1196
  4254  0023C2  D7E0               	goto	l1204
  4255  0023C4                     l1714:
  4256                           
  4257                           ; Switch size 1, requested type "space"
  4258                           ; Number of cases is 1, Range of values is 128 to 128
  4259                           ; switch strategies available:
  4260                           ; Name         Instructions Cycles
  4261                           ; simple_byte            4     3 (average)
  4262                           ;	Chosen strategy is simple_byte
  4263  0023C4  5003               	movf	??_enableSerial,w,c
  4264  0023C6  0A80               	xorlw	128	; case 128
  4265  0023C8  B4D8               	btfsc	status,2,c
  4266  0023CA  D7D6               	goto	l1198
  4267  0023CC  D7DB               	goto	l1204
  4268  0023CE                     l1716:
  4269                           
  4270                           ; Switch size 1, requested type "space"
  4271                           ; Number of cases is 1, Range of values is 177 to 177
  4272                           ; switch strategies available:
  4273                           ; Name         Instructions Cycles
  4274                           ; simple_byte            4     3 (average)
  4275                           ;	Chosen strategy is simple_byte
  4276  0023CE  5003               	movf	??_enableSerial,w,c
  4277  0023D0  0AB1               	xorlw	177	; case 177
  4278  0023D2  B4D8               	btfsc	status,2,c
  4279  0023D4  D7D3               	goto	l1200
  4280  0023D6  D7D6               	goto	l1204
  4281  0023D8                     l1718:
  4282                           
  4283                           ; Switch size 1, requested type "space"
  4284                           ; Number of cases is 1, Range of values is 0 to 0
  4285                           ; switch strategies available:
  4286                           ; Name         Instructions Cycles
  4287                           ; simple_byte            4     3 (average)
  4288                           ;	Chosen strategy is simple_byte
  4289  0023D8  5003               	movf	??_enableSerial,w,c
  4290  0023DA  0A00               	xorlw	0	; case 0
  4291  0023DC  B4D8               	btfsc	status,2,c
  4292  0023DE  D7D0               	goto	l1202
  4293  0023E0  D7D1               	goto	l1204
  4294  0023E2                     l1208:
  4295                           
  4296                           ;serial.c: 46: SPBRGH2 = 0;
  4297  0023E2  0E00               	movlw	0
  4298  0023E4  6E76               	movwf	3958,c	;volatile
  4299                           
  4300                           ;serial.c: 47: TXSTA2bits.BRGH = 0;
  4301  0023E6  9472               	bcf	3954,2,c	;volatile
  4302                           
  4303                           ;serial.c: 48: BAUDCON2bits.BRG16 = 0;
  4304  0023E8  9670               	bcf	3952,3,c	;volatile
  4305                           
  4306                           ;serial.c: 50: TXSTA2bits.TX9 = 0;
  4307  0023EA  9C72               	bcf	3954,6,c	;volatile
  4308                           
  4309                           ;serial.c: 51: RCSTA2bits.RX9 = 0;
  4310  0023EC  9C71               	bcf	3953,6,c	;volatile
  4311                           
  4312                           ;serial.c: 53: TXSTA2bits.SYNC = 0;
  4313  0023EE  9872               	bcf	3954,4,c	;volatile
  4314                           
  4315                           ;serial.c: 54: BAUDCON2bits.DTRXP = 0;
  4316  0023F0  9A70               	bcf	3952,5,c	;volatile
  4317                           
  4318                           ;serial.c: 56: TXSTA2bits.TXEN = 1;
  4319  0023F2  8A72               	bsf	3954,5,c	;volatile
  4320                           
  4321                           ;serial.c: 57: RCSTA2bits.CREN = 1;
  4322  0023F4  8871               	bsf	3953,4,c	;volatile
  4323                           
  4324                           ;serial.c: 59: RCSTA2bits.SPEN = 1;
  4325  0023F6  8E71               	bsf	3953,7,c	;volatile
  4326  0023F8  0012               	return	
  4327  0023FA                     __end_of_enableSerial:
  4328                           	opt stack 0
  4329                           tblptru	equ	0xFF8
  4330                           tblptrh	equ	0xFF7
  4331                           tblptrl	equ	0xFF6
  4332                           tablat	equ	0xFF5
  4333                           prodh	equ	0xFF4
  4334                           prodl	equ	0xFF3
  4335                           postinc0	equ	0xFEE
  4336                           wreg	equ	0xFE8
  4337                           postdec1	equ	0xFE5
  4338                           fsr1h	equ	0xFE2
  4339                           fsr1l	equ	0xFE1
  4340                           indf2	equ	0xFDF
  4341                           fsr2h	equ	0xFDA
  4342                           fsr2l	equ	0xFD9
  4343                           status	equ	0xFD8
  4344                           
  4345 ;; *************** function _dispSeg *****************
  4346 ;; Defined at:
  4347 ;;		line 13 in file "source/segment.c"
  4348 ;; Parameters:    Size  Location     Type
  4349 ;;  segment         1    wreg     unsigned char 
  4350 ;;  letter          1    0[COMRAM] unsigned char 
  4351 ;; Auto vars:     Size  Location     Type
  4352 ;;  segment         1    1[COMRAM] unsigned char 
  4353 ;; Return value:  Size  Location     Type
  4354 ;;		None               void
  4355 ;; Registers used:
  4356 ;;		wreg, status,2, status,0
  4357 ;; Tracked objects:
  4358 ;;		On entry : 0/0
  4359 ;;		On exit  : 0/0
  4360 ;;		Unchanged: 0/0
  4361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4362 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4363 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4365 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4366 ;;Total ram usage:        2 bytes
  4367 ;; Hardware stack levels used:    1
  4368 ;; This function calls:
  4369 ;;		Nothing
  4370 ;; This function is called by:
  4371 ;;		_main
  4372 ;;		_setPortData
  4373 ;;		_cycleSegDisplays
  4374 ;; This function uses a non-reentrant model
  4375 ;;
  4376                           
  4377                           	psect	text5
  4378  001FBA                     __ptext5:
  4379                           	opt stack 0
  4380  001FBA                     _dispSeg:
  4381                           	opt stack 28
  4382                           
  4383                           ;incstack = 0
  4384                           ;dispSeg@segment stored from wreg
  4385  001FBA  CFE8 F002          	movff	wreg,dispSeg@segment
  4386                           
  4387                           ;segment.c: 15: switch (letter) {
  4388  001FBE  D154               	goto	l1060
  4389  001FC0                     l986:
  4390                           
  4391                           ;segment.c: 17: if (segment == 1) {
  4392  001FC0  0402               	decf	dispSeg@segment,w,c
  4393  001FC2  A4D8               	btfss	status,2,c
  4394  001FC4  D007               	goto	l50
  4395                           
  4396                           ;segment.c: 18: LATAbits.LA2 = LATAbits.LA3 = LATAbits.LA4 = LATAbits.LA5 = LATEbits.LE0
      +                           = LATAbits.LA0 = LATAbits.LA1 = 0;
  4397  001FC6  9289               	bcf	3977,1,c	;volatile
  4398  001FC8  9089               	bcf	3977,0,c	;volatile
  4399  001FCA  908D               	bcf	3981,0,c	;volatile
  4400  001FCC  9A89               	bcf	3977,5,c	;volatile
  4401  001FCE  9889               	bcf	3977,4,c	;volatile
  4402  001FD0  9689               	bcf	3977,3,c	;volatile
  4403  001FD2  9489               	bcf	3977,2,c	;volatile
  4404  001FD4                     l50:
  4405                           
  4406                           ;segment.c: 19: }
  4407                           ;segment.c: 20: LATAbits.LA7 = LATAbits.LA6 = LATCbits.LC2 = LATCbits.LC0 = LATCbits.LC1
      +                           = LATEbits.LE1 = LATEbits.LE2 = 0;
  4408  001FD4  948D               	bcf	3981,2,c	;volatile
  4409  001FD6  928D               	bcf	3981,1,c	;volatile
  4410  001FD8  928B               	bcf	3979,1,c	;volatile
  4411  001FDA  908B               	bcf	3979,0,c	;volatile
  4412  001FDC  948B               	bcf	3979,2,c	;volatile
  4413  001FDE  9C89               	bcf	3977,6,c	;volatile
  4414  001FE0  9E89               	bcf	3977,7,c	;volatile
  4415                           
  4416                           ;segment.c: 21: break;
  4417  001FE2  0012               	return	
  4418  001FE4                     l990:
  4419                           
  4420                           ;segment.c: 23: if (segment == 1) {
  4421  001FE4  0402               	decf	dispSeg@segment,w,c
  4422  001FE6  A4D8               	btfss	status,2,c
  4423  001FE8  D007               	goto	l53
  4424                           
  4425                           ;segment.c: 24: LATAbits.LA1 = 1;
  4426  001FEA  8289               	bsf	3977,1,c	;volatile
  4427                           
  4428                           ;segment.c: 25: LATAbits.LA2 = LATAbits.LA3 = LATAbits.LA4 = LATAbits.LA5 = LATEbits.LE0
      +                           = LATAbits.LA0 = 0;
  4429  001FEC  9089               	bcf	3977,0,c	;volatile
  4430  001FEE  908D               	bcf	3981,0,c	;volatile
  4431  001FF0  9A89               	bcf	3977,5,c	;volatile
  4432  001FF2  9889               	bcf	3977,4,c	;volatile
  4433  001FF4  9689               	bcf	3977,3,c	;volatile
  4434  001FF6  9489               	bcf	3977,2,c	;volatile
  4435  001FF8                     l53:
  4436                           
  4437                           ;segment.c: 26: }
  4438                           ;segment.c: 27: LATEbits.LE2 = 1;
  4439  001FF8  848D               	bsf	3981,2,c	;volatile
  4440                           
  4441                           ;segment.c: 28: LATAbits.LA7 = LATAbits.LA6 = LATCbits.LC2 = LATCbits.LC0 = LATCbits.LC1
      +                           = LATEbits.LE1 = 0;
  4442  001FFA  928D               	bcf	3981,1,c	;volatile
  4443  001FFC  928B               	bcf	3979,1,c	;volatile
  4444  001FFE  908B               	bcf	3979,0,c	;volatile
  4445  002000  948B               	bcf	3979,2,c	;volatile
  4446  002002  9C89               	bcf	3977,6,c	;volatile
  4447  002004  9E89               	bcf	3977,7,c	;volatile
  4448                           
  4449                           ;segment.c: 29: break;
  4450  002006  0012               	return	
  4451  002008                     l994:
  4452                           
  4453                           ;segment.c: 31: if (segment == 1) {
  4454  002008  0402               	decf	dispSeg@segment,w,c
  4455  00200A  A4D8               	btfss	status,2,c
  4456  00200C  D008               	goto	l55
  4457                           
  4458                           ;segment.c: 32: LATAbits.LA2 = LATAbits.LA3 = LATAbits.LA4 = LATAbits.LA5 = LATEbits.LE0
      +                           = LATAbits.LA0 = 1;
  4459  00200E  8089               	bsf	3977,0,c	;volatile
  4460  002010  808D               	bsf	3981,0,c	;volatile
  4461  002012  8A89               	bsf	3977,5,c	;volatile
  4462  002014  8889               	bsf	3977,4,c	;volatile
  4463  002016  8689               	bsf	3977,3,c	;volatile
  4464  002018  8489               	bsf	3977,2,c	;volatile
  4465                           
  4466                           ;segment.c: 33: LATAbits.LA1 = 0;
  4467  00201A  9289               	bcf	3977,1,c	;volatile
  4468                           
  4469                           ;segment.c: 34: return;
  4470  00201C  0012               	return	
  4471  00201E                     l55:
  4472                           
  4473                           ;segment.c: 35: }
  4474                           ;segment.c: 36: LATAbits.LA7 = LATAbits.LA6 = LATCbits.LC2 = LATCbits.LC0 = LATCbits.LC1
      +                           = LATEbits.LE1 = 1;
  4475  00201E  828D               	bsf	3981,1,c	;volatile
  4476  002020  828B               	bsf	3979,1,c	;volatile
  4477  002022  808B               	bsf	3979,0,c	;volatile
  4478  002024  848B               	bsf	3979,2,c	;volatile
  4479  002026  8C89               	bsf	3977,6,c	;volatile
  4480  002028  8E89               	bsf	3977,7,c	;volatile
  4481                           
  4482                           ;segment.c: 37: LATEbits.LE2 = 0;
  4483  00202A  948D               	bcf	3981,2,c	;volatile
  4484                           
  4485                           ;segment.c: 38: break;
  4486  00202C  0012               	return	
  4487  00202E                     l998:
  4488                           
  4489                           ;segment.c: 40: if (segment == 1) {
  4490  00202E  0402               	decf	dispSeg@segment,w,c
  4491  002030  A4D8               	btfss	status,2,c
  4492  002032  D008               	goto	l58
  4493                           
  4494                           ;segment.c: 41: LATAbits.LA3 = LATAbits.LA4 = 1;
  4495  002034  8889               	bsf	3977,4,c	;volatile
  4496  002036  8689               	bsf	3977,3,c	;volatile
  4497                           
  4498                           ;segment.c: 42: LATAbits.LA2 = LATAbits.LA5 = LATEbits.LE0 = LATAbits.LA0 = LATAbits.LA1
      +                           = 0;
  4499  002038  9289               	bcf	3977,1,c	;volatile
  4500  00203A  9089               	bcf	3977,0,c	;volatile
  4501  00203C  908D               	bcf	3981,0,c	;volatile
  4502  00203E  9A89               	bcf	3977,5,c	;volatile
  4503  002040  9489               	bcf	3977,2,c	;volatile
  4504                           
  4505                           ;segment.c: 43: return;
  4506  002042  0012               	return	
  4507  002044                     l58:
  4508                           
  4509                           ;segment.c: 44: }
  4510                           ;segment.c: 45: LATAbits.LA6 = LATCbits.LC2 = 1;
  4511  002044  848B               	bsf	3979,2,c	;volatile
  4512  002046  8C89               	bsf	3977,6,c	;volatile
  4513                           
  4514                           ;segment.c: 46: LATAbits.LA7 = LATCbits.LC0 = LATCbits.LC1 = LATEbits.LE1 = LATEbits.LE2
      +                           = 0;
  4515  002048  948D               	bcf	3981,2,c	;volatile
  4516  00204A  928D               	bcf	3981,1,c	;volatile
  4517  00204C  928B               	bcf	3979,1,c	;volatile
  4518  00204E  908B               	bcf	3979,0,c	;volatile
  4519  002050  9E89               	bcf	3977,7,c	;volatile
  4520                           
  4521                           ;segment.c: 47: break;
  4522  002052  0012               	return	
  4523  002054                     l1002:
  4524                           
  4525                           ;segment.c: 49: if (segment == 1) {
  4526  002054  0402               	decf	dispSeg@segment,w,c
  4527  002056  A4D8               	btfss	status,2,c
  4528  002058  D008               	goto	l60
  4529                           
  4530                           ;segment.c: 50: LATAbits.LA2 = LATAbits.LA3 = LATAbits.LA1 = LATEbits.LE0 = LATAbits.LA5
      +                           = 1;
  4531  00205A  8A89               	bsf	3977,5,c	;volatile
  4532  00205C  808D               	bsf	3981,0,c	;volatile
  4533  00205E  8289               	bsf	3977,1,c	;volatile
  4534  002060  8689               	bsf	3977,3,c	;volatile
  4535  002062  8489               	bsf	3977,2,c	;volatile
  4536                           
  4537                           ;segment.c: 51: LATAbits.LA4 = LATAbits.LA0 = 0;
  4538  002064  9089               	bcf	3977,0,c	;volatile
  4539  002066  9889               	bcf	3977,4,c	;volatile
  4540                           
  4541                           ;segment.c: 52: return;
  4542  002068  0012               	return	
  4543  00206A                     l60:
  4544                           
  4545                           ;segment.c: 53: }
  4546                           ;segment.c: 54: LATAbits.LA7 = LATAbits.LA6 = LATEbits.LE2 = LATCbits.LC1 = LATCbits.LC0
      +                           = 1;
  4547  00206A  808B               	bsf	3979,0,c	;volatile
  4548  00206C  828B               	bsf	3979,1,c	;volatile
  4549  00206E  848D               	bsf	3981,2,c	;volatile
  4550  002070  8C89               	bsf	3977,6,c	;volatile
  4551  002072  8E89               	bsf	3977,7,c	;volatile
  4552                           
  4553                           ;segment.c: 55: LATCbits.LC2 = LATEbits.LE1 = 0;
  4554  002074  928D               	bcf	3981,1,c	;volatile
  4555  002076  948B               	bcf	3979,2,c	;volatile
  4556                           
  4557                           ;segment.c: 56: break;
  4558  002078  0012               	return	
  4559  00207A                     l1006:
  4560                           
  4561                           ;segment.c: 58: if (segment == 1) {
  4562  00207A  0402               	decf	dispSeg@segment,w,c
  4563  00207C  A4D8               	btfss	status,2,c
  4564  00207E  D008               	goto	l62
  4565                           
  4566                           ;segment.c: 59: LATAbits.LA2 = LATAbits.LA3 = LATAbits.LA1 = LATAbits.LA4 = LATAbits.LA5
      +                           = 1;
  4567  002080  8A89               	bsf	3977,5,c	;volatile
  4568  002082  8889               	bsf	3977,4,c	;volatile
  4569  002084  8289               	bsf	3977,1,c	;volatile
  4570  002086  8689               	bsf	3977,3,c	;volatile
  4571  002088  8489               	bsf	3977,2,c	;volatile
  4572                           
  4573                           ;segment.c: 60: LATEbits.LE0 = LATAbits.LA0 = 0;
  4574  00208A  9089               	bcf	3977,0,c	;volatile
  4575  00208C  908D               	bcf	3981,0,c	;volatile
  4576                           
  4577                           ;segment.c: 61: return;
  4578  00208E  0012               	return	
  4579  002090                     l62:
  4580                           
  4581                           ;segment.c: 62: }
  4582                           ;segment.c: 63: LATAbits.LA7 = LATAbits.LA6 = LATEbits.LE2 = LATCbits.LC2 = LATCbits.LC0
      +                           = 1;
  4583  002090  808B               	bsf	3979,0,c	;volatile
  4584  002092  848B               	bsf	3979,2,c	;volatile
  4585  002094  848D               	bsf	3981,2,c	;volatile
  4586  002096  8C89               	bsf	3977,6,c	;volatile
  4587  002098  8E89               	bsf	3977,7,c	;volatile
  4588                           
  4589                           ;segment.c: 64: LATCbits.LC1 = LATEbits.LE1 = 0;
  4590  00209A  928D               	bcf	3981,1,c	;volatile
  4591  00209C  928B               	bcf	3979,1,c	;volatile
  4592                           
  4593                           ;segment.c: 65: break;
  4594  00209E  0012               	return	
  4595  0020A0                     l1010:
  4596                           
  4597                           ;segment.c: 67: if (segment == 1) {
  4598  0020A0  0402               	decf	dispSeg@segment,w,c
  4599  0020A2  A4D8               	btfss	status,2,c
  4600  0020A4  D008               	goto	l64
  4601                           
  4602                           ;segment.c: 68: LATAbits.LA0 = LATAbits.LA1 = LATAbits.LA3 = LATAbits.LA4 = 1;
  4603  0020A6  8889               	bsf	3977,4,c	;volatile
  4604  0020A8  8689               	bsf	3977,3,c	;volatile
  4605  0020AA  8289               	bsf	3977,1,c	;volatile
  4606  0020AC  8089               	bsf	3977,0,c	;volatile
  4607                           
  4608                           ;segment.c: 69: LATAbits.LA2 = LATAbits.LA5 = LATEbits.LE0 = 0;
  4609  0020AE  908D               	bcf	3981,0,c	;volatile
  4610  0020B0  9A89               	bcf	3977,5,c	;volatile
  4611  0020B2  9489               	bcf	3977,2,c	;volatile
  4612                           
  4613                           ;segment.c: 70: return;
  4614  0020B4  0012               	return	
  4615  0020B6                     l64:
  4616                           
  4617                           ;segment.c: 71: }
  4618                           ;segment.c: 72: LATEbits.LE1 = LATEbits.LE2 = LATAbits.LA6 = LATCbits.LC2 = 1;
  4619  0020B6  848B               	bsf	3979,2,c	;volatile
  4620  0020B8  8C89               	bsf	3977,6,c	;volatile
  4621  0020BA  848D               	bsf	3981,2,c	;volatile
  4622  0020BC  828D               	bsf	3981,1,c	;volatile
  4623                           
  4624                           ;segment.c: 73: LATAbits.LA7 = LATCbits.LC0 = LATCbits.LC1 = 0;
  4625  0020BE  928B               	bcf	3979,1,c	;volatile
  4626  0020C0  908B               	bcf	3979,0,c	;volatile
  4627  0020C2  9E89               	bcf	3977,7,c	;volatile
  4628                           
  4629                           ;segment.c: 74: break;
  4630  0020C4  0012               	return	
  4631  0020C6                     l1014:
  4632                           
  4633                           ;segment.c: 76: if (segment == 1) {
  4634  0020C6  0402               	decf	dispSeg@segment,w,c
  4635  0020C8  A4D8               	btfss	status,2,c
  4636  0020CA  D008               	goto	l66
  4637                           
  4638                           ;segment.c: 77: LATAbits.LA2 = LATAbits.LA0 = LATAbits.LA1 = LATAbits.LA4 = LATAbits.LA5
      +                           = 1;
  4639  0020CC  8A89               	bsf	3977,5,c	;volatile
  4640  0020CE  8889               	bsf	3977,4,c	;volatile
  4641  0020D0  8289               	bsf	3977,1,c	;volatile
  4642  0020D2  8089               	bsf	3977,0,c	;volatile
  4643  0020D4  8489               	bsf	3977,2,c	;volatile
  4644                           
  4645                           ;segment.c: 78: LATAbits.LA3 = LATEbits.LE0 = 0;
  4646  0020D6  908D               	bcf	3981,0,c	;volatile
  4647  0020D8  9689               	bcf	3977,3,c	;volatile
  4648                           
  4649                           ;segment.c: 79: return;
  4650  0020DA  0012               	return	
  4651  0020DC                     l66:
  4652                           
  4653                           ;segment.c: 80: }
  4654                           ;segment.c: 81: LATAbits.LA7 = LATEbits.LE1 = LATEbits.LE2 = LATCbits.LC2 = LATCbits.LC0
      +                           = 1;
  4655  0020DC  808B               	bsf	3979,0,c	;volatile
  4656  0020DE  848B               	bsf	3979,2,c	;volatile
  4657  0020E0  848D               	bsf	3981,2,c	;volatile
  4658  0020E2  828D               	bsf	3981,1,c	;volatile
  4659  0020E4  8E89               	bsf	3977,7,c	;volatile
  4660                           
  4661                           ;segment.c: 82: LATAbits.LA6 = LATCbits.LC1 = 0;
  4662  0020E6  928B               	bcf	3979,1,c	;volatile
  4663  0020E8  9C89               	bcf	3977,6,c	;volatile
  4664                           
  4665                           ;segment.c: 83: break;
  4666  0020EA  0012               	return	
  4667  0020EC                     l1018:
  4668                           
  4669                           ;segment.c: 85: if (segment == 1) {
  4670  0020EC  0402               	decf	dispSeg@segment,w,c
  4671  0020EE  A4D8               	btfss	status,2,c
  4672  0020F0  D008               	goto	l68
  4673                           
  4674                           ;segment.c: 86: LATAbits.LA2 = LATAbits.LA0 = LATAbits.LA1 = LATAbits.LA4 = LATAbits.LA5
      +                           = LATEbits.LE0 = 1;
  4675  0020F2  808D               	bsf	3981,0,c	;volatile
  4676  0020F4  8A89               	bsf	3977,5,c	;volatile
  4677  0020F6  8889               	bsf	3977,4,c	;volatile
  4678  0020F8  8289               	bsf	3977,1,c	;volatile
  4679  0020FA  8089               	bsf	3977,0,c	;volatile
  4680  0020FC  8489               	bsf	3977,2,c	;volatile
  4681                           
  4682                           ;segment.c: 87: LATAbits.LA3 = 0;
  4683  0020FE  9689               	bcf	3977,3,c	;volatile
  4684                           
  4685                           ;segment.c: 88: return;
  4686  002100  0012               	return	
  4687  002102                     l68:
  4688                           
  4689                           ;segment.c: 89: }
  4690                           ;segment.c: 90: LATAbits.LA7 = LATEbits.LE1 = LATEbits.LE2 = LATCbits.LC2 = LATCbits.LC0
      +                           = LATCbits.LC1 = 1;
  4691  002102  828B               	bsf	3979,1,c	;volatile
  4692  002104  808B               	bsf	3979,0,c	;volatile
  4693  002106  848B               	bsf	3979,2,c	;volatile
  4694  002108  848D               	bsf	3981,2,c	;volatile
  4695  00210A  828D               	bsf	3981,1,c	;volatile
  4696  00210C  8E89               	bsf	3977,7,c	;volatile
  4697                           
  4698                           ;segment.c: 91: LATAbits.LA6 = 0;
  4699  00210E  9C89               	bcf	3977,6,c	;volatile
  4700                           
  4701                           ;segment.c: 92: break;
  4702  002110  0012               	return	
  4703  002112                     l1022:
  4704                           
  4705                           ;segment.c: 94: if (segment == 1) {
  4706  002112  0402               	decf	dispSeg@segment,w,c
  4707  002114  A4D8               	btfss	status,2,c
  4708  002116  D008               	goto	l70
  4709                           
  4710                           ;segment.c: 95: LATAbits.LA2 = LATAbits.LA3 = LATAbits.LA4 = 1;
  4711  002118  8889               	bsf	3977,4,c	;volatile
  4712  00211A  8689               	bsf	3977,3,c	;volatile
  4713  00211C  8489               	bsf	3977,2,c	;volatile
  4714                           
  4715                           ;segment.c: 96: LATAbits.LA5 = LATEbits.LE0 = LATAbits.LA0 = LATAbits.LA1 = 0;
  4716  00211E  9289               	bcf	3977,1,c	;volatile
  4717  002120  9089               	bcf	3977,0,c	;volatile
  4718  002122  908D               	bcf	3981,0,c	;volatile
  4719  002124  9A89               	bcf	3977,5,c	;volatile
  4720                           
  4721                           ;segment.c: 97: return;
  4722  002126  0012               	return	
  4723  002128                     l70:
  4724                           
  4725                           ;segment.c: 98: }
  4726                           ;segment.c: 99: LATAbits.LA7 = LATAbits.LA6 = LATCbits.LC2 = 1;
  4727  002128  848B               	bsf	3979,2,c	;volatile
  4728  00212A  8C89               	bsf	3977,6,c	;volatile
  4729  00212C  8E89               	bsf	3977,7,c	;volatile
  4730                           
  4731                           ;segment.c: 100: LATCbits.LC0 = LATCbits.LC1 = LATEbits.LE1 = LATEbits.LE2 = 0;
  4732  00212E  948D               	bcf	3981,2,c	;volatile
  4733  002130  928D               	bcf	3981,1,c	;volatile
  4734  002132  928B               	bcf	3979,1,c	;volatile
  4735  002134  908B               	bcf	3979,0,c	;volatile
  4736                           
  4737                           ;segment.c: 101: break;
  4738  002136  0012               	return	
  4739  002138                     l1026:
  4740                           
  4741                           ;segment.c: 103: if (segment == 1) {
  4742  002138  0402               	decf	dispSeg@segment,w,c
  4743  00213A  A4D8               	btfss	status,2,c
  4744  00213C  D008               	goto	l72
  4745                           
  4746                           ;segment.c: 104: LATAbits.LA2 = LATAbits.LA3 = LATAbits.LA4 = LATAbits.LA5 = LATEbits.LE
      +                          0 = LATAbits.LA0 = LATAbits.LA1 = 1;
  4747  00213E  8289               	bsf	3977,1,c	;volatile
  4748  002140  8089               	bsf	3977,0,c	;volatile
  4749  002142  808D               	bsf	3981,0,c	;volatile
  4750  002144  8A89               	bsf	3977,5,c	;volatile
  4751  002146  8889               	bsf	3977,4,c	;volatile
  4752  002148  8689               	bsf	3977,3,c	;volatile
  4753  00214A  8489               	bsf	3977,2,c	;volatile
  4754                           
  4755                           ;segment.c: 105: return;
  4756  00214C  0012               	return	
  4757  00214E                     l72:
  4758                           
  4759                           ;segment.c: 106: }
  4760                           ;segment.c: 107: LATAbits.LA7 = LATAbits.LA6 = LATCbits.LC2 = LATCbits.LC0 = LATCbits.LC
      +                          1 = LATEbits.LE1 = LATEbits.LE2 = 1;
  4761  00214E  848D               	bsf	3981,2,c	;volatile
  4762  002150  828D               	bsf	3981,1,c	;volatile
  4763  002152  828B               	bsf	3979,1,c	;volatile
  4764  002154  808B               	bsf	3979,0,c	;volatile
  4765  002156  848B               	bsf	3979,2,c	;volatile
  4766  002158  8C89               	bsf	3977,6,c	;volatile
  4767  00215A  8E89               	bsf	3977,7,c	;volatile
  4768                           
  4769                           ;segment.c: 108: break;
  4770  00215C  0012               	return	
  4771  00215E                     l1030:
  4772                           
  4773                           ;segment.c: 110: if (segment == 1) {
  4774  00215E  0402               	decf	dispSeg@segment,w,c
  4775  002160  A4D8               	btfss	status,2,c
  4776  002162  D008               	goto	l74
  4777                           
  4778                           ;segment.c: 111: LATAbits.LA2 = LATAbits.LA3 = LATAbits.LA4 = LATAbits.LA5 = LATAbits.LA
      +                          0 = LATAbits.LA1 = 1;
  4779  002164  8289               	bsf	3977,1,c	;volatile
  4780  002166  8089               	bsf	3977,0,c	;volatile
  4781  002168  8A89               	bsf	3977,5,c	;volatile
  4782  00216A  8889               	bsf	3977,4,c	;volatile
  4783  00216C  8689               	bsf	3977,3,c	;volatile
  4784  00216E  8489               	bsf	3977,2,c	;volatile
  4785                           
  4786                           ;segment.c: 112: LATEbits.LE0 = 0;
  4787  002170  908D               	bcf	3981,0,c	;volatile
  4788                           
  4789                           ;segment.c: 113: return;
  4790  002172  0012               	return	
  4791  002174                     l74:
  4792                           
  4793                           ;segment.c: 114: }
  4794                           ;segment.c: 115: LATAbits.LA7 = LATAbits.LA6 = LATCbits.LC2 = LATCbits.LC0 = LATEbits.LE
      +                          1 = LATEbits.LE2 = 1;
  4795  002174  848D               	bsf	3981,2,c	;volatile
  4796  002176  828D               	bsf	3981,1,c	;volatile
  4797  002178  808B               	bsf	3979,0,c	;volatile
  4798  00217A  848B               	bsf	3979,2,c	;volatile
  4799  00217C  8C89               	bsf	3977,6,c	;volatile
  4800  00217E  8E89               	bsf	3977,7,c	;volatile
  4801                           
  4802                           ;segment.c: 116: LATCbits.LC1 = 0;
  4803  002180  928B               	bcf	3979,1,c	;volatile
  4804                           
  4805                           ;segment.c: 117: break;
  4806  002182  0012               	return	
  4807  002184                     l1034:
  4808                           
  4809                           ;segment.c: 119: if (segment == 1) {
  4810  002184  0402               	decf	dispSeg@segment,w,c
  4811  002186  A4D8               	btfss	status,2,c
  4812  002188  D008               	goto	l76
  4813                           
  4814                           ;segment.c: 120: LATAbits.LA2 = LATAbits.LA3 = LATAbits.LA4 = LATEbits.LE0 = LATAbits.LA
      +                          0 = LATAbits.LA1 = 1;
  4815  00218A  8289               	bsf	3977,1,c	;volatile
  4816  00218C  8089               	bsf	3977,0,c	;volatile
  4817  00218E  808D               	bsf	3981,0,c	;volatile
  4818  002190  8889               	bsf	3977,4,c	;volatile
  4819  002192  8689               	bsf	3977,3,c	;volatile
  4820  002194  8489               	bsf	3977,2,c	;volatile
  4821                           
  4822                           ;segment.c: 121: LATAbits.LA5 = 0;
  4823  002196  9A89               	bcf	3977,5,c	;volatile
  4824                           
  4825                           ;segment.c: 122: return;
  4826  002198  0012               	return	
  4827  00219A                     l76:
  4828                           
  4829                           ;segment.c: 123: }
  4830                           ;segment.c: 124: LATAbits.LA7 = LATAbits.LA6 = LATCbits.LC2 = LATCbits.LC1 = LATEbits.LE
      +                          1 = LATEbits.LE2 = 1;
  4831  00219A  848D               	bsf	3981,2,c	;volatile
  4832  00219C  828D               	bsf	3981,1,c	;volatile
  4833  00219E  828B               	bsf	3979,1,c	;volatile
  4834  0021A0  848B               	bsf	3979,2,c	;volatile
  4835  0021A2  8C89               	bsf	3977,6,c	;volatile
  4836  0021A4  8E89               	bsf	3977,7,c	;volatile
  4837                           
  4838                           ;segment.c: 125: LATCbits.LC0 = 0;
  4839  0021A6  908B               	bcf	3979,0,c	;volatile
  4840                           
  4841                           ;segment.c: 126: break;
  4842  0021A8  0012               	return	
  4843  0021AA                     l1038:
  4844                           
  4845                           ;segment.c: 128: if (segment == 1) {
  4846  0021AA  0402               	decf	dispSeg@segment,w,c
  4847  0021AC  A4D8               	btfss	status,2,c
  4848  0021AE  D008               	goto	l78
  4849                           
  4850                           ;segment.c: 129: LATAbits.LA4 = LATAbits.LA5 = LATEbits.LE0 = LATAbits.LA0 = LATAbits.LA
      +                          1 = 1;
  4851  0021B0  8289               	bsf	3977,1,c	;volatile
  4852  0021B2  8089               	bsf	3977,0,c	;volatile
  4853  0021B4  808D               	bsf	3981,0,c	;volatile
  4854  0021B6  8A89               	bsf	3977,5,c	;volatile
  4855  0021B8  8889               	bsf	3977,4,c	;volatile
  4856                           
  4857                           ;segment.c: 130: LATAbits.LA2 = LATAbits.LA3 = 0;
  4858  0021BA  9689               	bcf	3977,3,c	;volatile
  4859  0021BC  9489               	bcf	3977,2,c	;volatile
  4860                           
  4861                           ;segment.c: 131: return;
  4862  0021BE  0012               	return	
  4863  0021C0                     l78:
  4864                           
  4865                           ;segment.c: 132: }
  4866                           ;segment.c: 133: LATCbits.LC2 = LATCbits.LC0 = LATCbits.LC1 = LATEbits.LE1 = LATEbits.LE
      +                          2 = 1;
  4867  0021C0  848D               	bsf	3981,2,c	;volatile
  4868  0021C2  828D               	bsf	3981,1,c	;volatile
  4869  0021C4  828B               	bsf	3979,1,c	;volatile
  4870  0021C6  808B               	bsf	3979,0,c	;volatile
  4871  0021C8  848B               	bsf	3979,2,c	;volatile
  4872                           
  4873                           ;segment.c: 134: LATAbits.LA7 = LATAbits.LA6 = 0;
  4874  0021CA  9C89               	bcf	3977,6,c	;volatile
  4875  0021CC  9E89               	bcf	3977,7,c	;volatile
  4876                           
  4877                           ;segment.c: 135: break;
  4878  0021CE  0012               	return	
  4879  0021D0                     l1042:
  4880                           
  4881                           ;segment.c: 137: if (segment == 1) {
  4882  0021D0  0402               	decf	dispSeg@segment,w,c
  4883  0021D2  A4D8               	btfss	status,2,c
  4884  0021D4  D008               	goto	l80
  4885                           
  4886                           ;segment.c: 138: LATAbits.LA2 = LATAbits.LA5 = LATEbits.LE0 = LATAbits.LA0 = 1;
  4887  0021D6  8089               	bsf	3977,0,c	;volatile
  4888  0021D8  808D               	bsf	3981,0,c	;volatile
  4889  0021DA  8A89               	bsf	3977,5,c	;volatile
  4890  0021DC  8489               	bsf	3977,2,c	;volatile
  4891                           
  4892                           ;segment.c: 139: LATAbits.LA3 = LATAbits.LA4 = LATAbits.LA1 = 0;
  4893  0021DE  9289               	bcf	3977,1,c	;volatile
  4894  0021E0  9889               	bcf	3977,4,c	;volatile
  4895  0021E2  9689               	bcf	3977,3,c	;volatile
  4896                           
  4897                           ;segment.c: 140: return;
  4898  0021E4  0012               	return	
  4899  0021E6                     l80:
  4900                           
  4901                           ;segment.c: 141: }
  4902                           ;segment.c: 142: LATAbits.LA7 = LATCbits.LC0 = LATCbits.LC1 = LATEbits.LE1 = 1;
  4903  0021E6  828D               	bsf	3981,1,c	;volatile
  4904  0021E8  828B               	bsf	3979,1,c	;volatile
  4905  0021EA  808B               	bsf	3979,0,c	;volatile
  4906  0021EC  8E89               	bsf	3977,7,c	;volatile
  4907                           
  4908                           ;segment.c: 143: LATAbits.LA6 = LATCbits.LC2 = LATEbits.LE2 = 0;
  4909  0021EE  948D               	bcf	3981,2,c	;volatile
  4910  0021F0  948B               	bcf	3979,2,c	;volatile
  4911  0021F2  9C89               	bcf	3977,6,c	;volatile
  4912                           
  4913                           ;segment.c: 144: break;
  4914  0021F4  0012               	return	
  4915  0021F6                     l1046:
  4916                           
  4917                           ;segment.c: 146: if (segment == 1) {
  4918  0021F6  0402               	decf	dispSeg@segment,w,c
  4919  0021F8  A4D8               	btfss	status,2,c
  4920  0021FA  D008               	goto	l82
  4921                           
  4922                           ;segment.c: 147: LATAbits.LA3 = LATAbits.LA4 = LATAbits.LA5 = LATEbits.LE0 = LATAbits.LA
      +                          1 = 1;
  4923  0021FC  8289               	bsf	3977,1,c	;volatile
  4924  0021FE  808D               	bsf	3981,0,c	;volatile
  4925  002200  8A89               	bsf	3977,5,c	;volatile
  4926  002202  8889               	bsf	3977,4,c	;volatile
  4927  002204  8689               	bsf	3977,3,c	;volatile
  4928                           
  4929                           ;segment.c: 148: LATAbits.LA2 = LATAbits.LA0 = 0;
  4930  002206  9089               	bcf	3977,0,c	;volatile
  4931  002208  9489               	bcf	3977,2,c	;volatile
  4932                           
  4933                           ;segment.c: 149: return;
  4934  00220A  0012               	return	
  4935  00220C                     l82:
  4936                           
  4937                           ;segment.c: 150: }
  4938                           ;segment.c: 151: LATAbits.LA6 = LATCbits.LC2 = LATCbits.LC0 = LATCbits.LC1 = LATEbits.LE
      +                          2 = 1;
  4939  00220C  848D               	bsf	3981,2,c	;volatile
  4940  00220E  828B               	bsf	3979,1,c	;volatile
  4941  002210  808B               	bsf	3979,0,c	;volatile
  4942  002212  848B               	bsf	3979,2,c	;volatile
  4943  002214  8C89               	bsf	3977,6,c	;volatile
  4944                           
  4945                           ;segment.c: 152: LATAbits.LA7 = LATEbits.LE1 = 0;
  4946  002216  928D               	bcf	3981,1,c	;volatile
  4947  002218  9E89               	bcf	3977,7,c	;volatile
  4948                           
  4949                           ;segment.c: 153: break;
  4950  00221A  0012               	return	
  4951  00221C                     l1050:
  4952                           
  4953                           ;segment.c: 155: if (segment == 1) {
  4954  00221C  0402               	decf	dispSeg@segment,w,c
  4955  00221E  A4D8               	btfss	status,2,c
  4956  002220  D008               	goto	l84
  4957                           
  4958                           ;segment.c: 156: LATAbits.LA2 = LATAbits.LA5 = LATEbits.LE0 = LATAbits.LA0 = LATAbits.LA
      +                          1 = 1;
  4959  002222  8289               	bsf	3977,1,c	;volatile
  4960  002224  8089               	bsf	3977,0,c	;volatile
  4961  002226  808D               	bsf	3981,0,c	;volatile
  4962  002228  8A89               	bsf	3977,5,c	;volatile
  4963  00222A  8489               	bsf	3977,2,c	;volatile
  4964                           
  4965                           ;segment.c: 157: LATAbits.LA3 = LATAbits.LA4 = 0;
  4966  00222C  9889               	bcf	3977,4,c	;volatile
  4967  00222E  9689               	bcf	3977,3,c	;volatile
  4968                           
  4969                           ;segment.c: 158: return;
  4970  002230  0012               	return	
  4971  002232                     l84:
  4972                           
  4973                           ;segment.c: 159: }
  4974                           ;segment.c: 160: LATAbits.LA7 = LATCbits.LC0 = LATCbits.LC1 = LATEbits.LE1 = LATEbits.LE
      +                          2 = 1;
  4975  002232  848D               	bsf	3981,2,c	;volatile
  4976  002234  828D               	bsf	3981,1,c	;volatile
  4977  002236  828B               	bsf	3979,1,c	;volatile
  4978  002238  808B               	bsf	3979,0,c	;volatile
  4979  00223A  8E89               	bsf	3977,7,c	;volatile
  4980                           
  4981                           ;segment.c: 161: LATAbits.LA6 = LATCbits.LC2 = 0;
  4982  00223C  948B               	bcf	3979,2,c	;volatile
  4983  00223E  9C89               	bcf	3977,6,c	;volatile
  4984                           
  4985                           ;segment.c: 162: break;
  4986  002240  0012               	return	
  4987  002242                     l1054:
  4988                           
  4989                           ;segment.c: 164: if (segment == 1) {
  4990  002242  0402               	decf	dispSeg@segment,w,c
  4991  002244  A4D8               	btfss	status,2,c
  4992  002246  D008               	goto	l86
  4993                           
  4994                           ;segment.c: 165: LATAbits.LA2 = LATEbits.LE0 = LATAbits.LA0 = LATAbits.LA1 = 1;
  4995  002248  8289               	bsf	3977,1,c	;volatile
  4996  00224A  8089               	bsf	3977,0,c	;volatile
  4997  00224C  808D               	bsf	3981,0,c	;volatile
  4998  00224E  8489               	bsf	3977,2,c	;volatile
  4999                           
  5000                           ;segment.c: 166: LATAbits.LA3 = LATAbits.LA4 = LATAbits.LA5 = 0;
  5001  002250  9A89               	bcf	3977,5,c	;volatile
  5002  002252  9889               	bcf	3977,4,c	;volatile
  5003  002254  9689               	bcf	3977,3,c	;volatile
  5004                           
  5005                           ;segment.c: 167: return;
  5006  002256  0012               	return	
  5007  002258                     l86:
  5008                           
  5009                           ;segment.c: 168: }
  5010                           ;segment.c: 169: LATAbits.LA7 = LATCbits.LC1 = LATEbits.LE1 = LATEbits.LE2 = 1;
  5011  002258  848D               	bsf	3981,2,c	;volatile
  5012  00225A  828D               	bsf	3981,1,c	;volatile
  5013  00225C  828B               	bsf	3979,1,c	;volatile
  5014  00225E  8E89               	bsf	3977,7,c	;volatile
  5015                           
  5016                           ;segment.c: 170: LATAbits.LA6 = LATCbits.LC2 = LATCbits.LC0 = 0;
  5017  002260  908B               	bcf	3979,0,c	;volatile
  5018  002262  948B               	bcf	3979,2,c	;volatile
  5019  002264  9C89               	bcf	3977,6,c	;volatile
  5020                           
  5021                           ;segment.c: 171: break;
  5022  002266  0012               	return	
  5023  002268                     l1060:
  5024  002268  5001               	movf	dispSeg@letter,w,c
  5025                           
  5026                           ; Switch size 1, requested type "space"
  5027                           ; Number of cases is 18, Range of values is 45 to 120
  5028                           ; switch strategies available:
  5029                           ; Name         Instructions Cycles
  5030                           ; simple_byte           55    28 (average)
  5031                           ;	Chosen strategy is simple_byte
  5032  00226A  0A2D               	xorlw	45	; case 45
  5033  00226C  B4D8               	btfsc	status,2,c
  5034  00226E  D6BA               	goto	l990
  5035  002270  0A1D               	xorlw	29	; case 48
  5036  002272  B4D8               	btfsc	status,2,c
  5037  002274  D6C9               	goto	l994
  5038  002276  0A01               	xorlw	1	; case 49
  5039  002278  B4D8               	btfsc	status,2,c
  5040  00227A  D6D9               	goto	l998
  5041  00227C  0A03               	xorlw	3	; case 50
  5042  00227E  B4D8               	btfsc	status,2,c
  5043  002280  D6E9               	goto	l1002
  5044  002282  0A01               	xorlw	1	; case 51
  5045  002284  B4D8               	btfsc	status,2,c
  5046  002286  D6F9               	goto	l1006
  5047  002288  0A07               	xorlw	7	; case 52
  5048  00228A  B4D8               	btfsc	status,2,c
  5049  00228C  D709               	goto	l1010
  5050  00228E  0A01               	xorlw	1	; case 53
  5051  002290  B4D8               	btfsc	status,2,c
  5052  002292  D719               	goto	l1014
  5053  002294  0A03               	xorlw	3	; case 54
  5054  002296  B4D8               	btfsc	status,2,c
  5055  002298  D729               	goto	l1018
  5056  00229A  0A01               	xorlw	1	; case 55
  5057  00229C  B4D8               	btfsc	status,2,c
  5058  00229E  D739               	goto	l1022
  5059  0022A0  0A0F               	xorlw	15	; case 56
  5060  0022A2  B4D8               	btfsc	status,2,c
  5061  0022A4  D749               	goto	l1026
  5062  0022A6  0A01               	xorlw	1	; case 57
  5063  0022A8  B4D8               	btfsc	status,2,c
  5064  0022AA  D759               	goto	l1030
  5065  0022AC  0A58               	xorlw	88	; case 97
  5066  0022AE  B4D8               	btfsc	status,2,c
  5067  0022B0  D769               	goto	l1034
  5068  0022B2  0A03               	xorlw	3	; case 98
  5069  0022B4  B4D8               	btfsc	status,2,c
  5070  0022B6  D779               	goto	l1038
  5071  0022B8  0A01               	xorlw	1	; case 99
  5072  0022BA  B4D8               	btfsc	status,2,c
  5073  0022BC  D789               	goto	l1042
  5074  0022BE  0A07               	xorlw	7	; case 100
  5075  0022C0  B4D8               	btfsc	status,2,c
  5076  0022C2  D799               	goto	l1046
  5077  0022C4  0A01               	xorlw	1	; case 101
  5078  0022C6  B4D8               	btfsc	status,2,c
  5079  0022C8  D7A9               	goto	l1050
  5080  0022CA  0A03               	xorlw	3	; case 102
  5081  0022CC  B4D8               	btfsc	status,2,c
  5082  0022CE  D7B9               	goto	l1054
  5083  0022D0  0A1E               	xorlw	30	; case 120
  5084  0022D2  A4D8               	btfss	status,2,c
  5085  0022D4  0012               	return	
  5086  0022D6  D674               	goto	l986
  5087  0022D8                     __end_of_dispSeg:
  5088                           	opt stack 0
  5089                           tblptru	equ	0xFF8
  5090                           tblptrh	equ	0xFF7
  5091                           tblptrl	equ	0xFF6
  5092                           tablat	equ	0xFF5
  5093                           prodh	equ	0xFF4
  5094                           prodl	equ	0xFF3
  5095                           postinc0	equ	0xFEE
  5096                           wreg	equ	0xFE8
  5097                           postdec1	equ	0xFE5
  5098                           fsr1h	equ	0xFE2
  5099                           fsr1l	equ	0xFE1
  5100                           indf2	equ	0xFDF
  5101                           fsr2h	equ	0xFDA
  5102                           fsr2l	equ	0xFD9
  5103                           status	equ	0xFD8
  5104                           
  5105 ;; *************** function _setMXbits *****************
  5106 ;; Defined at:
  5107 ;;		line 55 in file "source/emulator.c"
  5108 ;; Parameters:    Size  Location     Type
  5109 ;;  subRegister     1    wreg     unsigned char 
  5110 ;;  value           1    0[COMRAM] unsigned char 
  5111 ;; Auto vars:     Size  Location     Type
  5112 ;;  subRegister     1    5[COMRAM] unsigned char 
  5113 ;;  regMX_temp      2    3[COMRAM] unsigned int 
  5114 ;;  value_temp      2    1[COMRAM] unsigned int 
  5115 ;; Return value:  Size  Location     Type
  5116 ;;		None               void
  5117 ;; Registers used:
  5118 ;;		wreg, status,2, status,0
  5119 ;; Tracked objects:
  5120 ;;		On entry : 0/0
  5121 ;;		On exit  : 0/0
  5122 ;;		Unchanged: 0/0
  5123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5124 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5125 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5127 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5128 ;;Total ram usage:        6 bytes
  5129 ;; Hardware stack levels used:    1
  5130 ;; This function calls:
  5131 ;;		Nothing
  5132 ;; This function is called by:
  5133 ;;		_processOpcode
  5134 ;; This function uses a non-reentrant model
  5135 ;;
  5136                           
  5137                           	psect	text6
  5138  0025C6                     __ptext6:
  5139                           	opt stack 0
  5140  0025C6                     _setMXbits:
  5141                           	opt stack 29
  5142                           
  5143                           ;incstack = 0
  5144                           ;setMXbits@subRegister stored from wreg
  5145  0025C6  CFE8 F006          	movff	wreg,setMXbits@subRegister
  5146                           
  5147                           ;emulator.c: 57: uint16_t value_temp = (uint16_t) value;
  5148  0025CA  C001  F002         	movff	setMXbits@value,setMXbits@value_temp
  5149  0025CE  6A03               	clrf	setMXbits@value_temp+1,c
  5150                           
  5151                           ;emulator.c: 58: uint16_t regMX_temp = regMX;
  5152  0025D0  C017  F004         	movff	_regMX,setMXbits@regMX_temp
  5153  0025D4  C018  F005         	movff	_regMX+1,setMXbits@regMX_temp+1
  5154                           
  5155                           ;emulator.c: 72: }
  5156                           
  5157                           ;emulator.c: 71: break;
  5158                           
  5159                           ;emulator.c: 68: case 1:
  5160                           
  5161                           ;emulator.c: 66: break;
  5162                           
  5163                           ;emulator.c: 61: {
  5164                           ;emulator.c: 62: case 0:
  5165                           
  5166                           ;emulator.c: 60: switch(subRegister)
  5167  0025D8  5006               	movf	setMXbits@subRegister,w,c
  5168                           
  5169                           ; Switch size 1, requested type "space"
  5170                           ; Number of cases is 2, Range of values is 0 to 1
  5171                           ; switch strategies available:
  5172                           ; Name         Instructions Cycles
  5173                           ; simple_byte            7     4 (average)
  5174                           ;	Chosen strategy is simple_byte
  5175  0025DA  0A00               	xorlw	0	; case 0
  5176  0025DC  A4D8               	btfss	status,2,c
  5177  0025DE  0A01               	xorlw	1	; case 1
  5178                           
  5179                           ;emulator.c: 74: regMX = regMX_temp + value_temp;
  5180  0025E0  5002               	movf	setMXbits@value_temp,w,c
  5181  0025E2  2404               	addwf	setMXbits@regMX_temp,w,c
  5182  0025E4  6E17               	movwf	_regMX,c
  5183  0025E6  5003               	movf	setMXbits@value_temp+1,w,c
  5184  0025E8  2005               	addwfc	setMXbits@regMX_temp+1,w,c
  5185  0025EA  6E18               	movwf	_regMX+1,c
  5186  0025EC  0012               	return	
  5187  0025EE                     __end_of_setMXbits:
  5188                           	opt stack 0
  5189                           tblptru	equ	0xFF8
  5190                           tblptrh	equ	0xFF7
  5191                           tblptrl	equ	0xFF6
  5192                           tablat	equ	0xFF5
  5193                           prodh	equ	0xFF4
  5194                           prodl	equ	0xFF3
  5195                           postinc0	equ	0xFEE
  5196                           wreg	equ	0xFE8
  5197                           postdec1	equ	0xFE5
  5198                           fsr1h	equ	0xFE2
  5199                           fsr1l	equ	0xFE1
  5200                           indf2	equ	0xFDF
  5201                           fsr2h	equ	0xFDA
  5202                           fsr2l	equ	0xFD9
  5203                           status	equ	0xFD8
  5204                           
  5205 ;; *************** function _immData_toPointer *****************
  5206 ;; Defined at:
  5207 ;;		line 168 in file "source/emulator.c"
  5208 ;; Parameters:    Size  Location     Type
  5209 ;;		None
  5210 ;; Auto vars:     Size  Location     Type
  5211 ;;  pointer         2    2[COMRAM] unsigned int 
  5212 ;; Return value:  Size  Location     Type
  5213 ;;                  2    0[COMRAM] unsigned int 
  5214 ;; Registers used:
  5215 ;;		wreg, status,2, status,0
  5216 ;; Tracked objects:
  5217 ;;		On entry : 0/0
  5218 ;;		On exit  : 0/0
  5219 ;;		Unchanged: 0/0
  5220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5221 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5222 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5224 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5225 ;;Total ram usage:        4 bytes
  5226 ;; Hardware stack levels used:    1
  5227 ;; This function calls:
  5228 ;;		Nothing
  5229 ;; This function is called by:
  5230 ;;		_processOpcode
  5231 ;; This function uses a non-reentrant model
  5232 ;;
  5233                           
  5234                           	psect	text7
  5235  002630                     __ptext7:
  5236                           	opt stack 0
  5237  002630                     _immData_toPointer:
  5238                           	opt stack 29
  5239                           
  5240                           ;emulator.c: 170: uint16_t pointer = (uint16_t) immData_1;
  5241                           
  5242                           ;incstack = 0
  5243  002630  C01B  F003         	movff	_immData_1,immData_toPointer@pointer
  5244  002634  6A04               	clrf	immData_toPointer@pointer+1,c
  5245                           
  5246                           ;emulator.c: 172: pointer += immData_2;
  5247  002636  501C               	movf	_immData_2,w,c
  5248  002638  2603               	addwf	immData_toPointer@pointer,f,c
  5249  00263A  0E00               	movlw	0
  5250  00263C  2204               	addwfc	immData_toPointer@pointer+1,f,c
  5251                           
  5252                           ;emulator.c: 173: return pointer;
  5253  00263E  C003  F001         	movff	immData_toPointer@pointer,?_immData_toPointer
  5254  002642  C004  F002         	movff	immData_toPointer@pointer+1,?_immData_toPointer+1
  5255  002646  0012               	return	
  5256  002648                     __end_of_immData_toPointer:
  5257                           	opt stack 0
  5258                           tblptru	equ	0xFF8
  5259                           tblptrh	equ	0xFF7
  5260                           tblptrl	equ	0xFF6
  5261                           tablat	equ	0xFF5
  5262                           prodh	equ	0xFF4
  5263                           prodl	equ	0xFF3
  5264                           postinc0	equ	0xFEE
  5265                           wreg	equ	0xFE8
  5266                           postdec1	equ	0xFE5
  5267                           fsr1h	equ	0xFE2
  5268                           fsr1l	equ	0xFE1
  5269                           indf2	equ	0xFDF
  5270                           fsr2h	equ	0xFDA
  5271                           fsr2l	equ	0xFD9
  5272                           status	equ	0xFD8
  5273                           
  5274 ;; *************** function _getPortData *****************
  5275 ;; Defined at:
  5276 ;;		line 196 in file "source/emulator.c"
  5277 ;; Parameters:    Size  Location     Type
  5278 ;;  portNumber      1    wreg     unsigned char 
  5279 ;; Auto vars:     Size  Location     Type
  5280 ;;  portNumber      1    0[COMRAM] unsigned char 
  5281 ;; Return value:  Size  Location     Type
  5282 ;;                  1    wreg      unsigned char 
  5283 ;; Registers used:
  5284 ;;		wreg, status,2, status,0
  5285 ;; Tracked objects:
  5286 ;;		On entry : 0/0
  5287 ;;		On exit  : 0/0
  5288 ;;		Unchanged: 0/0
  5289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5291 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5293 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5294 ;;Total ram usage:        1 bytes
  5295 ;; Hardware stack levels used:    1
  5296 ;; This function calls:
  5297 ;;		Nothing
  5298 ;; This function is called by:
  5299 ;;		_processOpcode
  5300 ;; This function uses a non-reentrant model
  5301 ;;
  5302                           
  5303                           	psect	text8
  5304  002648                     __ptext8:
  5305                           	opt stack 0
  5306  002648                     _getPortData:
  5307                           	opt stack 29
  5308                           
  5309                           ;incstack = 0
  5310                           ;getPortData@portNumber stored from wreg
  5311  002648  CFE8 F001          	movff	wreg,getPortData@portNumber
  5312                           
  5313                           ;emulator.c: 198: switch (portNumber)
  5314  00264C  D002               	goto	l1186
  5315  00264E                     l220:
  5316                           
  5317                           ;emulator.c: 201: return RCREG2;
  5318  00264E  5074               	movf	3956,w,c	;volatile
  5319  002650  0012               	return	
  5320  002652                     l1186:
  5321  002652  5001               	movf	getPortData@portNumber,w,c
  5322                           
  5323                           ; Switch size 1, requested type "space"
  5324                           ; Number of cases is 1, Range of values is 2 to 2
  5325                           ; switch strategies available:
  5326                           ; Name         Instructions Cycles
  5327                           ; simple_byte            4     3 (average)
  5328                           ;	Chosen strategy is simple_byte
  5329  002654  0A02               	xorlw	2	; case 2
  5330  002656  B4D8               	btfsc	status,2,c
  5331  002658  D7FA               	goto	l220
  5332                           
  5333                           ;emulator.c: 204: return 0;
  5334  00265A  0E00               	movlw	0
  5335  00265C  0012               	return	
  5336  00265E                     __end_of_getPortData:
  5337                           	opt stack 0
  5338                           tblptru	equ	0xFF8
  5339                           tblptrh	equ	0xFF7
  5340                           tblptrl	equ	0xFF6
  5341                           tablat	equ	0xFF5
  5342                           prodh	equ	0xFF4
  5343                           prodl	equ	0xFF3
  5344                           postinc0	equ	0xFEE
  5345                           wreg	equ	0xFE8
  5346                           postdec1	equ	0xFE5
  5347                           fsr1h	equ	0xFE2
  5348                           fsr1l	equ	0xFE1
  5349                           indf2	equ	0xFDF
  5350                           fsr2h	equ	0xFDA
  5351                           fsr2l	equ	0xFD9
  5352                           status	equ	0xFD8
  5353                           
  5354 ;; *************** function _getMXbits *****************
  5355 ;; Defined at:
  5356 ;;		line 38 in file "source/emulator.c"
  5357 ;; Parameters:    Size  Location     Type
  5358 ;;  subRegister     1    wreg     unsigned char 
  5359 ;; Auto vars:     Size  Location     Type
  5360 ;;  subRegister     1    2[COMRAM] unsigned char 
  5361 ;;  regMX_temp      2    0[COMRAM] unsigned int 
  5362 ;; Return value:  Size  Location     Type
  5363 ;;                  1    wreg      unsigned char 
  5364 ;; Registers used:
  5365 ;;		wreg, status,2
  5366 ;; Tracked objects:
  5367 ;;		On entry : 0/0
  5368 ;;		On exit  : 0/0
  5369 ;;		Unchanged: 0/0
  5370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5372 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5374 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5375 ;;Total ram usage:        3 bytes
  5376 ;; Hardware stack levels used:    1
  5377 ;; This function calls:
  5378 ;;		Nothing
  5379 ;; This function is called by:
  5380 ;;		_processOpcode
  5381 ;; This function uses a non-reentrant model
  5382 ;;
  5383                           
  5384                           	psect	text9
  5385  00265E                     __ptext9:
  5386                           	opt stack 0
  5387  00265E                     _getMXbits:
  5388                           	opt stack 29
  5389                           
  5390                           ;incstack = 0
  5391                           ;getMXbits@subRegister stored from wreg
  5392  00265E  CFE8 F003          	movff	wreg,getMXbits@subRegister
  5393                           
  5394                           ;emulator.c: 40: uint16_t regMX_temp = regMX;
  5395  002662  C017  F001         	movff	_regMX,getMXbits@regMX_temp
  5396  002666  C018  F002         	movff	_regMX+1,getMXbits@regMX_temp+1
  5397                           
  5398                           ;emulator.c: 45: }
  5399                           ;emulator.c: 47: return (uint8_t) regMX_temp;
  5400  00266A  5001               	movf	getMXbits@regMX_temp,w,c
  5401  00266C  0012               	return	
  5402  00266E                     __end_of_getMXbits:
  5403                           	opt stack 0
  5404                           tblptru	equ	0xFF8
  5405                           tblptrh	equ	0xFF7
  5406                           tblptrl	equ	0xFF6
  5407                           tablat	equ	0xFF5
  5408                           prodh	equ	0xFF4
  5409                           prodl	equ	0xFF3
  5410                           postinc0	equ	0xFEE
  5411                           wreg	equ	0xFE8
  5412                           postdec1	equ	0xFE5
  5413                           fsr1h	equ	0xFE2
  5414                           fsr1l	equ	0xFE1
  5415                           indf2	equ	0xFDF
  5416                           fsr2h	equ	0xFDA
  5417                           fsr2l	equ	0xFD9
  5418                           status	equ	0xFD8
  5419                           
  5420 ;; *************** function _getFbits *****************
  5421 ;; Defined at:
  5422 ;;		line 83 in file "source/emulator.c"
  5423 ;; Parameters:    Size  Location     Type
  5424 ;;  subRegister     1    wreg     unsigned char 
  5425 ;; Auto vars:     Size  Location     Type
  5426 ;;  subRegister     1    0[COMRAM] unsigned char 
  5427 ;;  regF_temp       1    1[COMRAM] unsigned char 
  5428 ;; Return value:  Size  Location     Type
  5429 ;;                  1    wreg      unsigned char 
  5430 ;; Registers used:
  5431 ;;		wreg, status,2, status,0
  5432 ;; Tracked objects:
  5433 ;;		On entry : 0/0
  5434 ;;		On exit  : 0/0
  5435 ;;		Unchanged: 0/0
  5436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5438 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5440 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5441 ;;Total ram usage:        2 bytes
  5442 ;; Hardware stack levels used:    1
  5443 ;; This function calls:
  5444 ;;		Nothing
  5445 ;; This function is called by:
  5446 ;;		_processOpcode
  5447 ;; This function uses a non-reentrant model
  5448 ;;
  5449                           
  5450                           	psect	text10
  5451  0025EE                     __ptext10:
  5452                           	opt stack 0
  5453  0025EE                     _getFbits:
  5454                           	opt stack 29
  5455                           
  5456                           ;incstack = 0
  5457                           ;getFbits@subRegister stored from wreg
  5458  0025EE  CFE8 F001          	movff	wreg,getFbits@subRegister
  5459                           
  5460                           ;emulator.c: 85: uint8_t regF_temp = regF;
  5461  0025F2  C01F  F002         	movff	_regF,getFbits@regF_temp
  5462                           
  5463                           ;emulator.c: 113: }
  5464                           
  5465                           ;emulator.c: 112: break;
  5466                           
  5467                           ;emulator.c: 109: case 4:
  5468                           
  5469                           ;emulator.c: 107: break;
  5470                           
  5471                           ;emulator.c: 104: case 3:
  5472                           
  5473                           ;emulator.c: 102: break;
  5474                           
  5475                           ;emulator.c: 99: case 2:
  5476                           
  5477                           ;emulator.c: 97: break;
  5478                           
  5479                           ;emulator.c: 94: case 1:
  5480                           
  5481                           ;emulator.c: 92: break;
  5482                           
  5483                           ;emulator.c: 88: {
  5484                           ;emulator.c: 89: case 0:
  5485                           
  5486                           ;emulator.c: 87: switch(subRegister)
  5487  0025F6  5001               	movf	getFbits@subRegister,w,c
  5488                           
  5489                           ; Switch size 1, requested type "space"
  5490                           ; Number of cases is 5, Range of values is 0 to 4
  5491                           ; switch strategies available:
  5492                           ; Name         Instructions Cycles
  5493                           ; simple_byte           16     9 (average)
  5494                           ;	Chosen strategy is simple_byte
  5495  0025F8  0A00               	xorlw	0	; case 0
  5496  0025FA  B4D8               	btfsc	status,2,c
  5497  0025FC  D009               	goto	l195
  5498  0025FE  0A01               	xorlw	1	; case 1
  5499  002600  B4D8               	btfsc	status,2,c
  5500  002602  D006               	goto	l195
  5501  002604  0A03               	xorlw	3	; case 2
  5502  002606  B4D8               	btfsc	status,2,c
  5503  002608  D003               	goto	l195
  5504  00260A  0A01               	xorlw	1	; case 3
  5505  00260C  A4D8               	btfss	status,2,c
  5506  00260E  0A07               	xorlw	7	; case 4
  5507  002610                     l195:
  5508                           
  5509                           ;emulator.c: 115: return regF_temp;
  5510  002610  5002               	movf	getFbits@regF_temp,w,c
  5511  002612  0012               	return	
  5512  002614                     __end_of_getFbits:
  5513                           	opt stack 0
  5514                           tblptru	equ	0xFF8
  5515                           tblptrh	equ	0xFF7
  5516                           tblptrl	equ	0xFF6
  5517                           tablat	equ	0xFF5
  5518                           prodh	equ	0xFF4
  5519                           prodl	equ	0xFF3
  5520                           postinc0	equ	0xFEE
  5521                           wreg	equ	0xFE8
  5522                           postdec1	equ	0xFE5
  5523                           fsr1h	equ	0xFE2
  5524                           fsr1l	equ	0xFE1
  5525                           indf2	equ	0xFDF
  5526                           fsr2h	equ	0xFDA
  5527                           fsr2l	equ	0xFD9
  5528                           status	equ	0xFD8
  5529                           
  5530 ;; *************** function _initializeRegisters *****************
  5531 ;; Defined at:
  5532 ;;		line 176 in file "source/emulator.c"
  5533 ;; Parameters:    Size  Location     Type
  5534 ;;		None
  5535 ;; Auto vars:     Size  Location     Type
  5536 ;;		None
  5537 ;; Return value:  Size  Location     Type
  5538 ;;		None               void
  5539 ;; Registers used:
  5540 ;;		wreg, status,2, status,0, cstack
  5541 ;; Tracked objects:
  5542 ;;		On entry : 0/0
  5543 ;;		On exit  : 0/0
  5544 ;;		Unchanged: 0/0
  5545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5548 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5549 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5550 ;;Total ram usage:        1 bytes
  5551 ;; Hardware stack levels used:    1
  5552 ;; Hardware stack levels required when called:    1
  5553 ;; This function calls:
  5554 ;;		_setFbits
  5555 ;; This function is called by:
  5556 ;;		_main
  5557 ;; This function uses a non-reentrant model
  5558 ;;
  5559                           
  5560                           	psect	text11
  5561  0023FA                     __ptext11:
  5562                           	opt stack 0
  5563  0023FA                     _initializeRegisters:
  5564                           	opt stack 29
  5565                           
  5566                           ;emulator.c: 178: regA = 0;
  5567                           
  5568                           ;incstack = 0
  5569  0023FA  6E06               	movwf	??_initializeRegisters& (0+255),c
  5570  0023FC  0E00               	movlw	0
  5571  0023FE  6E1D               	movwf	_regA,c
  5572  002400  5006               	movf	??_initializeRegisters& (0+255),w,c
  5573                           
  5574                           ;emulator.c: 179: regB = 0;
  5575  002402  6E06               	movwf	??_initializeRegisters& (0+255),c
  5576  002404  0E00               	movlw	0
  5577  002406  6E1E               	movwf	_regB,c
  5578  002408  5006               	movf	??_initializeRegisters& (0+255),w,c
  5579                           
  5580                           ;emulator.c: 181: regPC = 256;
  5581  00240A  0E01               	movlw	1
  5582  00240C  6E1A               	movwf	_regPC+1,c
  5583  00240E  0E00               	movlw	0
  5584  002410  6E19               	movwf	_regPC,c
  5585                           
  5586                           ;emulator.c: 182: regSP = 0;
  5587  002412  6E06               	movwf	??_initializeRegisters& (0+255),c
  5588  002414  0E00               	movlw	0
  5589  002416  6E20               	movwf	_regSP,c
  5590  002418  5006               	movf	??_initializeRegisters& (0+255),w,c
  5591                           
  5592                           ;emulator.c: 183: setFbits(0, 0);
  5593  00241A  6E06               	movwf	??_initializeRegisters& (0+255),c
  5594  00241C  0E00               	movlw	0
  5595  00241E  6E01               	movwf	setFbits@value,c
  5596  002420  5006               	movf	??_initializeRegisters& (0+255),w,c
  5597  002422  0E00               	movlw	0
  5598  002424  ECAD  F012         	call	_setFbits
  5599                           
  5600                           ;emulator.c: 184: setFbits(1, 0);
  5601  002428  6E06               	movwf	??_initializeRegisters& (0+255),c
  5602  00242A  0E00               	movlw	0
  5603  00242C  6E01               	movwf	setFbits@value,c
  5604  00242E  5006               	movf	??_initializeRegisters& (0+255),w,c
  5605  002430  0E01               	movlw	1
  5606  002432  ECAD  F012         	call	_setFbits
  5607                           
  5608                           ;emulator.c: 185: setFbits(2, 0);
  5609  002436  6E06               	movwf	??_initializeRegisters& (0+255),c
  5610  002438  0E00               	movlw	0
  5611  00243A  6E01               	movwf	setFbits@value,c
  5612  00243C  5006               	movf	??_initializeRegisters& (0+255),w,c
  5613  00243E  0E02               	movlw	2
  5614  002440  ECAD  F012         	call	_setFbits
  5615                           
  5616                           ;emulator.c: 186: setFbits(4, 0);
  5617  002444  6E06               	movwf	??_initializeRegisters& (0+255),c
  5618  002446  0E00               	movlw	0
  5619  002448  6E01               	movwf	setFbits@value,c
  5620  00244A  5006               	movf	??_initializeRegisters& (0+255),w,c
  5621  00244C  0E04               	movlw	4
  5622  00244E  ECAD  F012         	call	_setFbits
  5623                           
  5624                           ;emulator.c: 187: setFbits(3, 0);
  5625  002452  6E06               	movwf	??_initializeRegisters& (0+255),c
  5626  002454  0E00               	movlw	0
  5627  002456  6E01               	movwf	setFbits@value,c
  5628  002458  5006               	movf	??_initializeRegisters& (0+255),w,c
  5629  00245A  0E03               	movlw	3
  5630  00245C  ECAD  F012         	call	_setFbits
  5631  002460  0012               	return	
  5632  002462                     __end_of_initializeRegisters:
  5633                           	opt stack 0
  5634                           tblptru	equ	0xFF8
  5635                           tblptrh	equ	0xFF7
  5636                           tblptrl	equ	0xFF6
  5637                           tablat	equ	0xFF5
  5638                           prodh	equ	0xFF4
  5639                           prodl	equ	0xFF3
  5640                           postinc0	equ	0xFEE
  5641                           wreg	equ	0xFE8
  5642                           postdec1	equ	0xFE5
  5643                           fsr1h	equ	0xFE2
  5644                           fsr1l	equ	0xFE1
  5645                           indf2	equ	0xFDF
  5646                           fsr2h	equ	0xFDA
  5647                           fsr2l	equ	0xFD9
  5648                           status	equ	0xFD8
  5649                           
  5650 ;; *************** function _setFbits *****************
  5651 ;; Defined at:
  5652 ;;		line 123 in file "source/emulator.c"
  5653 ;; Parameters:    Size  Location     Type
  5654 ;;  subRegister     1    wreg     unsigned char 
  5655 ;;  value           1    0[COMRAM] unsigned char 
  5656 ;; Auto vars:     Size  Location     Type
  5657 ;;  subRegister     1    2[COMRAM] unsigned char 
  5658 ;;  regF_temp2      1    4[COMRAM] unsigned char 
  5659 ;;  regF_temp1      1    3[COMRAM] unsigned char 
  5660 ;; Return value:  Size  Location     Type
  5661 ;;		None               void
  5662 ;; Registers used:
  5663 ;;		wreg, status,2, status,0
  5664 ;; Tracked objects:
  5665 ;;		On entry : 0/0
  5666 ;;		On exit  : 0/0
  5667 ;;		Unchanged: 0/0
  5668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5669 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5670 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5671 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5672 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5673 ;;Total ram usage:        5 bytes
  5674 ;; Hardware stack levels used:    1
  5675 ;; This function calls:
  5676 ;;		Nothing
  5677 ;; This function is called by:
  5678 ;;		_initializeRegisters
  5679 ;;		_processOpcode
  5680 ;; This function uses a non-reentrant model
  5681 ;;
  5682                           
  5683                           	psect	text12
  5684  00255A                     __ptext12:
  5685                           	opt stack 0
  5686  00255A                     _setFbits:
  5687                           	opt stack 29
  5688                           
  5689                           ;incstack = 0
  5690                           ;setFbits@subRegister stored from wreg
  5691  00255A  CFE8 F003          	movff	wreg,setFbits@subRegister
  5692                           
  5693                           ;emulator.c: 125: uint8_t regF_temp1 = regF;
  5694  00255E  C01F  F004         	movff	_regF,setFbits@regF_temp1
  5695                           
  5696                           ;emulator.c: 126: uint8_t regF_temp2 = regF;
  5697  002562  C01F  F005         	movff	_regF,setFbits@regF_temp2
  5698                           
  5699                           ;emulator.c: 128: switch(subRegister)
  5700  002566  D005               	goto	l1170
  5701  002568                     l1166:
  5702                           
  5703                           ;emulator.c: 133: regF_temp2 = 0;
  5704  002568  6E02               	movwf	??_setFbits& (0+255),c
  5705  00256A  0E00               	movlw	0
  5706  00256C  6E05               	movwf	setFbits@regF_temp2,c
  5707  00256E  5002               	movf	??_setFbits& (0+255),w,c
  5708                           
  5709                           ;emulator.c: 134: break;
  5710  002570  D00D               	goto	l1172
  5711  002572                     l1170:
  5712  002572  5003               	movf	setFbits@subRegister,w,c
  5713                           
  5714                           ; Switch size 1, requested type "space"
  5715                           ; Number of cases is 5, Range of values is 0 to 4
  5716                           ; switch strategies available:
  5717                           ; Name         Instructions Cycles
  5718                           ; simple_byte           16     9 (average)
  5719                           ;	Chosen strategy is simple_byte
  5720  002574  0A00               	xorlw	0	; case 0
  5721  002576  B4D8               	btfsc	status,2,c
  5722  002578  D7F7               	goto	l1166
  5723  00257A  0A01               	xorlw	1	; case 1
  5724  00257C  B4D8               	btfsc	status,2,c
  5725  00257E  D006               	goto	l1172
  5726  002580  0A03               	xorlw	3	; case 2
  5727  002582  B4D8               	btfsc	status,2,c
  5728  002584  D003               	goto	l1172
  5729  002586  0A01               	xorlw	1	; case 3
  5730  002588  A4D8               	btfss	status,2,c
  5731  00258A  0A07               	xorlw	7	; case 4
  5732  00258C                     l1172:
  5733                           
  5734                           ;emulator.c: 165: regF = regF_temp1 + regF_temp2 + value;
  5735  00258C  5004               	movf	setFbits@regF_temp1,w,c
  5736  00258E  2405               	addwf	setFbits@regF_temp2,w,c
  5737  002590  2401               	addwf	setFbits@value,w,c
  5738  002592  6E1F               	movwf	_regF,c
  5739  002594  0012               	return	
  5740  002596                     __end_of_setFbits:
  5741                           	opt stack 0
  5742                           tblptru	equ	0xFF8
  5743                           tblptrh	equ	0xFF7
  5744                           tblptrl	equ	0xFF6
  5745                           tablat	equ	0xFF5
  5746                           prodh	equ	0xFF4
  5747                           prodl	equ	0xFF3
  5748                           postinc0	equ	0xFEE
  5749                           wreg	equ	0xFE8
  5750                           postdec1	equ	0xFE5
  5751                           fsr1h	equ	0xFE2
  5752                           fsr1l	equ	0xFE1
  5753                           indf2	equ	0xFDF
  5754                           fsr2h	equ	0xFDA
  5755                           fsr2l	equ	0xFD9
  5756                           status	equ	0xFD8
  5757                           
  5758 ;; *************** function _initPorts *****************
  5759 ;; Defined at:
  5760 ;;		line 26 in file "source/system.c"
  5761 ;; Parameters:    Size  Location     Type
  5762 ;;		None
  5763 ;; Auto vars:     Size  Location     Type
  5764 ;;		None
  5765 ;; Return value:  Size  Location     Type
  5766 ;;		None               void
  5767 ;; Registers used:
  5768 ;;		wreg, status,2
  5769 ;; Tracked objects:
  5770 ;;		On entry : 0/0
  5771 ;;		On exit  : 0/0
  5772 ;;		Unchanged: 0/0
  5773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5778 ;;Total ram usage:        0 bytes
  5779 ;; Hardware stack levels used:    1
  5780 ;; This function calls:
  5781 ;;		Nothing
  5782 ;; This function is called by:
  5783 ;;		_main
  5784 ;; This function uses a non-reentrant model
  5785 ;;
  5786                           
  5787                           	psect	text13
  5788  002596                     __ptext13:
  5789                           	opt stack 0
  5790  002596                     _initPorts:
  5791                           	opt stack 30
  5792                           
  5793                           ;system.c: 28: TRISA = 0;
  5794                           
  5795                           ;incstack = 0
  5796  002596  0E00               	movlw	0
  5797  002598  6E92               	movwf	3986,c	;volatile
  5798                           
  5799                           ;system.c: 29: TRISC = 0;
  5800  00259A  0E00               	movlw	0
  5801  00259C  6E94               	movwf	3988,c	;volatile
  5802                           
  5803                           ;system.c: 30: TRISE = 0;
  5804  00259E  0E00               	movlw	0
  5805  0025A0  6E96               	movwf	3990,c	;volatile
  5806                           
  5807                           ;system.c: 32: ANSELD = 0;
  5808  0025A2  0E00               	movlw	0
  5809  0025A4  010F               	movlb	15	; () banked
  5810  0025A6  010F               	movlb	15	; () banked
  5811  0025A8  6F3B               	movwf	59,b	;volatile
  5812                           
  5813                           ; BSR set to: 15
  5814                           ;system.c: 33: TRISDbits.RD3 = 0;
  5815  0025AA  9695               	bcf	3989,3,c	;volatile
  5816                           
  5817                           ; BSR set to: 15
  5818                           ;system.c: 34: TRISDbits.RD4 = 1;
  5819  0025AC  8895               	bsf	3989,4,c	;volatile
  5820                           
  5821                           ; BSR set to: 15
  5822                           ;system.c: 35: TRISDbits.RD5 = 0;
  5823  0025AE  9A95               	bcf	3989,5,c	;volatile
  5824                           
  5825                           ; BSR set to: 15
  5826                           ;system.c: 36: TRISDbits.RD7 = 1;
  5827  0025B0  8E95               	bsf	3989,7,c	;volatile
  5828                           
  5829                           ; BSR set to: 15
  5830                           ;system.c: 37: TRISDbits.RD6 = 0;
  5831  0025B2  9C95               	bcf	3989,6,c	;volatile
  5832                           
  5833                           ;system.c: 39: LATA = 0;
  5834  0025B4  0E00               	movlw	0
  5835  0025B6  6E89               	movwf	3977,c	;volatile
  5836                           
  5837                           ;system.c: 40: LATC = 0;
  5838  0025B8  0E00               	movlw	0
  5839  0025BA  6E8B               	movwf	3979,c	;volatile
  5840                           
  5841                           ;system.c: 41: LATD = 0;
  5842  0025BC  0E00               	movlw	0
  5843  0025BE  6E8C               	movwf	3980,c	;volatile
  5844                           
  5845                           ;system.c: 42: LATE = 0;
  5846  0025C0  0E00               	movlw	0
  5847  0025C2  6E8D               	movwf	3981,c	;volatile
  5848                           
  5849                           ; BSR set to: 15
  5850  0025C4  0012               	return	
  5851  0025C6                     __end_of_initPorts:
  5852                           	opt stack 0
  5853                           tblptru	equ	0xFF8
  5854                           tblptrh	equ	0xFF7
  5855                           tblptrl	equ	0xFF6
  5856                           tablat	equ	0xFF5
  5857                           prodh	equ	0xFF4
  5858                           prodl	equ	0xFF3
  5859                           postinc0	equ	0xFEE
  5860                           wreg	equ	0xFE8
  5861                           postdec1	equ	0xFE5
  5862                           fsr1h	equ	0xFE2
  5863                           fsr1l	equ	0xFE1
  5864                           indf2	equ	0xFDF
  5865                           fsr2h	equ	0xFDA
  5866                           fsr2l	equ	0xFD9
  5867                           status	equ	0xFD8
  5868                           
  5869 ;; *************** function _initOscillator *****************
  5870 ;; Defined at:
  5871 ;;		line 9 in file "source/system.c"
  5872 ;; Parameters:    Size  Location     Type
  5873 ;;		None
  5874 ;; Auto vars:     Size  Location     Type
  5875 ;;		None
  5876 ;; Return value:  Size  Location     Type
  5877 ;;		None               void
  5878 ;; Registers used:
  5879 ;;		wreg, status,2
  5880 ;; Tracked objects:
  5881 ;;		On entry : 0/0
  5882 ;;		On exit  : 0/0
  5883 ;;		Unchanged: 0/0
  5884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5888 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5889 ;;Total ram usage:        0 bytes
  5890 ;; Hardware stack levels used:    1
  5891 ;; This function calls:
  5892 ;;		Nothing
  5893 ;; This function is called by:
  5894 ;;		_main
  5895 ;; This function uses a non-reentrant model
  5896 ;;
  5897                           
  5898                           	psect	text14
  5899  002614                     __ptext14:
  5900                           	opt stack 0
  5901  002614                     _initOscillator:
  5902                           	opt stack 30
  5903                           
  5904                           ;system.c: 11: OSCCONbits.IDLEN = 0;
  5905                           
  5906                           ; BSR set to: 15
  5907                           ;incstack = 0
  5908  002614  9ED3               	bcf	4051,7,c	;volatile
  5909                           
  5910                           ;system.c: 12: OSCCONbits.IRCF = 0b111;
  5911  002616  88D3               	bsf	4051,4,c	;volatile
  5912  002618  8AD3               	bsf	4051,5,c	;volatile
  5913  00261A  8CD3               	bsf	4051,6,c	;volatile
  5914                           
  5915                           ;system.c: 13: OSCCONbits.SCS = 0b10;
  5916  00261C  50D3               	movf	4051,w,c	;volatile
  5917  00261E  0BFC               	andlw	-4
  5918  002620  0902               	iorlw	2
  5919  002622  6ED3               	movwf	4051,c	;volatile
  5920                           
  5921                           ;system.c: 14: OSCCON2bits.MFIOSEL = 0;
  5922  002624  98D2               	bcf	4050,4,c	;volatile
  5923                           
  5924                           ;system.c: 15: OSCCON2bits.SOSCGO = 0;
  5925  002626  96D2               	bcf	4050,3,c	;volatile
  5926                           
  5927                           ;system.c: 16: OSCCON2bits.PRISD = 0;
  5928  002628  94D2               	bcf	4050,2,c	;volatile
  5929  00262A                     l114:
  5930  00262A  B4D3               	btfsc	4051,2,c	;volatile
  5931  00262C  0012               	return	
  5932  00262E  D7FD               	goto	l114
  5933  002630                     __end_of_initOscillator:
  5934                           	opt stack 0
  5935                           tblptru	equ	0xFF8
  5936                           tblptrh	equ	0xFF7
  5937                           tblptrl	equ	0xFF6
  5938                           tablat	equ	0xFF5
  5939                           prodh	equ	0xFF4
  5940                           prodl	equ	0xFF3
  5941                           postinc0	equ	0xFEE
  5942                           wreg	equ	0xFE8
  5943                           postdec1	equ	0xFE5
  5944                           fsr1h	equ	0xFE2
  5945                           fsr1l	equ	0xFE1
  5946                           indf2	equ	0xFDF
  5947                           fsr2h	equ	0xFDA
  5948                           fsr2l	equ	0xFD9
  5949                           status	equ	0xFD8
  5950                           tblptru	equ	0xFF8
  5951                           tblptrh	equ	0xFF7
  5952                           tblptrl	equ	0xFF6
  5953                           tablat	equ	0xFF5
  5954                           prodh	equ	0xFF4
  5955                           prodl	equ	0xFF3
  5956                           postinc0	equ	0xFEE
  5957                           wreg	equ	0xFE8
  5958                           postdec1	equ	0xFE5
  5959                           fsr1h	equ	0xFE2
  5960                           fsr1l	equ	0xFE1
  5961                           indf2	equ	0xFDF
  5962                           fsr2h	equ	0xFDA
  5963                           fsr2l	equ	0xFD9
  5964                           status	equ	0xFD8
  5965                           
  5966                           	psect	rparam
  5967  0000                     tblptru	equ	0xFF8
  5968                           tblptrh	equ	0xFF7
  5969                           tblptrl	equ	0xFF6
  5970                           tablat	equ	0xFF5
  5971                           prodh	equ	0xFF4
  5972                           prodl	equ	0xFF3
  5973                           postinc0	equ	0xFEE
  5974                           wreg	equ	0xFE8
  5975                           postdec1	equ	0xFE5
  5976                           fsr1h	equ	0xFE2
  5977                           fsr1l	equ	0xFE1
  5978                           indf2	equ	0xFDF
  5979                           fsr2h	equ	0xFDA
  5980                           fsr2l	equ	0xFD9
  5981                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    4
    Data        2048
    BSS         270
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     18      32
    BANK0           160      0       0
    BANK1           256      0     256
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_processOpcode
    _processOpcode->_setPortData
    _setPortData->_enableSerial
    _initializeRegisters->_setFbits

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    6149
                                             17 COMRAM     1     1      0
                            _dispSeg
                     _initOscillator
                          _initPorts
                _initializeRegisters
                      _processOpcode
 ---------------------------------------------------------------------------------
 (1) _processOpcode                                        9     9      0    3458
                                              8 COMRAM     9     9      0
                           _getFbits
                          _getMXbits
                        _getPortData
                  _immData_toPointer
                           _setFbits
                          _setMXbits
                        _setPortData
                     _update_immData
 ---------------------------------------------------------------------------------
 (2) _update_immData                                       2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _setPortData                                          4     3      1    1946
                                              4 COMRAM     4     3      1
                            _dispSeg
                       _enableSerial
 ---------------------------------------------------------------------------------
 (3) _enableSerial                                         4     2      2      49
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _dispSeg                                              2     1      1    1645
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _setMXbits                                            6     5      1     196
                                              0 COMRAM     6     5      1
 ---------------------------------------------------------------------------------
 (2) _immData_toPointer                                    4     2      2      15
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _getPortData                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _getMXbits                                            3     3      0      30
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _getFbits                                             2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _initializeRegisters                                  1     1      0    1046
                                              5 COMRAM     1     1      0
                           _setFbits
 ---------------------------------------------------------------------------------
 (2) _setFbits                                             5     4      1    1046
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (1) _initPorts                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initOscillator                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _dispSeg
   _initOscillator
   _initPorts
   _initializeRegisters
     _setFbits
   _processOpcode
     _getFbits
     _getMXbits
     _getPortData
     _immData_toPointer
     _setFbits
     _setMXbits
     _setPortData
       _dispSeg
       _enableSerial
     _update_immData

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0     800      37       52.6%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     12      20       1       33.7%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     120      12        0.0%
DATA                 0      0     920       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Thu Mar 13 13:19:22 2014

                          l50 1FD4                            l60 206A                            l53 1FF8  
                          l70 2128                            l62 2090                            l55 201E  
                          l80 21E6                            l72 214E                            l64 20B6  
                          l82 220C                            l74 2174                            l66 20DC  
                          l58 2044                            l84 2232                            l76 219A  
                          l68 2102                            l86 2258                            l78 21C0  
              _update_immData 2462                  __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000  
                __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000                           l114 262A  
                         l220 264E                           l233 2336                           l226 22DE  
                         l340 1D64                           l260 189C                           l264 18CC  
                         l337 1D1E                           l281 1968                           l265 18D2  
                         l282 1972                           l266 18D8                           l258 1890  
                         l195 2610                           l275 1914                           l267 18DE  
                         l259 1896                           l278 193E                           l990 1FE4  
                         l994 2008                           l986 1FC0                           l998 202E  
                __CFG_CPB$OFF 000000                  __CFG_CPD$OFF 000000                           prod 000FF3  
                         wreg 000FE8         getPortData@portNumber 0001                    _TXSTA2bits 000F72  
                __CFG_LVP$OFF 000000                          l1010 20A0                          l1002 2054  
                        l1030 215E                          l1022 2112                          l1014 20C6  
                        l1006 207A                          l1200 237C                          l1050 221C  
                        l1042 21D0                          l1034 2184                          l1026 2138  
                        l1018 20EC                          l1202 2380                          l1060 2268  
                        l1204 2384                          l1300 2348                          l1054 2242  
                        l1046 21F6                          l1038 21AA                          l1206 238A  
                        l1208 23E2                          l1304 2354                          l1400 19DC  
                        l1320 1846                          l1170 2572                          l1410 1A02  
                        l1402 19EC                          l1330 1868                          l1314 181E  
                        l1172 258C                          l1252 2480                          l1420 1A26  
                        l1340 18A2                          l1324 1850                          l1316 182E  
                        l1166 2568                          l1510 1BF2                          l1502 1BBA  
                        l1430 1A40                          l1406 19F2                          l1350 18F2  
                        l1342 18B4                          l1334 1874                          l1326 185C  
                        l1318 183E                          l1280 22EA                          l1256 249E  
                        l1520 1C2A                          l1440 1A5C                          l1416 1A1E  
                        l1360 1904                          l1344 18C0                          l1336 1880  
                        l1186 2652                          l1506 1BD8                          l1450 1A78  
                        l1426 1A38                          l1362 190A                          l1354 18F8  
                        l1338 1888                          l1602 24E8                          l1196 2374  
                        l1292 2318                          l1284 22F8                          l1540 1CD2  
                        l1532 1C8C                          l1524 1C46                          l1516 1C0E  
                        l1460 1A96                          l1436 1A54                          l1372 192E  
                        l1356 18FE                          l1348 18EC                          l1710 23B4  
                        l1198 2378                          l1550 1D18                          l1542 1CE0  
                        l1446 1A70                          l1390 199E                          l1366 1910  
                        l1606 2500                          l1712 23BA                          l1296 2328  
                        l1288 2308                          l1560 1D5E                          l1544 1CE6  
                        l1536 1CAE                          l1528 1C6A                          l1480 1AFA  
                        l1472 1AD8                          l1464 1AA8                          l1456 1A8C  
                        l1384 197A                          l1608 250A                          l1714 23C4  
                        l1298 233C                          l1490 1B62                          l1466 1AB2  
                        l1394 19B6                          l1378 1958         setPortData@portNumber 0006  
                        l1716 23CE                          l1580 1DE8                          l1572 1DAE  
                        l1548 1D0A                          l1396 19C4                          l1388 1990  
                        l1718 23D8                          l1566 1D96                          l1558 1D50  
                        l1494 1B7C                          l1486 1B48                          l1590 1E14  
                        l1584 1E02                          l1576 1DD6                          l1568 1DA4  
                        l1592 1FB4                          l1586 1E10                          l1578 1DE4  
                        l1498 1B9A                          _LATA 000F89                          _LATC 000F8B  
                        _LATD 000F8C                          _LATE 000F8D                          _main 24C0  
                        _regA 001D                          _regB 001E                          _regF 001F  
                        fsr1h 000FE2                          fsr1l 000FE1                          indf2 000FDF  
                        fsr2l 000FD9                 __CFG_BORV$190 000000                          prodl 000FF3  
                        start 0000                 __CFG_IESO$OFF 000000        __end_of_update_immData 24C0  
       setPortData@outputData 0005             getFbits@regF_temp 0002                  _BAUDCON2bits 000F70  
                       ?_main 0001                         _TRISA 000F92                         _TRISC 000F94  
                       _TRISE 000F96                 __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000  
               __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000                __CFG_EBTR0$OFF 000000  
              __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000                __CFG_EBTR2$OFF 000000  
              __CFG_EBTR3$OFF 000000               __end_of_dispSeg 22D8                 __CFG_WRTB$OFF 000000  
               __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000  
             ??_processOpcode 0009                         _regPC 0019                         _regMX 0017  
                       _regSP 0020            __CFG_MCLRE$EXTMCLR 000000                         _stack 0100  
    processOpcode@regA_temp16 0010                __CFG_BOREN$OFF 000000                         tablat 000FF5  
                       status 000FD8                __CFG_HFOFST$ON 000000               __initialization 2510  
                __end_of_main 2510               ?_update_immData 0001    __end_of_virtualMemory_size 1005  
        __end_of_enableSerial 23FA                        ??_main 0012                 __activetblptr 000003  
        enableSerial@baudRate 0001            setFbits@regF_temp1 0004            setFbits@regF_temp2 0005  
                ?_setPortData 0005                        _ANSELD 000F3B                __CFG_WDTEN$OFF 000000  
        __size_of_getPortData 0016                        _RCREG2 000F74                        _SPBRG2 000F75  
         getMXbits@regMX_temp 0001           setMXbits@regMX_temp 0004                        _TXREG2 000F73  
            __end_of_getFbits 2614                __CFG_XINST$OFF 000000                __CFG_STVREN$ON 000000  
__size_of_initializeRegisters 0068                        clear_0 2518                        clear_1 252A  
                   ??_dispSeg 0002              __end_of_setFbits 2596                  __pdataBIGRAM 0200  
                __mediumconst 0000                 _virtualMemory 0200                        tblptrh 000FF7  
                      tblptrl 000FF6                        tblptru 000FF8             _immData_toPointer 2630  
          ?_immData_toPointer 0001                    __accesstop 0060       __end_of__initialization 2554  
             __CFG_PBADEN$OFF 000000  setPortData@outputData_temp16 0007                 setFbits@value 0001  
         ??_immData_toPointer 0003           setMXbits@value_temp 0002                __pcstackCOMRAM 0001  
          __size_of_getMXbits 0010     __end_of_immData_toPointer 2648       __size_of_initOscillator 001C  
                  __pbssBANK1 0100               __CFG_PLLCFG$OFF 000000            __size_of_initPorts 0030  
          __CFG_CCP2MX$PORTC1 000000         __size_of_enableSerial 008A            __size_of_setMXbits 0028  
          __CFG_CCP3MX$PORTB5 000000                     ?_getFbits 0001             __CFG_PRICLKEN$OFF 000000  
                     _SPBRGH2 000F76          __size_of_setPortData 0098                  _enableSerial 2370  
           __end_of_getMXbits 266E                     ?_setFbits 0001              ??_update_immData 0001  
             __CFG_PWRTEN$OFF 000000                       __Hparam 0000                       __Lparam 0000  
                __psmallconst 1000                       __pcinit 2510                       __ramtop 1000  
                     __ptext0 24C0                       __ptext1 1806                       __ptext2 2462  
                     __ptext3 22D8                       __ptext4 2370                       __ptext5 1FBA  
                     __ptext6 25C6                       __ptext7 2630                       __ptext8 2648  
                     __ptext9 265E                       _dispSeg 1FBA             __end_of_initPorts 25C6  
  __size_of_immData_toPointer 0018                    ??_getFbits 0001            _virtualMemory_size 1001  
           __end_of_setMXbits 25EE          end_of_initialization 2554         __end_of_processOpcode 1FBA  
         _initializeRegisters 23FA                    ??_setFbits 0002                       postdec1 000FE5  
                     postinc0 000FEE           getFbits@subRegister 0001          ?_initializeRegisters 0001  
         setFbits@subRegister 0003       processOpcode@carriedBit 000E                     _TRISDbits 000F95  
               ??_getPortData 0001                _initOscillator 2614                setMXbits@value 0001  
        getMXbits@subRegister 0003          setMXbits@subRegister 0006         ??_initializeRegisters 0006  
               __pidataBIGRAM 1006       processOpcode@regPC_temp 000C       processOpcode@regA_temp8 000F  
         start_initialization 2510        __end_of_initOscillator 2630           __end_of_getPortData 265E  
                 __pbssCOMRAM 0013               ?_initOscillator 0001             __size_of_getFbits 0026  
                   _getMXbits 265E             __size_of_setFbits 003C                     _immData_1 001B  
                   _immData_2 001C                      ?_dispSeg 0001                   __smallconst 1000  
                   _initPorts 2596                   _getPortData 2648                 ??_setPortData 0006  
                   _setMXbits 25C6                      _LATAbits 000F89                      _LATCbits 000F8B  
                    _LATDbits 000F8C                      _LATEbits 000F8D                    ?_getMXbits 0001  
            __CFG_WDTPS$32768 000000                    ?_initPorts 0001                     copy_data0 2544  
                  ?_setMXbits 0001           __end_of_setPortData 2370                      __Hrparam 0000  
                    __Lrparam 0000             __CFG_P2BMX$PORTD2 000000        __size_of_processOpcode 07B4  
     __size_of_update_immData 005E              __size_of_dispSeg 031E                      _getFbits 25EE  
                    __ptext10 25EE                      __ptext11 23FA                      __ptext12 255A  
                    __ptext13 2596                      __ptext14 2614                   _OSCCON2bits 000FD2  
    immData_toPointer@pointer 0003                 __size_of_main 0050                      _setFbits 255A  
 __end_of_initializeRegisters 2462                   ??_getMXbits 0001              ??_initOscillator 0001  
                 ??_initPorts 0001                   _setPortData 22D8                 ?_enableSerial 0001  
               _processOpcode 1806                   ??_setMXbits 0002                    _RCSTA2bits 000F71  
                  _OSCCONbits 000FD3                dispSeg@segment 0002                  wait_ms@timel 0013  
           __CFG_T3CMX$PORTC0 000000                 dispSeg@letter 0001                  ?_getPortData 0001  
              ??_enableSerial 0003                ?_processOpcode 0001             __CFG_FOSC$INTIO67 000000  
