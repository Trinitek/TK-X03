

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Tue Feb 04 13:33:21 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	text0,global,reloc=2,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    11                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    12  0000                     _ANSELD	set	3899
    13  0000                     _LATA	set	3977
    14  0000                     _LATAbits	set	3977
    15  0000                     _LATC	set	3979
    16  0000                     _LATCbits	set	3979
    17  0000                     _LATD	set	3980
    18  0000                     _LATDbits	set	3980
    19  0000                     _LATE	set	3981
    20  0000                     _LATEbits	set	3981
    21  0000                     _PORTDbits	set	3971
    22  0000                     _TRISA	set	3986
    23  0000                     _TRISC	set	3988
    24  0000                     _TRISDbits	set	3989
    25  0000                     _TRISE	set	3990
    26                           
    27 ;;
    28 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
    29 ;;
    30 ;; *************** function _main *****************
    31 ;; Defined at:
    32 ;;		line 46 in file "source/main.c"
    33 ;; Parameters:    Size  Location     Type
    34 ;;		None
    35 ;; Auto vars:     Size  Location     Type
    36 ;;		None
    37 ;; Return value:  Size  Location     Type
    38 ;;		None               void
    39 ;; Registers used:
    40 ;;		wreg, status,2, status,0, cstack
    41 ;; Tracked objects:
    42 ;;		On entry : 0/0
    43 ;;		On exit  : 0/0
    44 ;;		Unchanged: 0/0
    45 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
    46 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
    47 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
    48 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
    49 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
    50 ;;Total ram usage:        1 bytes
    51 ;; Hardware stack levels required when called:    1
    52 ;; This function calls:
    53 ;;		_dispSeg
    54 ;; This function is called by:
    55 ;;		Startup code after reset
    56 ;; This function uses a non-reentrant model
    57 ;;
    58                           
    59                           	psect	text0
    60  00FC6A                     __ptext0:
    61                           	opt stack 0
    62  00FC6A                     _main:
    63                           	opt stack 30
    64                           
    65                           ;main.c: 48: TRISA = 0;
    66                           
    67                           ;incstack = 0
    68  00FC6A  0E00               	movlw	0
    69  00FC6C  6E92               	movwf	3986,c	;volatile
    70                           
    71                           ;main.c: 49: TRISC = 0;
    72  00FC6E  0E00               	movlw	0
    73  00FC70  6E94               	movwf	3988,c	;volatile
    74                           
    75                           ;main.c: 50: TRISE = 0;
    76  00FC72  0E00               	movlw	0
    77  00FC74  6E96               	movwf	3990,c	;volatile
    78                           
    79                           ;main.c: 52: ANSELD = 0;
    80  00FC76  0E00               	movlw	0
    81  00FC78  010F               	movlb	15	; () banked
    82  00FC7A  010F               	movlb	15	; () banked
    83  00FC7C  6F3B               	movwf	59,b	;volatile
    84                           
    85                           ; BSR set to: 15
    86                           ;main.c: 53: TRISDbits.RD3 = 0;
    87  00FC7E  9695               	bcf	3989,3,c	;volatile
    88                           
    89                           ; BSR set to: 15
    90                           ;main.c: 54: TRISDbits.RD4 = 1;
    91  00FC80  8895               	bsf	3989,4,c	;volatile
    92                           
    93                           ; BSR set to: 15
    94                           ;main.c: 55: TRISDbits.RD5 = 0;
    95  00FC82  9A95               	bcf	3989,5,c	;volatile
    96                           
    97                           ; BSR set to: 15
    98                           ;main.c: 56: TRISDbits.RD6 = 0;
    99  00FC84  9C95               	bcf	3989,6,c	;volatile
   100                           
   101                           ; BSR set to: 15
   102                           ;main.c: 57: TRISDbits.RD7 = 1;
   103  00FC86  8E95               	bsf	3989,7,c	;volatile
   104                           
   105                           ;main.c: 59: LATA = 0;
   106  00FC88  0E00               	movlw	0
   107  00FC8A  6E89               	movwf	3977,c	;volatile
   108                           
   109                           ;main.c: 60: LATC = 0;
   110  00FC8C  0E00               	movlw	0
   111  00FC8E  6E8B               	movwf	3979,c	;volatile
   112                           
   113                           ;main.c: 61: LATD = 0;
   114  00FC90  0E00               	movlw	0
   115  00FC92  6E8C               	movwf	3980,c	;volatile
   116                           
   117                           ;main.c: 62: LATE = 0;
   118  00FC94  0E00               	movlw	0
   119  00FC96  6E8D               	movwf	3981,c	;volatile
   120                           
   121                           ; BSR set to: 15
   122                           ;main.c: 64: LATDbits.LD3 = 1;
   123  00FC98  868C               	bsf	3980,3,c	;volatile
   124                           
   125                           ; BSR set to: 15
   126                           ;main.c: 65: LATDbits.LD5 = 1;
   127  00FC9A  8A8C               	bsf	3980,5,c	;volatile
   128                           
   129                           ; BSR set to: 15
   130                           ;main.c: 70: dispSeg(1, '-'); dispSeg(1, '-');
   131                           
   132                           ; BSR set to: 15
   133                           
   134                           ;main.c: 68: while (PORTDbits.RD4 = 0)
   135  00FC9C  9883               	bcf	3971,4,c	;volatile
   136  00FC9E  6E07               	movwf	??_main& (0+255),c
   137  00FCA0  0E2D               	movlw	45
   138  00FCA2  6E05               	movwf	dispSeg@letter,c
   139  00FCA4  5007               	movf	??_main& (0+255),w,c
   140  00FCA6  0E01               	movlw	1
   141  00FCA8  EC71  F07E         	call	_dispSeg
   142  00FCAC                     l860:
   143                           
   144                           ;main.c: 72: {
   145                           ;main.c: 73: if (PORTDbits.RD7 == 1) dispSeg(1, '1');
   146  00FCAC  AE83               	btfss	3971,7,c	;volatile
   147  00FCAE  D007               	goto	l864
   148  00FCB0  6E07               	movwf	??_main& (0+255),c
   149  00FCB2  0E31               	movlw	49
   150  00FCB4  6E05               	movwf	dispSeg@letter,c
   151  00FCB6  5007               	movf	??_main& (0+255),w,c
   152  00FCB8  0E01               	movlw	1
   153  00FCBA  EC71  F07E         	call	_dispSeg
   154  00FCBE                     l864:
   155                           
   156                           ;main.c: 74: if (PORTDbits.RD7 == 0) dispSeg(1, '0');
   157  00FCBE  BE83               	btfsc	3971,7,c	;volatile
   158  00FCC0  D008               	goto	l868
   159  00FCC2  6E07               	movwf	??_main& (0+255),c
   160  00FCC4  0E30               	movlw	48
   161  00FCC6  6E05               	movwf	dispSeg@letter,c
   162  00FCC8  5007               	movf	??_main& (0+255),w,c
   163  00FCCA  0E01               	movlw	1
   164  00FCCC  EC71  F07E         	call	_dispSeg
   165  00FCD0  D7ED               	goto	l860
   166  00FCD2                     l868:
   167                           
   168                           ;main.c: 75: else dispSeg(1, 'E');
   169  00FCD2  6E07               	movwf	??_main& (0+255),c
   170  00FCD4  0E45               	movlw	69
   171  00FCD6  6E05               	movwf	dispSeg@letter,c
   172  00FCD8  5007               	movf	??_main& (0+255),w,c
   173  00FCDA  0E01               	movlw	1
   174  00FCDC  EC71  F07E         	call	_dispSeg
   175  00FCE0  D7E5               	goto	l860
   176  00FCE2                     __end_of_main:
   177                           	opt stack 0
   178                           
   179                           	psect	cinit
   180  00FC58                     __pcinit:
   181                           	opt stack 0
   182  00FC58                     start_initialization:
   183                           	opt stack 0
   184  00FC58                     __initialization:
   185                           	opt stack 0
   186                           
   187                           ; Clear objects allocated to COMRAM (4 bytes)
   188  00FC58  6A04               	clrf	(__pbssCOMRAM+3)& (0+255),c
   189  00FC5A  6A03               	clrf	(__pbssCOMRAM+2)& (0+255),c
   190  00FC5C  6A02               	clrf	(__pbssCOMRAM+1)& (0+255),c
   191  00FC5E  6A01               	clrf	__pbssCOMRAM& (0+255),c
   192  00FC60                     end_of_initialization:
   193                           	opt stack 0
   194  00FC60                     __end_of__initialization:
   195                           	opt stack 0
   196  00FC60  0E00               	movlw	low (__Lmediumconst shr (0+16))
   197  00FC62  6EF8               	movwf	tblptru,c
   198  00FC64  0100               	movlb	0
   199  00FC66  EF35  F07E         	goto	_main	;jump to C main() function
   200                           tblptru	equ	0xFF8
   201                           
   202                           	psect	bssCOMRAM
   203  000001                     __pbssCOMRAM:
   204                           	opt stack 0
   205  000001                     wait_ms@timel:
   206                           	opt stack 0
   207  000001                     	ds	4
   208                           tblptru	equ	0xFF8
   209                           
   210                           	psect	cstackCOMRAM
   211  000005                     __pcstackCOMRAM:
   212                           	opt stack 0
   213  000005                     dispSeg@letter:
   214                           	opt stack 0
   215                           
   216                           ; 1 bytes @ 0x0
   217  000005                     	ds	1
   218  000006                     dispSeg@segment:
   219                           	opt stack 0
   220                           
   221                           ; 1 bytes @ 0x1
   222  000006                     	ds	1
   223  000007                     ??_main:
   224                           
   225                           ; 0 bytes @ 0x2
   226  000007                     	ds	1
   227                           tblptru	equ	0xFF8
   228                           
   229 ;; *************** function _dispSeg *****************
   230 ;; Defined at:
   231 ;;		line 98 in file "source/main.c"
   232 ;; Parameters:    Size  Location     Type
   233 ;;  segment         1    wreg     unsigned char 
   234 ;;  letter          1    0[COMRAM] unsigned char 
   235 ;; Auto vars:     Size  Location     Type
   236 ;;  segment         1    1[COMRAM] unsigned char 
   237 ;; Return value:  Size  Location     Type
   238 ;;		None               void
   239 ;; Registers used:
   240 ;;		wreg, status,2, status,0
   241 ;; Tracked objects:
   242 ;;		On entry : 0/0
   243 ;;		On exit  : 0/0
   244 ;;		Unchanged: 0/0
   245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   246 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   247 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   249 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   250 ;;Total ram usage:        2 bytes
   251 ;; Hardware stack levels used:    1
   252 ;; This function calls:
   253 ;;		Nothing
   254 ;; This function is called by:
   255 ;;		_main
   256 ;;		_cycleSegDisplays
   257 ;; This function uses a non-reentrant model
   258 ;;
   259                           
   260                           	psect	text1
   261  00FCE2                     __ptext1:
   262                           	opt stack 0
   263  00FCE2                     _dispSeg:
   264                           	opt stack 30
   265                           
   266                           ;incstack = 0
   267                           ;dispSeg@segment stored from wreg
   268  00FCE2  CFE8 F006          	movff	wreg,dispSeg@segment
   269                           
   270                           ;main.c: 100: switch (letter) {
   271  00FCE6  D154               	goto	l760
   272  00FCE8                     l686:
   273                           
   274                           ;main.c: 102: if (segment == 1) {
   275  00FCE8  0406               	decf	dispSeg@segment,w,c
   276  00FCEA  A4D8               	btfss	status,2,c
   277  00FCEC  D007               	goto	l55
   278                           
   279                           ;main.c: 103: LATAbits.LA2 = LATAbits.LA3 = LATAbits.LA4 = LATAbits.LA5 = LATEbits.LE0 =
      +                           LATAbits.LA0 = LATAbits.LA1 = 0;
   280  00FCEE  9289               	bcf	3977,1,c	;volatile
   281  00FCF0  9089               	bcf	3977,0,c	;volatile
   282  00FCF2  908D               	bcf	3981,0,c	;volatile
   283  00FCF4  9A89               	bcf	3977,5,c	;volatile
   284  00FCF6  9889               	bcf	3977,4,c	;volatile
   285  00FCF8  9689               	bcf	3977,3,c	;volatile
   286  00FCFA  9489               	bcf	3977,2,c	;volatile
   287  00FCFC                     l55:
   288                           
   289                           ;main.c: 104: }
   290                           ;main.c: 105: LATAbits.LA7 = LATAbits.LA6 = LATCbits.LC2 = LATCbits.LC0 = LATCbits.LC1 =
      +                           LATEbits.LE1 = LATEbits.LE2 = 0;
   291  00FCFC  948D               	bcf	3981,2,c	;volatile
   292  00FCFE  928D               	bcf	3981,1,c	;volatile
   293  00FD00  928B               	bcf	3979,1,c	;volatile
   294  00FD02  908B               	bcf	3979,0,c	;volatile
   295  00FD04  948B               	bcf	3979,2,c	;volatile
   296  00FD06  9C89               	bcf	3977,6,c	;volatile
   297  00FD08  9E89               	bcf	3977,7,c	;volatile
   298                           
   299                           ;main.c: 106: break;
   300  00FD0A  0012               	return	
   301  00FD0C                     l690:
   302                           
   303                           ;main.c: 108: if (segment == 1) {
   304  00FD0C  0406               	decf	dispSeg@segment,w,c
   305  00FD0E  A4D8               	btfss	status,2,c
   306  00FD10  D007               	goto	l58
   307                           
   308                           ;main.c: 109: LATAbits.LA1 = 1;
   309  00FD12  8289               	bsf	3977,1,c	;volatile
   310                           
   311                           ;main.c: 110: LATAbits.LA2 = LATAbits.LA3 = LATAbits.LA4 = LATAbits.LA5 = LATEbits.LE0 =
      +                           LATAbits.LA0 = 0;
   312  00FD14  9089               	bcf	3977,0,c	;volatile
   313  00FD16  908D               	bcf	3981,0,c	;volatile
   314  00FD18  9A89               	bcf	3977,5,c	;volatile
   315  00FD1A  9889               	bcf	3977,4,c	;volatile
   316  00FD1C  9689               	bcf	3977,3,c	;volatile
   317  00FD1E  9489               	bcf	3977,2,c	;volatile
   318  00FD20                     l58:
   319                           
   320                           ;main.c: 111: }
   321                           ;main.c: 112: LATEbits.LE2 = 1;
   322  00FD20  848D               	bsf	3981,2,c	;volatile
   323                           
   324                           ;main.c: 113: LATAbits.LA7 = LATAbits.LA6 = LATCbits.LC2 = LATCbits.LC0 = LATCbits.LC1 =
      +                           LATEbits.LE1 = 0;
   325  00FD22  928D               	bcf	3981,1,c	;volatile
   326  00FD24  928B               	bcf	3979,1,c	;volatile
   327  00FD26  908B               	bcf	3979,0,c	;volatile
   328  00FD28  948B               	bcf	3979,2,c	;volatile
   329  00FD2A  9C89               	bcf	3977,6,c	;volatile
   330  00FD2C  9E89               	bcf	3977,7,c	;volatile
   331                           
   332                           ;main.c: 114: break;
   333  00FD2E  0012               	return	
   334  00FD30                     l694:
   335                           
   336                           ;main.c: 116: if (segment == 1) {
   337  00FD30  0406               	decf	dispSeg@segment,w,c
   338  00FD32  A4D8               	btfss	status,2,c
   339  00FD34  D008               	goto	l60
   340                           
   341                           ;main.c: 117: LATAbits.LA2 = LATAbits.LA3 = LATAbits.LA4 = LATAbits.LA5 = LATEbits.LE0 =
      +                           LATAbits.LA0 = 1;
   342  00FD36  8089               	bsf	3977,0,c	;volatile
   343  00FD38  808D               	bsf	3981,0,c	;volatile
   344  00FD3A  8A89               	bsf	3977,5,c	;volatile
   345  00FD3C  8889               	bsf	3977,4,c	;volatile
   346  00FD3E  8689               	bsf	3977,3,c	;volatile
   347  00FD40  8489               	bsf	3977,2,c	;volatile
   348                           
   349                           ;main.c: 118: LATAbits.LA1 = 0;
   350  00FD42  9289               	bcf	3977,1,c	;volatile
   351                           
   352                           ;main.c: 119: return;
   353  00FD44  0012               	return	
   354  00FD46                     l60:
   355                           
   356                           ;main.c: 120: }
   357                           ;main.c: 121: LATAbits.LA7 = LATAbits.LA6 = LATCbits.LC2 = LATCbits.LC0 = LATCbits.LC1 =
      +                           LATEbits.LE1 = 1;
   358  00FD46  828D               	bsf	3981,1,c	;volatile
   359  00FD48  828B               	bsf	3979,1,c	;volatile
   360  00FD4A  808B               	bsf	3979,0,c	;volatile
   361  00FD4C  848B               	bsf	3979,2,c	;volatile
   362  00FD4E  8C89               	bsf	3977,6,c	;volatile
   363  00FD50  8E89               	bsf	3977,7,c	;volatile
   364                           
   365                           ;main.c: 122: LATEbits.LE2 = 0;
   366  00FD52  948D               	bcf	3981,2,c	;volatile
   367                           
   368                           ;main.c: 123: break;
   369  00FD54  0012               	return	
   370  00FD56                     l698:
   371                           
   372                           ;main.c: 125: if (segment == 1) {
   373  00FD56  0406               	decf	dispSeg@segment,w,c
   374  00FD58  A4D8               	btfss	status,2,c
   375  00FD5A  D008               	goto	l63
   376                           
   377                           ;main.c: 126: LATAbits.LA3 = LATAbits.LA4 = 1;
   378  00FD5C  8889               	bsf	3977,4,c	;volatile
   379  00FD5E  8689               	bsf	3977,3,c	;volatile
   380                           
   381                           ;main.c: 127: LATAbits.LA2 = LATAbits.LA5 = LATEbits.LE0 = LATAbits.LA0 = LATAbits.LA1 =
      +                           0;
   382  00FD60  9289               	bcf	3977,1,c	;volatile
   383  00FD62  9089               	bcf	3977,0,c	;volatile
   384  00FD64  908D               	bcf	3981,0,c	;volatile
   385  00FD66  9A89               	bcf	3977,5,c	;volatile
   386  00FD68  9489               	bcf	3977,2,c	;volatile
   387                           
   388                           ;main.c: 128: return;
   389  00FD6A  0012               	return	
   390  00FD6C                     l63:
   391                           
   392                           ;main.c: 129: }
   393                           ;main.c: 130: LATAbits.LA6 = LATCbits.LC2 = 1;
   394  00FD6C  848B               	bsf	3979,2,c	;volatile
   395  00FD6E  8C89               	bsf	3977,6,c	;volatile
   396                           
   397                           ;main.c: 131: LATAbits.LA7 = LATCbits.LC0 = LATCbits.LC1 = LATEbits.LE1 = LATEbits.LE2 =
      +                           0;
   398  00FD70  948D               	bcf	3981,2,c	;volatile
   399  00FD72  928D               	bcf	3981,1,c	;volatile
   400  00FD74  928B               	bcf	3979,1,c	;volatile
   401  00FD76  908B               	bcf	3979,0,c	;volatile
   402  00FD78  9E89               	bcf	3977,7,c	;volatile
   403                           
   404                           ;main.c: 132: break;
   405  00FD7A  0012               	return	
   406  00FD7C                     l702:
   407                           
   408                           ;main.c: 134: if (segment == 1) {
   409  00FD7C  0406               	decf	dispSeg@segment,w,c
   410  00FD7E  A4D8               	btfss	status,2,c
   411  00FD80  D008               	goto	l65
   412                           
   413                           ;main.c: 135: LATAbits.LA2 = LATAbits.LA3 = LATAbits.LA1 = LATEbits.LE0 = LATAbits.LA5 =
      +                           1;
   414  00FD82  8A89               	bsf	3977,5,c	;volatile
   415  00FD84  808D               	bsf	3981,0,c	;volatile
   416  00FD86  8289               	bsf	3977,1,c	;volatile
   417  00FD88  8689               	bsf	3977,3,c	;volatile
   418  00FD8A  8489               	bsf	3977,2,c	;volatile
   419                           
   420                           ;main.c: 136: LATAbits.LA4 = LATAbits.LA0 = 0;
   421  00FD8C  9089               	bcf	3977,0,c	;volatile
   422  00FD8E  9889               	bcf	3977,4,c	;volatile
   423                           
   424                           ;main.c: 137: return;
   425  00FD90  0012               	return	
   426  00FD92                     l65:
   427                           
   428                           ;main.c: 138: }
   429                           ;main.c: 139: LATAbits.LA7 = LATAbits.LA6 = LATEbits.LE2 = LATCbits.LC1 = LATCbits.LC0 =
      +                           1;
   430  00FD92  808B               	bsf	3979,0,c	;volatile
   431  00FD94  828B               	bsf	3979,1,c	;volatile
   432  00FD96  848D               	bsf	3981,2,c	;volatile
   433  00FD98  8C89               	bsf	3977,6,c	;volatile
   434  00FD9A  8E89               	bsf	3977,7,c	;volatile
   435                           
   436                           ;main.c: 140: LATCbits.LC2 = LATEbits.LE1 = 0;
   437  00FD9C  928D               	bcf	3981,1,c	;volatile
   438  00FD9E  948B               	bcf	3979,2,c	;volatile
   439                           
   440                           ;main.c: 141: break;
   441  00FDA0  0012               	return	
   442  00FDA2                     l706:
   443                           
   444                           ;main.c: 143: if (segment == 1) {
   445  00FDA2  0406               	decf	dispSeg@segment,w,c
   446  00FDA4  A4D8               	btfss	status,2,c
   447  00FDA6  D008               	goto	l67
   448                           
   449                           ;main.c: 144: LATAbits.LA2 = LATAbits.LA3 = LATAbits.LA1 = LATAbits.LA4 = LATAbits.LA5 =
      +                           1;
   450  00FDA8  8A89               	bsf	3977,5,c	;volatile
   451  00FDAA  8889               	bsf	3977,4,c	;volatile
   452  00FDAC  8289               	bsf	3977,1,c	;volatile
   453  00FDAE  8689               	bsf	3977,3,c	;volatile
   454  00FDB0  8489               	bsf	3977,2,c	;volatile
   455                           
   456                           ;main.c: 145: LATEbits.LE0 = LATAbits.LA0 = 0;
   457  00FDB2  9089               	bcf	3977,0,c	;volatile
   458  00FDB4  908D               	bcf	3981,0,c	;volatile
   459                           
   460                           ;main.c: 146: return;
   461  00FDB6  0012               	return	
   462  00FDB8                     l67:
   463                           
   464                           ;main.c: 147: }
   465                           ;main.c: 148: LATAbits.LA7 = LATAbits.LA6 = LATEbits.LE2 = LATCbits.LC2 = LATCbits.LC0 =
      +                           1;
   466  00FDB8  808B               	bsf	3979,0,c	;volatile
   467  00FDBA  848B               	bsf	3979,2,c	;volatile
   468  00FDBC  848D               	bsf	3981,2,c	;volatile
   469  00FDBE  8C89               	bsf	3977,6,c	;volatile
   470  00FDC0  8E89               	bsf	3977,7,c	;volatile
   471                           
   472                           ;main.c: 149: LATCbits.LC1 = LATEbits.LE1 = 0;
   473  00FDC2  928D               	bcf	3981,1,c	;volatile
   474  00FDC4  928B               	bcf	3979,1,c	;volatile
   475                           
   476                           ;main.c: 150: break;
   477  00FDC6  0012               	return	
   478  00FDC8                     l710:
   479                           
   480                           ;main.c: 152: if (segment == 1) {
   481  00FDC8  0406               	decf	dispSeg@segment,w,c
   482  00FDCA  A4D8               	btfss	status,2,c
   483  00FDCC  D008               	goto	l69
   484                           
   485                           ;main.c: 153: LATAbits.LA0 = LATAbits.LA1 = LATAbits.LA3 = LATAbits.LA4 = 1;
   486  00FDCE  8889               	bsf	3977,4,c	;volatile
   487  00FDD0  8689               	bsf	3977,3,c	;volatile
   488  00FDD2  8289               	bsf	3977,1,c	;volatile
   489  00FDD4  8089               	bsf	3977,0,c	;volatile
   490                           
   491                           ;main.c: 154: LATAbits.LA2 = LATAbits.LA5 = LATEbits.LE0 = 0;
   492  00FDD6  908D               	bcf	3981,0,c	;volatile
   493  00FDD8  9A89               	bcf	3977,5,c	;volatile
   494  00FDDA  9489               	bcf	3977,2,c	;volatile
   495                           
   496                           ;main.c: 155: return;
   497  00FDDC  0012               	return	
   498  00FDDE                     l69:
   499                           
   500                           ;main.c: 156: }
   501                           ;main.c: 157: LATEbits.LE1 = LATEbits.LE2 = LATAbits.LA6 = LATCbits.LC2 = 1;
   502  00FDDE  848B               	bsf	3979,2,c	;volatile
   503  00FDE0  8C89               	bsf	3977,6,c	;volatile
   504  00FDE2  848D               	bsf	3981,2,c	;volatile
   505  00FDE4  828D               	bsf	3981,1,c	;volatile
   506                           
   507                           ;main.c: 158: LATAbits.LA7 = LATCbits.LC0 = LATCbits.LC1 = 0;
   508  00FDE6  928B               	bcf	3979,1,c	;volatile
   509  00FDE8  908B               	bcf	3979,0,c	;volatile
   510  00FDEA  9E89               	bcf	3977,7,c	;volatile
   511                           
   512                           ;main.c: 159: break;
   513  00FDEC  0012               	return	
   514  00FDEE                     l714:
   515                           
   516                           ;main.c: 161: if (segment == 1) {
   517  00FDEE  0406               	decf	dispSeg@segment,w,c
   518  00FDF0  A4D8               	btfss	status,2,c
   519  00FDF2  D008               	goto	l71
   520                           
   521                           ;main.c: 162: LATAbits.LA2 = LATAbits.LA0 = LATAbits.LA1 = LATAbits.LA4 = LATAbits.LA5 =
      +                           1;
   522  00FDF4  8A89               	bsf	3977,5,c	;volatile
   523  00FDF6  8889               	bsf	3977,4,c	;volatile
   524  00FDF8  8289               	bsf	3977,1,c	;volatile
   525  00FDFA  8089               	bsf	3977,0,c	;volatile
   526  00FDFC  8489               	bsf	3977,2,c	;volatile
   527                           
   528                           ;main.c: 163: LATAbits.LA3 = LATEbits.LE0 = 0;
   529  00FDFE  908D               	bcf	3981,0,c	;volatile
   530  00FE00  9689               	bcf	3977,3,c	;volatile
   531                           
   532                           ;main.c: 164: return;
   533  00FE02  0012               	return	
   534  00FE04                     l71:
   535                           
   536                           ;main.c: 165: }
   537                           ;main.c: 166: LATAbits.LA7 = LATEbits.LE1 = LATEbits.LE2 = LATCbits.LC2 = LATCbits.LC0 =
      +                           1;
   538  00FE04  808B               	bsf	3979,0,c	;volatile
   539  00FE06  848B               	bsf	3979,2,c	;volatile
   540  00FE08  848D               	bsf	3981,2,c	;volatile
   541  00FE0A  828D               	bsf	3981,1,c	;volatile
   542  00FE0C  8E89               	bsf	3977,7,c	;volatile
   543                           
   544                           ;main.c: 167: LATAbits.LA6 = LATCbits.LC1 = 0;
   545  00FE0E  928B               	bcf	3979,1,c	;volatile
   546  00FE10  9C89               	bcf	3977,6,c	;volatile
   547                           
   548                           ;main.c: 168: break;
   549  00FE12  0012               	return	
   550  00FE14                     l718:
   551                           
   552                           ;main.c: 170: if (segment == 1) {
   553  00FE14  0406               	decf	dispSeg@segment,w,c
   554  00FE16  A4D8               	btfss	status,2,c
   555  00FE18  D008               	goto	l73
   556                           
   557                           ;main.c: 171: LATAbits.LA2 = LATAbits.LA0 = LATAbits.LA1 = LATAbits.LA4 = LATAbits.LA5 =
      +                           LATEbits.LE0 = 1;
   558  00FE1A  808D               	bsf	3981,0,c	;volatile
   559  00FE1C  8A89               	bsf	3977,5,c	;volatile
   560  00FE1E  8889               	bsf	3977,4,c	;volatile
   561  00FE20  8289               	bsf	3977,1,c	;volatile
   562  00FE22  8089               	bsf	3977,0,c	;volatile
   563  00FE24  8489               	bsf	3977,2,c	;volatile
   564                           
   565                           ;main.c: 172: LATAbits.LA3 = 0;
   566  00FE26  9689               	bcf	3977,3,c	;volatile
   567                           
   568                           ;main.c: 173: return;
   569  00FE28  0012               	return	
   570  00FE2A                     l73:
   571                           
   572                           ;main.c: 174: }
   573                           ;main.c: 175: LATAbits.LA7 = LATEbits.LE1 = LATEbits.LE2 = LATCbits.LC2 = LATCbits.LC0 =
      +                           LATCbits.LC1 = 1;
   574  00FE2A  828B               	bsf	3979,1,c	;volatile
   575  00FE2C  808B               	bsf	3979,0,c	;volatile
   576  00FE2E  848B               	bsf	3979,2,c	;volatile
   577  00FE30  848D               	bsf	3981,2,c	;volatile
   578  00FE32  828D               	bsf	3981,1,c	;volatile
   579  00FE34  8E89               	bsf	3977,7,c	;volatile
   580                           
   581                           ;main.c: 176: LATAbits.LA6 = 0;
   582  00FE36  9C89               	bcf	3977,6,c	;volatile
   583                           
   584                           ;main.c: 177: break;
   585  00FE38  0012               	return	
   586  00FE3A                     l722:
   587                           
   588                           ;main.c: 179: if (segment == 1) {
   589  00FE3A  0406               	decf	dispSeg@segment,w,c
   590  00FE3C  A4D8               	btfss	status,2,c
   591  00FE3E  D008               	goto	l75
   592                           
   593                           ;main.c: 180: LATAbits.LA2 = LATAbits.LA3 = LATAbits.LA4 = 1;
   594  00FE40  8889               	bsf	3977,4,c	;volatile
   595  00FE42  8689               	bsf	3977,3,c	;volatile
   596  00FE44  8489               	bsf	3977,2,c	;volatile
   597                           
   598                           ;main.c: 181: LATAbits.LA5 = LATEbits.LE0 = LATAbits.LA0 = LATAbits.LA1 = 0;
   599  00FE46  9289               	bcf	3977,1,c	;volatile
   600  00FE48  9089               	bcf	3977,0,c	;volatile
   601  00FE4A  908D               	bcf	3981,0,c	;volatile
   602  00FE4C  9A89               	bcf	3977,5,c	;volatile
   603                           
   604                           ;main.c: 182: return;
   605  00FE4E  0012               	return	
   606  00FE50                     l75:
   607                           
   608                           ;main.c: 183: }
   609                           ;main.c: 184: LATAbits.LA7 = LATAbits.LA6 = LATCbits.LC2 = 1;
   610  00FE50  848B               	bsf	3979,2,c	;volatile
   611  00FE52  8C89               	bsf	3977,6,c	;volatile
   612  00FE54  8E89               	bsf	3977,7,c	;volatile
   613                           
   614                           ;main.c: 185: LATCbits.LC0 = LATCbits.LC1 = LATEbits.LE1 = LATEbits.LE2 = 0;
   615  00FE56  948D               	bcf	3981,2,c	;volatile
   616  00FE58  928D               	bcf	3981,1,c	;volatile
   617  00FE5A  928B               	bcf	3979,1,c	;volatile
   618  00FE5C  908B               	bcf	3979,0,c	;volatile
   619                           
   620                           ;main.c: 186: break;
   621  00FE5E  0012               	return	
   622  00FE60                     l726:
   623                           
   624                           ;main.c: 188: if (segment == 1) {
   625  00FE60  0406               	decf	dispSeg@segment,w,c
   626  00FE62  A4D8               	btfss	status,2,c
   627  00FE64  D008               	goto	l77
   628                           
   629                           ;main.c: 189: LATAbits.LA2 = LATAbits.LA3 = LATAbits.LA4 = LATAbits.LA5 = LATEbits.LE0 =
      +                           LATAbits.LA0 = LATAbits.LA1 = 1;
   630  00FE66  8289               	bsf	3977,1,c	;volatile
   631  00FE68  8089               	bsf	3977,0,c	;volatile
   632  00FE6A  808D               	bsf	3981,0,c	;volatile
   633  00FE6C  8A89               	bsf	3977,5,c	;volatile
   634  00FE6E  8889               	bsf	3977,4,c	;volatile
   635  00FE70  8689               	bsf	3977,3,c	;volatile
   636  00FE72  8489               	bsf	3977,2,c	;volatile
   637                           
   638                           ;main.c: 190: return;
   639  00FE74  0012               	return	
   640  00FE76                     l77:
   641                           
   642                           ;main.c: 191: }
   643                           ;main.c: 192: LATAbits.LA7 = LATAbits.LA6 = LATCbits.LC2 = LATCbits.LC0 = LATCbits.LC1 =
      +                           LATEbits.LE1 = LATEbits.LE2 = 1;
   644  00FE76  848D               	bsf	3981,2,c	;volatile
   645  00FE78  828D               	bsf	3981,1,c	;volatile
   646  00FE7A  828B               	bsf	3979,1,c	;volatile
   647  00FE7C  808B               	bsf	3979,0,c	;volatile
   648  00FE7E  848B               	bsf	3979,2,c	;volatile
   649  00FE80  8C89               	bsf	3977,6,c	;volatile
   650  00FE82  8E89               	bsf	3977,7,c	;volatile
   651                           
   652                           ;main.c: 193: break;
   653  00FE84  0012               	return	
   654  00FE86                     l730:
   655                           
   656                           ;main.c: 195: if (segment == 1) {
   657  00FE86  0406               	decf	dispSeg@segment,w,c
   658  00FE88  A4D8               	btfss	status,2,c
   659  00FE8A  D008               	goto	l79
   660                           
   661                           ;main.c: 196: LATAbits.LA2 = LATAbits.LA3 = LATAbits.LA4 = LATAbits.LA5 = LATAbits.LA0 =
      +                           LATAbits.LA1 = 1;
   662  00FE8C  8289               	bsf	3977,1,c	;volatile
   663  00FE8E  8089               	bsf	3977,0,c	;volatile
   664  00FE90  8A89               	bsf	3977,5,c	;volatile
   665  00FE92  8889               	bsf	3977,4,c	;volatile
   666  00FE94  8689               	bsf	3977,3,c	;volatile
   667  00FE96  8489               	bsf	3977,2,c	;volatile
   668                           
   669                           ;main.c: 197: LATEbits.LE0 = 0;
   670  00FE98  908D               	bcf	3981,0,c	;volatile
   671                           
   672                           ;main.c: 198: return;
   673  00FE9A  0012               	return	
   674  00FE9C                     l79:
   675                           
   676                           ;main.c: 199: }
   677                           ;main.c: 200: LATAbits.LA7 = LATAbits.LA6 = LATCbits.LC2 = LATCbits.LC0 = LATEbits.LE1 =
      +                           LATEbits.LE2 = 1;
   678  00FE9C  848D               	bsf	3981,2,c	;volatile
   679  00FE9E  828D               	bsf	3981,1,c	;volatile
   680  00FEA0  808B               	bsf	3979,0,c	;volatile
   681  00FEA2  848B               	bsf	3979,2,c	;volatile
   682  00FEA4  8C89               	bsf	3977,6,c	;volatile
   683  00FEA6  8E89               	bsf	3977,7,c	;volatile
   684                           
   685                           ;main.c: 201: LATCbits.LC1 = 0;
   686  00FEA8  928B               	bcf	3979,1,c	;volatile
   687                           
   688                           ;main.c: 202: break;
   689  00FEAA  0012               	return	
   690  00FEAC                     l734:
   691                           
   692                           ;main.c: 204: if (segment == 1) {
   693  00FEAC  0406               	decf	dispSeg@segment,w,c
   694  00FEAE  A4D8               	btfss	status,2,c
   695  00FEB0  D008               	goto	l81
   696                           
   697                           ;main.c: 205: LATAbits.LA2 = LATAbits.LA3 = LATAbits.LA4 = LATEbits.LE0 = LATAbits.LA0 =
      +                           LATAbits.LA1 = 1;
   698  00FEB2  8289               	bsf	3977,1,c	;volatile
   699  00FEB4  8089               	bsf	3977,0,c	;volatile
   700  00FEB6  808D               	bsf	3981,0,c	;volatile
   701  00FEB8  8889               	bsf	3977,4,c	;volatile
   702  00FEBA  8689               	bsf	3977,3,c	;volatile
   703  00FEBC  8489               	bsf	3977,2,c	;volatile
   704                           
   705                           ;main.c: 206: LATAbits.LA5 = 0;
   706  00FEBE  9A89               	bcf	3977,5,c	;volatile
   707                           
   708                           ;main.c: 207: return;
   709  00FEC0  0012               	return	
   710  00FEC2                     l81:
   711                           
   712                           ;main.c: 208: }
   713                           ;main.c: 209: LATAbits.LA7 = LATAbits.LA6 = LATCbits.LC2 = LATCbits.LC1 = LATEbits.LE1 =
      +                           LATEbits.LE2 = 1;
   714  00FEC2  848D               	bsf	3981,2,c	;volatile
   715  00FEC4  828D               	bsf	3981,1,c	;volatile
   716  00FEC6  828B               	bsf	3979,1,c	;volatile
   717  00FEC8  848B               	bsf	3979,2,c	;volatile
   718  00FECA  8C89               	bsf	3977,6,c	;volatile
   719  00FECC  8E89               	bsf	3977,7,c	;volatile
   720                           
   721                           ;main.c: 210: LATCbits.LC0 = 0;
   722  00FECE  908B               	bcf	3979,0,c	;volatile
   723                           
   724                           ;main.c: 211: break;
   725  00FED0  0012               	return	
   726  00FED2                     l738:
   727                           
   728                           ;main.c: 213: if (segment == 1) {
   729  00FED2  0406               	decf	dispSeg@segment,w,c
   730  00FED4  A4D8               	btfss	status,2,c
   731  00FED6  D008               	goto	l83
   732                           
   733                           ;main.c: 214: LATAbits.LA4 = LATAbits.LA5 = LATEbits.LE0 = LATAbits.LA0 = LATAbits.LA1 =
      +                           1;
   734  00FED8  8289               	bsf	3977,1,c	;volatile
   735  00FEDA  8089               	bsf	3977,0,c	;volatile
   736  00FEDC  808D               	bsf	3981,0,c	;volatile
   737  00FEDE  8A89               	bsf	3977,5,c	;volatile
   738  00FEE0  8889               	bsf	3977,4,c	;volatile
   739                           
   740                           ;main.c: 215: LATAbits.LA2 = LATAbits.LA3 = 0;
   741  00FEE2  9689               	bcf	3977,3,c	;volatile
   742  00FEE4  9489               	bcf	3977,2,c	;volatile
   743                           
   744                           ;main.c: 216: return;
   745  00FEE6  0012               	return	
   746  00FEE8                     l83:
   747                           
   748                           ;main.c: 217: }
   749                           ;main.c: 218: LATCbits.LC2 = LATCbits.LC0 = LATCbits.LC1 = LATEbits.LE1 = LATEbits.LE2 =
      +                           1;
   750  00FEE8  848D               	bsf	3981,2,c	;volatile
   751  00FEEA  828D               	bsf	3981,1,c	;volatile
   752  00FEEC  828B               	bsf	3979,1,c	;volatile
   753  00FEEE  808B               	bsf	3979,0,c	;volatile
   754  00FEF0  848B               	bsf	3979,2,c	;volatile
   755                           
   756                           ;main.c: 219: LATAbits.LA7 = LATAbits.LA6 = 0;
   757  00FEF2  9C89               	bcf	3977,6,c	;volatile
   758  00FEF4  9E89               	bcf	3977,7,c	;volatile
   759                           
   760                           ;main.c: 220: break;
   761  00FEF6  0012               	return	
   762  00FEF8                     l742:
   763                           
   764                           ;main.c: 222: if (segment == 1) {
   765  00FEF8  0406               	decf	dispSeg@segment,w,c
   766  00FEFA  A4D8               	btfss	status,2,c
   767  00FEFC  D008               	goto	l85
   768                           
   769                           ;main.c: 223: LATAbits.LA2 = LATAbits.LA5 = LATEbits.LE0 = LATAbits.LA0 = 1;
   770  00FEFE  8089               	bsf	3977,0,c	;volatile
   771  00FF00  808D               	bsf	3981,0,c	;volatile
   772  00FF02  8A89               	bsf	3977,5,c	;volatile
   773  00FF04  8489               	bsf	3977,2,c	;volatile
   774                           
   775                           ;main.c: 224: LATAbits.LA3 = LATAbits.LA4 = LATAbits.LA1 = 0;
   776  00FF06  9289               	bcf	3977,1,c	;volatile
   777  00FF08  9889               	bcf	3977,4,c	;volatile
   778  00FF0A  9689               	bcf	3977,3,c	;volatile
   779                           
   780                           ;main.c: 225: return;
   781  00FF0C  0012               	return	
   782  00FF0E                     l85:
   783                           
   784                           ;main.c: 226: }
   785                           ;main.c: 227: LATAbits.LA7 = LATCbits.LC0 = LATCbits.LC1 = LATEbits.LE1 = 1;
   786  00FF0E  828D               	bsf	3981,1,c	;volatile
   787  00FF10  828B               	bsf	3979,1,c	;volatile
   788  00FF12  808B               	bsf	3979,0,c	;volatile
   789  00FF14  8E89               	bsf	3977,7,c	;volatile
   790                           
   791                           ;main.c: 228: LATAbits.LA6 = LATCbits.LC2 = LATEbits.LE2 = 0;
   792  00FF16  948D               	bcf	3981,2,c	;volatile
   793  00FF18  948B               	bcf	3979,2,c	;volatile
   794  00FF1A  9C89               	bcf	3977,6,c	;volatile
   795                           
   796                           ;main.c: 229: break;
   797  00FF1C  0012               	return	
   798  00FF1E                     l746:
   799                           
   800                           ;main.c: 231: if (segment == 1) {
   801  00FF1E  0406               	decf	dispSeg@segment,w,c
   802  00FF20  A4D8               	btfss	status,2,c
   803  00FF22  D008               	goto	l87
   804                           
   805                           ;main.c: 232: LATAbits.LA3 = LATAbits.LA4 = LATAbits.LA5 = LATEbits.LE0 = LATAbits.LA1 =
      +                           1;
   806  00FF24  8289               	bsf	3977,1,c	;volatile
   807  00FF26  808D               	bsf	3981,0,c	;volatile
   808  00FF28  8A89               	bsf	3977,5,c	;volatile
   809  00FF2A  8889               	bsf	3977,4,c	;volatile
   810  00FF2C  8689               	bsf	3977,3,c	;volatile
   811                           
   812                           ;main.c: 233: LATAbits.LA2 = LATAbits.LA0 = 0;
   813  00FF2E  9089               	bcf	3977,0,c	;volatile
   814  00FF30  9489               	bcf	3977,2,c	;volatile
   815                           
   816                           ;main.c: 234: return;
   817  00FF32  0012               	return	
   818  00FF34                     l87:
   819                           
   820                           ;main.c: 235: }
   821                           ;main.c: 236: LATAbits.LA6 = LATCbits.LC2 = LATCbits.LC0 = LATCbits.LC1 = LATEbits.LE2 =
      +                           1;
   822  00FF34  848D               	bsf	3981,2,c	;volatile
   823  00FF36  828B               	bsf	3979,1,c	;volatile
   824  00FF38  808B               	bsf	3979,0,c	;volatile
   825  00FF3A  848B               	bsf	3979,2,c	;volatile
   826  00FF3C  8C89               	bsf	3977,6,c	;volatile
   827                           
   828                           ;main.c: 237: LATAbits.LA7 = LATEbits.LE1 = 0;
   829  00FF3E  928D               	bcf	3981,1,c	;volatile
   830  00FF40  9E89               	bcf	3977,7,c	;volatile
   831                           
   832                           ;main.c: 238: break;
   833  00FF42  0012               	return	
   834  00FF44                     l750:
   835                           
   836                           ;main.c: 240: if (segment == 1) {
   837  00FF44  0406               	decf	dispSeg@segment,w,c
   838  00FF46  A4D8               	btfss	status,2,c
   839  00FF48  D008               	goto	l89
   840                           
   841                           ;main.c: 241: LATAbits.LA2 = LATAbits.LA5 = LATEbits.LE0 = LATAbits.LA0 = LATAbits.LA1 =
      +                           1;
   842  00FF4A  8289               	bsf	3977,1,c	;volatile
   843  00FF4C  8089               	bsf	3977,0,c	;volatile
   844  00FF4E  808D               	bsf	3981,0,c	;volatile
   845  00FF50  8A89               	bsf	3977,5,c	;volatile
   846  00FF52  8489               	bsf	3977,2,c	;volatile
   847                           
   848                           ;main.c: 242: LATAbits.LA3 = LATAbits.LA4 = 0;
   849  00FF54  9889               	bcf	3977,4,c	;volatile
   850  00FF56  9689               	bcf	3977,3,c	;volatile
   851                           
   852                           ;main.c: 243: return;
   853  00FF58  0012               	return	
   854  00FF5A                     l89:
   855                           
   856                           ;main.c: 244: }
   857                           ;main.c: 245: LATAbits.LA7 = LATCbits.LC0 = LATCbits.LC1 = LATEbits.LE1 = LATEbits.LE2 =
      +                           1;
   858  00FF5A  848D               	bsf	3981,2,c	;volatile
   859  00FF5C  828D               	bsf	3981,1,c	;volatile
   860  00FF5E  828B               	bsf	3979,1,c	;volatile
   861  00FF60  808B               	bsf	3979,0,c	;volatile
   862  00FF62  8E89               	bsf	3977,7,c	;volatile
   863                           
   864                           ;main.c: 246: LATAbits.LA6 = LATCbits.LC2 = 0;
   865  00FF64  948B               	bcf	3979,2,c	;volatile
   866  00FF66  9C89               	bcf	3977,6,c	;volatile
   867                           
   868                           ;main.c: 247: break;
   869  00FF68  0012               	return	
   870  00FF6A                     l754:
   871                           
   872                           ;main.c: 249: if (segment == 1) {
   873  00FF6A  0406               	decf	dispSeg@segment,w,c
   874  00FF6C  A4D8               	btfss	status,2,c
   875  00FF6E  D008               	goto	l91
   876                           
   877                           ;main.c: 250: LATAbits.LA2 = LATEbits.LE0 = LATAbits.LA0 = LATAbits.LA1 = 1;
   878  00FF70  8289               	bsf	3977,1,c	;volatile
   879  00FF72  8089               	bsf	3977,0,c	;volatile
   880  00FF74  808D               	bsf	3981,0,c	;volatile
   881  00FF76  8489               	bsf	3977,2,c	;volatile
   882                           
   883                           ;main.c: 251: LATAbits.LA3 = LATAbits.LA4 = LATAbits.LA5 = 0;
   884  00FF78  9A89               	bcf	3977,5,c	;volatile
   885  00FF7A  9889               	bcf	3977,4,c	;volatile
   886  00FF7C  9689               	bcf	3977,3,c	;volatile
   887                           
   888                           ;main.c: 252: return;
   889  00FF7E  0012               	return	
   890  00FF80                     l91:
   891                           
   892                           ;main.c: 253: }
   893                           ;main.c: 254: LATAbits.LA7 = LATCbits.LC1 = LATEbits.LE1 = LATEbits.LE2 = 1;
   894  00FF80  848D               	bsf	3981,2,c	;volatile
   895  00FF82  828D               	bsf	3981,1,c	;volatile
   896  00FF84  828B               	bsf	3979,1,c	;volatile
   897  00FF86  8E89               	bsf	3977,7,c	;volatile
   898                           
   899                           ;main.c: 255: LATAbits.LA6 = LATCbits.LC2 = LATCbits.LC0 = 0;
   900  00FF88  908B               	bcf	3979,0,c	;volatile
   901  00FF8A  948B               	bcf	3979,2,c	;volatile
   902  00FF8C  9C89               	bcf	3977,6,c	;volatile
   903                           
   904                           ;main.c: 256: break;
   905  00FF8E  0012               	return	
   906  00FF90                     l760:
   907  00FF90  5005               	movf	dispSeg@letter,w,c
   908                           
   909                           ; Switch size 1, requested type "space"
   910                           ; Number of cases is 18, Range of values is 0 to 102
   911                           ; switch strategies available:
   912                           ; Name         Instructions Cycles
   913                           ; simple_byte           55    28 (average)
   914                           ;	Chosen strategy is simple_byte
   915  00FF92  0A00               	xorlw	0	; case 0
   916  00FF94  B4D8               	btfsc	status,2,c
   917  00FF96  D6A8               	goto	l686
   918  00FF98  0A2D               	xorlw	45	; case 45
   919  00FF9A  B4D8               	btfsc	status,2,c
   920  00FF9C  D6B7               	goto	l690
   921  00FF9E  0A1D               	xorlw	29	; case 48
   922  00FFA0  B4D8               	btfsc	status,2,c
   923  00FFA2  D6C6               	goto	l694
   924  00FFA4  0A01               	xorlw	1	; case 49
   925  00FFA6  B4D8               	btfsc	status,2,c
   926  00FFA8  D6D6               	goto	l698
   927  00FFAA  0A03               	xorlw	3	; case 50
   928  00FFAC  B4D8               	btfsc	status,2,c
   929  00FFAE  D6E6               	goto	l702
   930  00FFB0  0A01               	xorlw	1	; case 51
   931  00FFB2  B4D8               	btfsc	status,2,c
   932  00FFB4  D6F6               	goto	l706
   933  00FFB6  0A07               	xorlw	7	; case 52
   934  00FFB8  B4D8               	btfsc	status,2,c
   935  00FFBA  D706               	goto	l710
   936  00FFBC  0A01               	xorlw	1	; case 53
   937  00FFBE  B4D8               	btfsc	status,2,c
   938  00FFC0  D716               	goto	l714
   939  00FFC2  0A03               	xorlw	3	; case 54
   940  00FFC4  B4D8               	btfsc	status,2,c
   941  00FFC6  D726               	goto	l718
   942  00FFC8  0A01               	xorlw	1	; case 55
   943  00FFCA  B4D8               	btfsc	status,2,c
   944  00FFCC  D736               	goto	l722
   945  00FFCE  0A0F               	xorlw	15	; case 56
   946  00FFD0  B4D8               	btfsc	status,2,c
   947  00FFD2  D746               	goto	l726
   948  00FFD4  0A01               	xorlw	1	; case 57
   949  00FFD6  B4D8               	btfsc	status,2,c
   950  00FFD8  D756               	goto	l730
   951  00FFDA  0A58               	xorlw	88	; case 97
   952  00FFDC  B4D8               	btfsc	status,2,c
   953  00FFDE  D766               	goto	l734
   954  00FFE0  0A03               	xorlw	3	; case 98
   955  00FFE2  B4D8               	btfsc	status,2,c
   956  00FFE4  D776               	goto	l738
   957  00FFE6  0A01               	xorlw	1	; case 99
   958  00FFE8  B4D8               	btfsc	status,2,c
   959  00FFEA  D786               	goto	l742
   960  00FFEC  0A07               	xorlw	7	; case 100
   961  00FFEE  B4D8               	btfsc	status,2,c
   962  00FFF0  D796               	goto	l746
   963  00FFF2  0A01               	xorlw	1	; case 101
   964  00FFF4  B4D8               	btfsc	status,2,c
   965  00FFF6  D7A6               	goto	l750
   966  00FFF8  0A03               	xorlw	3	; case 102
   967  00FFFA  A4D8               	btfss	status,2,c
   968  00FFFC  0012               	return	
   969  00FFFE  D7B5               	goto	l754
   970  010000                     __end_of_dispSeg:
   971                           	opt stack 0
   972  0000                     tblptru	equ	0xFF8
   973                           wreg	equ	0xFE8
   974                           status	equ	0xFD8
   975                           tblptru	equ	0xFF8
   976                           wreg	equ	0xFE8
   977                           status	equ	0xFD8
   978                           
   979                           	psect	rparam
   980  0000                     tblptru	equ	0xFF8
   981                           wreg	equ	0xFE8
   982                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      3       7
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_dispSeg

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    1679
                                              2 COMRAM     1     1      0
                            _dispSeg
 ---------------------------------------------------------------------------------
 (1) _dispSeg                                              2     1      1    1679
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _dispSeg

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      3       7       1        7.4%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       7      12        0.0%
DATA                 0      0       7       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Tue Feb 04 13:33:21 2014

                     l60 FD46                       l71 FE04                       l63 FD6C  
                     l55 FCFC                       l81 FEC2                       l73 FE2A  
                     l65 FD92                       l58 FD20                       l91 FF80  
                     l83 FEE8                       l75 FE50                       l67 FDB8  
                     l85 FF0E                       l77 FE76                       l69 FDDE  
                     l87 FF34                       l79 FE9C                       l89 FF5A  
           __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000  
           __CFG_CP3$OFF 000000                      l710 FDC8                      l702 FD7C  
                    l730 FE86                      l722 FE3A                      l714 FDEE  
                    l706 FDA2                      l750 FF44                      l742 FEF8  
                    l734 FEAC                      l726 FE60                      l718 FE14  
                    l760 FF90                      l754 FF6A                      l746 FF1E  
                    l738 FED2                      l690 FD0C                      l860 FCAC  
                    l694 FD30                      l686 FCE8                      l864 FCBE  
                    l698 FD56                      l868 FCD2             __CFG_CPB$OFF 000000  
           __CFG_CPD$OFF 000000                      wreg 000FE8             __CFG_LVP$OFF 000000  
                   _LATA 000F89                     _LATC 000F8B                     _LATD 000F8C  
                   _LATE 000F8D                     _main FC6A            __CFG_BORV$190 000000  
                   start 0000            __CFG_IESO$OFF 000000                    ?_main 0005  
                  _TRISA 000F92                    _TRISC 000F94                    _TRISE 000F96  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
        __end_of_dispSeg 0000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000       __CFG_MCLRE$EXTMCLR 000000  
         __CFG_BOREN$OFF 000000                    status 000FD8           __CFG_HFOFST$ON 000000  
        __initialization FC58             __end_of_main FCE2                   ??_main 0007  
          __activetblptr 000002           __CFG_PLLCFG$ON 000000                   _ANSELD 000F3B  
         __CFG_WDTEN$OFF 000000           __CFG_XINST$OFF 000000           __CFG_STVREN$ON 000000  
              ??_dispSeg 0006                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization FC60          __CFG_PBADEN$OFF 000000           __pcstackCOMRAM 0005  
     __CFG_CCP2MX$PORTC1 000000       __CFG_CCP3MX$PORTB5 000000        __CFG_PRICLKEN$OFF 000000  
        __CFG_PWRTEN$OFF 000000                  __Hparam 0000                  __Lparam 0000  
                __pcinit FC58                  __ramtop 1000                  __ptext0 FC6A  
                __ptext1 FCE2                  _dispSeg FCE2     end_of_initialization FC60  
          __Lmediumconst 0000                _PORTDbits 000F83                _TRISDbits 000F95  
    start_initialization FC58              __pbssCOMRAM 0001                 ?_dispSeg 0005  
               _LATAbits 000F89                 _LATCbits 000F8B                 _LATDbits 000F8C  
               _LATEbits 000F8D         __CFG_WDTPS$32768 000000                 __Hrparam 0000  
               __Lrparam 0000        __CFG_P2BMX$PORTD2 000000         __size_of_dispSeg 031E  
          __size_of_main 0078           dispSeg@segment 0006             wait_ms@timel 0001  
      __CFG_T3CMX$PORTC0 000000            dispSeg@letter 0005        __CFG_FOSC$INTIO67 000000  
