

Microchip Technology PIC18 LITE Macro Assembler V1.21 build 54009 
                                                                                               Sat Feb 01 05:18:12 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 54009
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	text0,global,reloc=2,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    11                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    12  0000                     _LATA	set	3977
    13  0000                     _LATAbits	set	3977
    14  0000                     _LATC	set	3979
    15  0000                     _LATCbits	set	3979
    16  0000                     _LATD	set	3980
    17  0000                     _LATE	set	3981
    18  0000                     _LATEbits	set	3981
    19  0000                     _TRISA	set	3986
    20  0000                     _TRISC	set	3988
    21  0000                     _TRISDbits	set	3989
    22  0000                     _TRISE	set	3990
    23                           
    24 ;;
    25 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
    26 ;;
    27 ;; *************** function _main *****************
    28 ;; Defined at:
    29 ;;		line 46 in file "source/main.c"
    30 ;; Parameters:    Size  Location     Type
    31 ;;		None
    32 ;; Auto vars:     Size  Location     Type
    33 ;;		None
    34 ;; Return value:  Size  Location     Type
    35 ;;		None               void
    36 ;; Registers used:
    37 ;;		wreg, status,2, status,0, cstack
    38 ;; Tracked objects:
    39 ;;		On entry : 0/0
    40 ;;		On exit  : 0/0
    41 ;;		Unchanged: 0/0
    42 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
    43 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
    44 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
    45 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
    46 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
    47 ;;Total ram usage:        2 bytes
    48 ;; Hardware stack levels required when called:    1
    49 ;; This function calls:
    50 ;;		_dispSeg
    51 ;; This function is called by:
    52 ;;		Startup code after reset
    53 ;; This function uses a non-reentrant model
    54 ;;
    55                           
    56                           	psect	text0
    57  00FC9A                     __ptext0:
    58                           	opt stack 0
    59                           
    60                           ; #config settings
    61  00FC9A                     _main:
    62                           	opt stack 30
    63                           
    64                           ;main.c: 48: TRISA = 0;
    65                           
    66                           ;incstack = 0
    67                           ;incstack = 0
    68  00FC9A  0E00               	movlw	0
    69  00FC9C  6E92               	movwf	3986,c	;volatile
    70                           
    71                           ;main.c: 49: TRISC = 0;
    72  00FC9E  0E00               	movlw	0
    73  00FCA0  6E94               	movwf	3988,c	;volatile
    74                           
    75                           ;main.c: 50: TRISE = 0;
    76  00FCA2  0E00               	movlw	0
    77  00FCA4  6E96               	movwf	3990,c	;volatile
    78                           
    79                           ;main.c: 51: TRISDbits.RD3 = 0;
    80  00FCA6  9695               	bcf	3989,3,c	;volatile
    81                           
    82                           ;main.c: 52: TRISDbits.RD4 = 1;
    83  00FCA8  8895               	bsf	3989,4,c	;volatile
    84                           
    85                           ;main.c: 53: TRISDbits.RD5 = 0;
    86  00FCAA  9A95               	bcf	3989,5,c	;volatile
    87                           
    88                           ;main.c: 55: LATA = 0;
    89  00FCAC  0E00               	movlw	0
    90  00FCAE  6E89               	movwf	3977,c	;volatile
    91                           
    92                           ;main.c: 56: LATC = 0;
    93  00FCB0  0E00               	movlw	0
    94  00FCB2  6E8B               	movwf	3979,c	;volatile
    95                           
    96                           ;main.c: 57: LATD = 0;
    97  00FCB4  0E00               	movlw	0
    98  00FCB6  6E8C               	movwf	3980,c	;volatile
    99                           
   100                           ;main.c: 58: LATE = 0;
   101  00FCB8  0E00               	movlw	0
   102  00FCBA  6E8D               	movwf	3981,c	;volatile
   103                           
   104                           ;main.c: 99: dispSeg(1, '-'); dispSeg(1, '-');
   105  00FCBC  6E07               	movwf	??_main& (0+255),c
   106  00FCBE  0E01               	movlw	1
   107  00FCC0  6E05               	movwf	?_dispSeg,c
   108  00FCC2  5007               	movf	??_main& (0+255),w,c
   109  00FCC4  6E08               	movwf	(??_main+1)& (0+255),c
   110  00FCC6  0E2D               	movlw	45
   111  00FCC8  6E06               	movwf	?_dispSeg+1,c
   112  00FCCA  5008               	movf	(??_main+1)& (0+255),w,c
   113  00FCCC  EC73  F07E         	call	_dispSeg	;wreg free
   114  00FCD0  6E07               	movwf	??_main& (0+255),c
   115  00FCD2  0E01               	movlw	1
   116  00FCD4  6E05               	movwf	?_dispSeg,c
   117  00FCD6  5007               	movf	??_main& (0+255),w,c
   118  00FCD8  6E08               	movwf	(??_main+1)& (0+255),c
   119  00FCDA  0E2D               	movlw	45
   120  00FCDC  6E06               	movwf	?_dispSeg+1,c
   121  00FCDE  5008               	movf	(??_main+1)& (0+255),w,c
   122  00FCE0  EC73  F07E         	call	_dispSeg	;wreg free
   123  00FCE4                     l27:
   124  00FCE4  D7FF               	goto	l27
   125  00FCE6                     __end_of_main:
   126                           	opt stack 0
   127                           
   128                           	psect	cinit
   129  00FC88                     __pcinit:
   130                           	opt stack 0
   131  00FC88                     start_initialization:
   132                           	opt stack 0
   133  00FC88                     __initialization:
   134                           	opt stack 0
   135                           
   136                           ; Clear objects allocated to COMRAM (4 bytes)
   137  00FC88  6A04               	clrf	(__pbssCOMRAM+3)& (0+255),c
   138  00FC8A  6A03               	clrf	(__pbssCOMRAM+2)& (0+255),c
   139  00FC8C  6A02               	clrf	(__pbssCOMRAM+1)& (0+255),c
   140  00FC8E  6A01               	clrf	__pbssCOMRAM& (0+255),c
   141  00FC90                     end_of_initialization:
   142                           	opt stack 0
   143  00FC90                     __end_of__initialization:
   144                           	opt stack 0
   145  00FC90  0E00               	movlw	low (__Lmediumconst shr (0+16))
   146  00FC92  6EF8               	movwf	tblptru,c
   147  00FC94  0100               	movlb	0
   148  00FC96  EF4D  F07E         	goto	_main	;jump to C main() function
   149                           tblptru	equ	0xFF8
   150                           
   151                           	psect	bssCOMRAM
   152  000001                     __pbssCOMRAM:
   153                           	opt stack 0
   154  000001                     wait_ms@timel:
   155                           	opt stack 0
   156  000001                     	ds	4
   157                           tblptru	equ	0xFF8
   158                           
   159                           	psect	cstackCOMRAM
   160  000005                     __pcstackCOMRAM:
   161                           	opt stack 0
   162  000005                     ?_dispSeg:
   163                           	opt stack 0
   164  000005                     dispSeg@segment:
   165                           	opt stack 0
   166                           
   167                           ; 1 bytes @ 0x0
   168  000005                     	ds	1
   169  000006                     dispSeg@letter:
   170                           	opt stack 0
   171                           
   172                           ; 1 bytes @ 0x1
   173  000006                     	ds	1
   174  000007                     ??_main:
   175                           
   176                           ; 0 bytes @ 0x2
   177  000007                     	ds	2
   178                           tblptru	equ	0xFF8
   179                           
   180 ;; *************** function _dispSeg *****************
   181 ;; Defined at:
   182 ;;		line 122 in file "source/main.c"
   183 ;; Parameters:    Size  Location     Type
   184 ;;  segment         1    0[COMRAM] unsigned char 
   185 ;;  letter          1    1[COMRAM] unsigned char 
   186 ;; Auto vars:     Size  Location     Type
   187 ;;		None
   188 ;; Return value:  Size  Location     Type
   189 ;;		None               void
   190 ;; Registers used:
   191 ;;		wreg, status,2, status,0
   192 ;; Tracked objects:
   193 ;;		On entry : 0/0
   194 ;;		On exit  : 0/0
   195 ;;		Unchanged: 0/0
   196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   197 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   200 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   201 ;;Total ram usage:        2 bytes
   202 ;; Hardware stack levels used:    1
   203 ;; This function calls:
   204 ;;		Nothing
   205 ;; This function is called by:
   206 ;;		_main
   207 ;; This function uses a non-reentrant model
   208 ;;
   209                           
   210                           	psect	text1
   211  00FCE6                     __ptext1:
   212                           	opt stack 0
   213  00FCE6                     _dispSeg:
   214                           	opt stack 30
   215                           
   216                           ;main.c: 123: switch (letter) {
   217                           
   218                           ;incstack = 0
   219                           ;incstack = 0
   220  00FCE6  D154               	goto	l745
   221  00FCE8                     l671:
   222                           
   223                           ;main.c: 125: if (segment == 1) {
   224  00FCE8  0405               	decf	dispSeg@segment,w,c
   225  00FCEA  A4D8               	btfss	status,2,c
   226  00FCEC  D007               	goto	l43
   227                           
   228                           ;main.c: 126: LATAbits.LA2 = LATAbits.LA3 = LATAbits.LA4 = LATAbits.LA5 = LATEbits.LE0 =
      +                           LATAbits.LA0 = LATAbits.LA1 = 0;
   229  00FCEE  9289               	bcf	3977,1,c	;volatile
   230  00FCF0  9089               	bcf	3977,0,c	;volatile
   231  00FCF2  908D               	bcf	3981,0,c	;volatile
   232  00FCF4  9A89               	bcf	3977,5,c	;volatile
   233  00FCF6  9889               	bcf	3977,4,c	;volatile
   234  00FCF8  9689               	bcf	3977,3,c	;volatile
   235  00FCFA  9489               	bcf	3977,2,c	;volatile
   236  00FCFC                     l43:
   237                           
   238                           ;main.c: 127: }
   239                           ;main.c: 128: LATAbits.LA7 = LATAbits.LA6 = LATCbits.LC2 = LATCbits.LC0 = LATCbits.LC1 =
      +                           LATEbits.LE1 = LATEbits.LE2 = 0;
   240  00FCFC  948D               	bcf	3981,2,c	;volatile
   241  00FCFE  928D               	bcf	3981,1,c	;volatile
   242  00FD00  928B               	bcf	3979,1,c	;volatile
   243  00FD02  908B               	bcf	3979,0,c	;volatile
   244  00FD04  948B               	bcf	3979,2,c	;volatile
   245  00FD06  9C89               	bcf	3977,6,c	;volatile
   246  00FD08  9E89               	bcf	3977,7,c	;volatile
   247                           
   248                           ;main.c: 129: break;
   249  00FD0A  0012               	return	
   250  00FD0C                     l675:
   251                           
   252                           ;main.c: 131: if (segment == 1) {
   253  00FD0C  0405               	decf	dispSeg@segment,w,c
   254  00FD0E  A4D8               	btfss	status,2,c
   255  00FD10  D007               	goto	l46
   256                           
   257                           ;main.c: 132: LATAbits.LA1 = 1;
   258  00FD12  8289               	bsf	3977,1,c	;volatile
   259                           
   260                           ;main.c: 133: LATAbits.LA2 = LATAbits.LA3 = LATAbits.LA4 = LATAbits.LA5 = LATEbits.LE0 =
      +                           LATAbits.LA0 = 0;
   261  00FD14  9089               	bcf	3977,0,c	;volatile
   262  00FD16  908D               	bcf	3981,0,c	;volatile
   263  00FD18  9A89               	bcf	3977,5,c	;volatile
   264  00FD1A  9889               	bcf	3977,4,c	;volatile
   265  00FD1C  9689               	bcf	3977,3,c	;volatile
   266  00FD1E  9489               	bcf	3977,2,c	;volatile
   267  00FD20                     l46:
   268                           
   269                           ;main.c: 134: }
   270                           ;main.c: 135: LATEbits.LE2 = 1;
   271  00FD20  848D               	bsf	3981,2,c	;volatile
   272                           
   273                           ;main.c: 136: LATAbits.LA7 = LATAbits.LA6 = LATCbits.LC2 = LATCbits.LC0 = LATCbits.LC1 =
      +                           LATEbits.LE1 = 0;
   274  00FD22  928D               	bcf	3981,1,c	;volatile
   275  00FD24  928B               	bcf	3979,1,c	;volatile
   276  00FD26  908B               	bcf	3979,0,c	;volatile
   277  00FD28  948B               	bcf	3979,2,c	;volatile
   278  00FD2A  9C89               	bcf	3977,6,c	;volatile
   279  00FD2C  9E89               	bcf	3977,7,c	;volatile
   280                           
   281                           ;main.c: 137: break;
   282  00FD2E  0012               	return	
   283  00FD30                     l679:
   284                           
   285                           ;main.c: 139: if (segment == 1) {
   286  00FD30  0405               	decf	dispSeg@segment,w,c
   287  00FD32  A4D8               	btfss	status,2,c
   288  00FD34  D008               	goto	l48
   289                           
   290                           ;main.c: 140: LATAbits.LA2 = LATAbits.LA3 = LATAbits.LA4 = LATAbits.LA5 = LATEbits.LE0 =
      +                           LATAbits.LA0 = 1;
   291  00FD36  8089               	bsf	3977,0,c	;volatile
   292  00FD38  808D               	bsf	3981,0,c	;volatile
   293  00FD3A  8A89               	bsf	3977,5,c	;volatile
   294  00FD3C  8889               	bsf	3977,4,c	;volatile
   295  00FD3E  8689               	bsf	3977,3,c	;volatile
   296  00FD40  8489               	bsf	3977,2,c	;volatile
   297                           
   298                           ;main.c: 141: LATAbits.LA1 = 0;
   299  00FD42  9289               	bcf	3977,1,c	;volatile
   300                           
   301                           ;main.c: 142: return;
   302  00FD44  0012               	return	
   303  00FD46                     l48:
   304                           
   305                           ;main.c: 143: }
   306                           ;main.c: 144: LATAbits.LA7 = LATAbits.LA6 = LATCbits.LC2 = LATCbits.LC0 = LATCbits.LC1 =
      +                           LATEbits.LE1 = 1;
   307  00FD46  828D               	bsf	3981,1,c	;volatile
   308  00FD48  828B               	bsf	3979,1,c	;volatile
   309  00FD4A  808B               	bsf	3979,0,c	;volatile
   310  00FD4C  848B               	bsf	3979,2,c	;volatile
   311  00FD4E  8C89               	bsf	3977,6,c	;volatile
   312  00FD50  8E89               	bsf	3977,7,c	;volatile
   313                           
   314                           ;main.c: 145: LATEbits.LE2 = 0;
   315  00FD52  948D               	bcf	3981,2,c	;volatile
   316                           
   317                           ;main.c: 146: break;
   318  00FD54  0012               	return	
   319  00FD56                     l683:
   320                           
   321                           ;main.c: 148: if (segment == 1) {
   322  00FD56  0405               	decf	dispSeg@segment,w,c
   323  00FD58  A4D8               	btfss	status,2,c
   324  00FD5A  D008               	goto	l51
   325                           
   326                           ;main.c: 149: LATAbits.LA3 = LATAbits.LA4 = 1;
   327  00FD5C  8889               	bsf	3977,4,c	;volatile
   328  00FD5E  8689               	bsf	3977,3,c	;volatile
   329                           
   330                           ;main.c: 150: LATAbits.LA2 = LATAbits.LA5 = LATEbits.LE0 = LATAbits.LA0 = LATAbits.LA1 =
      +                           0;
   331  00FD60  9289               	bcf	3977,1,c	;volatile
   332  00FD62  9089               	bcf	3977,0,c	;volatile
   333  00FD64  908D               	bcf	3981,0,c	;volatile
   334  00FD66  9A89               	bcf	3977,5,c	;volatile
   335  00FD68  9489               	bcf	3977,2,c	;volatile
   336                           
   337                           ;main.c: 151: return;
   338  00FD6A  0012               	return	
   339  00FD6C                     l51:
   340                           
   341                           ;main.c: 152: }
   342                           ;main.c: 153: LATAbits.LA6 = LATCbits.LC2 = 1;
   343  00FD6C  848B               	bsf	3979,2,c	;volatile
   344  00FD6E  8C89               	bsf	3977,6,c	;volatile
   345                           
   346                           ;main.c: 154: LATAbits.LA7 = LATCbits.LC0 = LATCbits.LC1 = LATEbits.LE1 = LATEbits.LE2 =
      +                           0;
   347  00FD70  948D               	bcf	3981,2,c	;volatile
   348  00FD72  928D               	bcf	3981,1,c	;volatile
   349  00FD74  928B               	bcf	3979,1,c	;volatile
   350  00FD76  908B               	bcf	3979,0,c	;volatile
   351  00FD78  9E89               	bcf	3977,7,c	;volatile
   352                           
   353                           ;main.c: 155: break;
   354  00FD7A  0012               	return	
   355  00FD7C                     l687:
   356                           
   357                           ;main.c: 157: if (segment == 1) {
   358  00FD7C  0405               	decf	dispSeg@segment,w,c
   359  00FD7E  A4D8               	btfss	status,2,c
   360  00FD80  D008               	goto	l53
   361                           
   362                           ;main.c: 158: LATAbits.LA2 = LATAbits.LA3 = LATAbits.LA1 = LATEbits.LE0 = LATAbits.LA5 =
      +                           1;
   363  00FD82  8A89               	bsf	3977,5,c	;volatile
   364  00FD84  808D               	bsf	3981,0,c	;volatile
   365  00FD86  8289               	bsf	3977,1,c	;volatile
   366  00FD88  8689               	bsf	3977,3,c	;volatile
   367  00FD8A  8489               	bsf	3977,2,c	;volatile
   368                           
   369                           ;main.c: 159: LATAbits.LA4 = LATAbits.LA0 = 0;
   370  00FD8C  9089               	bcf	3977,0,c	;volatile
   371  00FD8E  9889               	bcf	3977,4,c	;volatile
   372                           
   373                           ;main.c: 160: return;
   374  00FD90  0012               	return	
   375  00FD92                     l53:
   376                           
   377                           ;main.c: 161: }
   378                           ;main.c: 162: LATAbits.LA7 = LATAbits.LA6 = LATEbits.LE2 = LATCbits.LC1 = LATCbits.LC0 =
      +                           1;
   379  00FD92  808B               	bsf	3979,0,c	;volatile
   380  00FD94  828B               	bsf	3979,1,c	;volatile
   381  00FD96  848D               	bsf	3981,2,c	;volatile
   382  00FD98  8C89               	bsf	3977,6,c	;volatile
   383  00FD9A  8E89               	bsf	3977,7,c	;volatile
   384                           
   385                           ;main.c: 163: LATCbits.LC2 = LATEbits.LE1 = 0;
   386  00FD9C  928D               	bcf	3981,1,c	;volatile
   387  00FD9E  948B               	bcf	3979,2,c	;volatile
   388                           
   389                           ;main.c: 164: break;
   390  00FDA0  0012               	return	
   391  00FDA2                     l691:
   392                           
   393                           ;main.c: 166: if (segment == 1) {
   394  00FDA2  0405               	decf	dispSeg@segment,w,c
   395  00FDA4  A4D8               	btfss	status,2,c
   396  00FDA6  D008               	goto	l55
   397                           
   398                           ;main.c: 167: LATAbits.LA2 = LATAbits.LA3 = LATAbits.LA1 = LATAbits.LA4 = LATAbits.LA5 =
      +                           1;
   399  00FDA8  8A89               	bsf	3977,5,c	;volatile
   400  00FDAA  8889               	bsf	3977,4,c	;volatile
   401  00FDAC  8289               	bsf	3977,1,c	;volatile
   402  00FDAE  8689               	bsf	3977,3,c	;volatile
   403  00FDB0  8489               	bsf	3977,2,c	;volatile
   404                           
   405                           ;main.c: 168: LATEbits.LE0 = LATAbits.LA0 = 0;
   406  00FDB2  9089               	bcf	3977,0,c	;volatile
   407  00FDB4  908D               	bcf	3981,0,c	;volatile
   408                           
   409                           ;main.c: 169: return;
   410  00FDB6  0012               	return	
   411  00FDB8                     l55:
   412                           
   413                           ;main.c: 170: }
   414                           ;main.c: 171: LATAbits.LA7 = LATAbits.LA6 = LATEbits.LE2 = LATCbits.LC2 = LATCbits.LC0 =
      +                           1;
   415  00FDB8  808B               	bsf	3979,0,c	;volatile
   416  00FDBA  848B               	bsf	3979,2,c	;volatile
   417  00FDBC  848D               	bsf	3981,2,c	;volatile
   418  00FDBE  8C89               	bsf	3977,6,c	;volatile
   419  00FDC0  8E89               	bsf	3977,7,c	;volatile
   420                           
   421                           ;main.c: 172: LATCbits.LC1 = LATEbits.LE1 = 0;
   422  00FDC2  928D               	bcf	3981,1,c	;volatile
   423  00FDC4  928B               	bcf	3979,1,c	;volatile
   424                           
   425                           ;main.c: 173: break;
   426  00FDC6  0012               	return	
   427  00FDC8                     l695:
   428                           
   429                           ;main.c: 175: if (segment == 1) {
   430  00FDC8  0405               	decf	dispSeg@segment,w,c
   431  00FDCA  A4D8               	btfss	status,2,c
   432  00FDCC  D008               	goto	l57
   433                           
   434                           ;main.c: 176: LATAbits.LA0 = LATAbits.LA1 = LATAbits.LA3 = LATAbits.LA4 = 1;
   435  00FDCE  8889               	bsf	3977,4,c	;volatile
   436  00FDD0  8689               	bsf	3977,3,c	;volatile
   437  00FDD2  8289               	bsf	3977,1,c	;volatile
   438  00FDD4  8089               	bsf	3977,0,c	;volatile
   439                           
   440                           ;main.c: 177: LATAbits.LA2 = LATAbits.LA5 = LATEbits.LE0 = 0;
   441  00FDD6  908D               	bcf	3981,0,c	;volatile
   442  00FDD8  9A89               	bcf	3977,5,c	;volatile
   443  00FDDA  9489               	bcf	3977,2,c	;volatile
   444                           
   445                           ;main.c: 178: return;
   446  00FDDC  0012               	return	
   447  00FDDE                     l57:
   448                           
   449                           ;main.c: 179: }
   450                           ;main.c: 180: LATEbits.LE1 = LATEbits.LE2 = LATAbits.LA6 = LATCbits.LC2 = 1;
   451  00FDDE  848B               	bsf	3979,2,c	;volatile
   452  00FDE0  8C89               	bsf	3977,6,c	;volatile
   453  00FDE2  848D               	bsf	3981,2,c	;volatile
   454  00FDE4  828D               	bsf	3981,1,c	;volatile
   455                           
   456                           ;main.c: 181: LATAbits.LA7 = LATCbits.LC0 = LATCbits.LC1 = 0;
   457  00FDE6  928B               	bcf	3979,1,c	;volatile
   458  00FDE8  908B               	bcf	3979,0,c	;volatile
   459  00FDEA  9E89               	bcf	3977,7,c	;volatile
   460                           
   461                           ;main.c: 182: break;
   462  00FDEC  0012               	return	
   463  00FDEE                     l699:
   464                           
   465                           ;main.c: 184: if (segment == 1) {
   466  00FDEE  0405               	decf	dispSeg@segment,w,c
   467  00FDF0  A4D8               	btfss	status,2,c
   468  00FDF2  D008               	goto	l59
   469                           
   470                           ;main.c: 185: LATAbits.LA2 = LATAbits.LA0 = LATAbits.LA1 = LATAbits.LA4 = LATAbits.LA5 =
      +                           1;
   471  00FDF4  8A89               	bsf	3977,5,c	;volatile
   472  00FDF6  8889               	bsf	3977,4,c	;volatile
   473  00FDF8  8289               	bsf	3977,1,c	;volatile
   474  00FDFA  8089               	bsf	3977,0,c	;volatile
   475  00FDFC  8489               	bsf	3977,2,c	;volatile
   476                           
   477                           ;main.c: 186: LATAbits.LA3 = LATEbits.LE0 = 0;
   478  00FDFE  908D               	bcf	3981,0,c	;volatile
   479  00FE00  9689               	bcf	3977,3,c	;volatile
   480                           
   481                           ;main.c: 187: return;
   482  00FE02  0012               	return	
   483  00FE04                     l59:
   484                           
   485                           ;main.c: 188: }
   486                           ;main.c: 189: LATAbits.LA7 = LATEbits.LE1 = LATEbits.LE2 = LATCbits.LC2 = LATCbits.LC0 =
      +                           1;
   487  00FE04  808B               	bsf	3979,0,c	;volatile
   488  00FE06  848B               	bsf	3979,2,c	;volatile
   489  00FE08  848D               	bsf	3981,2,c	;volatile
   490  00FE0A  828D               	bsf	3981,1,c	;volatile
   491  00FE0C  8E89               	bsf	3977,7,c	;volatile
   492                           
   493                           ;main.c: 190: LATAbits.LA6 = LATCbits.LC1 = 0;
   494  00FE0E  928B               	bcf	3979,1,c	;volatile
   495  00FE10  9C89               	bcf	3977,6,c	;volatile
   496                           
   497                           ;main.c: 191: break;
   498  00FE12  0012               	return	
   499  00FE14                     l703:
   500                           
   501                           ;main.c: 193: if (segment == 1) {
   502  00FE14  0405               	decf	dispSeg@segment,w,c
   503  00FE16  A4D8               	btfss	status,2,c
   504  00FE18  D008               	goto	l61
   505                           
   506                           ;main.c: 194: LATAbits.LA2 = LATAbits.LA0 = LATAbits.LA1 = LATAbits.LA4 = LATAbits.LA5 =
      +                           LATEbits.LE0 = 1;
   507  00FE1A  808D               	bsf	3981,0,c	;volatile
   508  00FE1C  8A89               	bsf	3977,5,c	;volatile
   509  00FE1E  8889               	bsf	3977,4,c	;volatile
   510  00FE20  8289               	bsf	3977,1,c	;volatile
   511  00FE22  8089               	bsf	3977,0,c	;volatile
   512  00FE24  8489               	bsf	3977,2,c	;volatile
   513                           
   514                           ;main.c: 195: LATAbits.LA3 = 0;
   515  00FE26  9689               	bcf	3977,3,c	;volatile
   516                           
   517                           ;main.c: 196: return;
   518  00FE28  0012               	return	
   519  00FE2A                     l61:
   520                           
   521                           ;main.c: 197: }
   522                           ;main.c: 198: LATAbits.LA7 = LATEbits.LE1 = LATEbits.LE2 = LATCbits.LC2 = LATCbits.LC0 =
      +                           LATCbits.LC1 = 1;
   523  00FE2A  828B               	bsf	3979,1,c	;volatile
   524  00FE2C  808B               	bsf	3979,0,c	;volatile
   525  00FE2E  848B               	bsf	3979,2,c	;volatile
   526  00FE30  848D               	bsf	3981,2,c	;volatile
   527  00FE32  828D               	bsf	3981,1,c	;volatile
   528  00FE34  8E89               	bsf	3977,7,c	;volatile
   529                           
   530                           ;main.c: 199: LATAbits.LA6 = 0;
   531  00FE36  9C89               	bcf	3977,6,c	;volatile
   532                           
   533                           ;main.c: 200: break;
   534  00FE38  0012               	return	
   535  00FE3A                     l707:
   536                           
   537                           ;main.c: 202: if (segment == 1) {
   538  00FE3A  0405               	decf	dispSeg@segment,w,c
   539  00FE3C  A4D8               	btfss	status,2,c
   540  00FE3E  D008               	goto	l63
   541                           
   542                           ;main.c: 203: LATAbits.LA2 = LATAbits.LA3 = LATAbits.LA4 = 1;
   543  00FE40  8889               	bsf	3977,4,c	;volatile
   544  00FE42  8689               	bsf	3977,3,c	;volatile
   545  00FE44  8489               	bsf	3977,2,c	;volatile
   546                           
   547                           ;main.c: 204: LATAbits.LA5 = LATEbits.LE0 = LATAbits.LA0 = LATAbits.LA1 = 0;
   548  00FE46  9289               	bcf	3977,1,c	;volatile
   549  00FE48  9089               	bcf	3977,0,c	;volatile
   550  00FE4A  908D               	bcf	3981,0,c	;volatile
   551  00FE4C  9A89               	bcf	3977,5,c	;volatile
   552                           
   553                           ;main.c: 205: return;
   554  00FE4E  0012               	return	
   555  00FE50                     l63:
   556                           
   557                           ;main.c: 206: }
   558                           ;main.c: 207: LATAbits.LA7 = LATAbits.LA6 = LATCbits.LC2 = 1;
   559  00FE50  848B               	bsf	3979,2,c	;volatile
   560  00FE52  8C89               	bsf	3977,6,c	;volatile
   561  00FE54  8E89               	bsf	3977,7,c	;volatile
   562                           
   563                           ;main.c: 208: LATCbits.LC0 = LATCbits.LC1 = LATEbits.LE1 = LATEbits.LE2 = 0;
   564  00FE56  948D               	bcf	3981,2,c	;volatile
   565  00FE58  928D               	bcf	3981,1,c	;volatile
   566  00FE5A  928B               	bcf	3979,1,c	;volatile
   567  00FE5C  908B               	bcf	3979,0,c	;volatile
   568                           
   569                           ;main.c: 209: break;
   570  00FE5E  0012               	return	
   571  00FE60                     l711:
   572                           
   573                           ;main.c: 211: if (segment == 1) {
   574  00FE60  0405               	decf	dispSeg@segment,w,c
   575  00FE62  A4D8               	btfss	status,2,c
   576  00FE64  D008               	goto	l65
   577                           
   578                           ;main.c: 212: LATAbits.LA2 = LATAbits.LA3 = LATAbits.LA4 = LATAbits.LA5 = LATEbits.LE0 =
      +                           LATAbits.LA0 = LATAbits.LA1 = 1;
   579  00FE66  8289               	bsf	3977,1,c	;volatile
   580  00FE68  8089               	bsf	3977,0,c	;volatile
   581  00FE6A  808D               	bsf	3981,0,c	;volatile
   582  00FE6C  8A89               	bsf	3977,5,c	;volatile
   583  00FE6E  8889               	bsf	3977,4,c	;volatile
   584  00FE70  8689               	bsf	3977,3,c	;volatile
   585  00FE72  8489               	bsf	3977,2,c	;volatile
   586                           
   587                           ;main.c: 213: return;
   588  00FE74  0012               	return	
   589  00FE76                     l65:
   590                           
   591                           ;main.c: 214: }
   592                           ;main.c: 215: LATAbits.LA7 = LATAbits.LA6 = LATCbits.LC2 = LATCbits.LC0 = LATCbits.LC1 =
      +                           LATEbits.LE1 = LATEbits.LE2 = 1;
   593  00FE76  848D               	bsf	3981,2,c	;volatile
   594  00FE78  828D               	bsf	3981,1,c	;volatile
   595  00FE7A  828B               	bsf	3979,1,c	;volatile
   596  00FE7C  808B               	bsf	3979,0,c	;volatile
   597  00FE7E  848B               	bsf	3979,2,c	;volatile
   598  00FE80  8C89               	bsf	3977,6,c	;volatile
   599  00FE82  8E89               	bsf	3977,7,c	;volatile
   600                           
   601                           ;main.c: 216: break;
   602  00FE84  0012               	return	
   603  00FE86                     l715:
   604                           
   605                           ;main.c: 218: if (segment == 1) {
   606  00FE86  0405               	decf	dispSeg@segment,w,c
   607  00FE88  A4D8               	btfss	status,2,c
   608  00FE8A  D008               	goto	l67
   609                           
   610                           ;main.c: 219: LATAbits.LA2 = LATAbits.LA3 = LATAbits.LA4 = LATAbits.LA5 = LATAbits.LA0 =
      +                           LATAbits.LA1 = 1;
   611  00FE8C  8289               	bsf	3977,1,c	;volatile
   612  00FE8E  8089               	bsf	3977,0,c	;volatile
   613  00FE90  8A89               	bsf	3977,5,c	;volatile
   614  00FE92  8889               	bsf	3977,4,c	;volatile
   615  00FE94  8689               	bsf	3977,3,c	;volatile
   616  00FE96  8489               	bsf	3977,2,c	;volatile
   617                           
   618                           ;main.c: 220: LATEbits.LE0 = 0;
   619  00FE98  908D               	bcf	3981,0,c	;volatile
   620                           
   621                           ;main.c: 221: return;
   622  00FE9A  0012               	return	
   623  00FE9C                     l67:
   624                           
   625                           ;main.c: 222: }
   626                           ;main.c: 223: LATAbits.LA7 = LATAbits.LA6 = LATCbits.LC2 = LATCbits.LC0 = LATEbits.LE1 =
      +                           LATEbits.LE2 = 1;
   627  00FE9C  848D               	bsf	3981,2,c	;volatile
   628  00FE9E  828D               	bsf	3981,1,c	;volatile
   629  00FEA0  808B               	bsf	3979,0,c	;volatile
   630  00FEA2  848B               	bsf	3979,2,c	;volatile
   631  00FEA4  8C89               	bsf	3977,6,c	;volatile
   632  00FEA6  8E89               	bsf	3977,7,c	;volatile
   633                           
   634                           ;main.c: 224: LATCbits.LC1 = 0;
   635  00FEA8  928B               	bcf	3979,1,c	;volatile
   636                           
   637                           ;main.c: 225: break;
   638  00FEAA  0012               	return	
   639  00FEAC                     l719:
   640                           
   641                           ;main.c: 227: if (segment == 1) {
   642  00FEAC  0405               	decf	dispSeg@segment,w,c
   643  00FEAE  A4D8               	btfss	status,2,c
   644  00FEB0  D008               	goto	l69
   645                           
   646                           ;main.c: 228: LATAbits.LA2 = LATAbits.LA3 = LATAbits.LA4 = LATEbits.LE0 = LATAbits.LA0 =
      +                           LATAbits.LA1 = 1;
   647  00FEB2  8289               	bsf	3977,1,c	;volatile
   648  00FEB4  8089               	bsf	3977,0,c	;volatile
   649  00FEB6  808D               	bsf	3981,0,c	;volatile
   650  00FEB8  8889               	bsf	3977,4,c	;volatile
   651  00FEBA  8689               	bsf	3977,3,c	;volatile
   652  00FEBC  8489               	bsf	3977,2,c	;volatile
   653                           
   654                           ;main.c: 229: LATAbits.LA5 = 0;
   655  00FEBE  9A89               	bcf	3977,5,c	;volatile
   656                           
   657                           ;main.c: 230: return;
   658  00FEC0  0012               	return	
   659  00FEC2                     l69:
   660                           
   661                           ;main.c: 231: }
   662                           ;main.c: 232: LATAbits.LA7 = LATAbits.LA6 = LATCbits.LC2 = LATCbits.LC1 = LATEbits.LE1 =
      +                           LATEbits.LE2 = 1;
   663  00FEC2  848D               	bsf	3981,2,c	;volatile
   664  00FEC4  828D               	bsf	3981,1,c	;volatile
   665  00FEC6  828B               	bsf	3979,1,c	;volatile
   666  00FEC8  848B               	bsf	3979,2,c	;volatile
   667  00FECA  8C89               	bsf	3977,6,c	;volatile
   668  00FECC  8E89               	bsf	3977,7,c	;volatile
   669                           
   670                           ;main.c: 233: LATCbits.LC0 = 0;
   671  00FECE  908B               	bcf	3979,0,c	;volatile
   672                           
   673                           ;main.c: 234: break;
   674  00FED0  0012               	return	
   675  00FED2                     l723:
   676                           
   677                           ;main.c: 236: if (segment == 1) {
   678  00FED2  0405               	decf	dispSeg@segment,w,c
   679  00FED4  A4D8               	btfss	status,2,c
   680  00FED6  D008               	goto	l71
   681                           
   682                           ;main.c: 237: LATAbits.LA4 = LATAbits.LA5 = LATEbits.LE0 = LATAbits.LA0 = LATAbits.LA1 =
      +                           1;
   683  00FED8  8289               	bsf	3977,1,c	;volatile
   684  00FEDA  8089               	bsf	3977,0,c	;volatile
   685  00FEDC  808D               	bsf	3981,0,c	;volatile
   686  00FEDE  8A89               	bsf	3977,5,c	;volatile
   687  00FEE0  8889               	bsf	3977,4,c	;volatile
   688                           
   689                           ;main.c: 238: LATAbits.LA2 = LATAbits.LA3 = 0;
   690  00FEE2  9689               	bcf	3977,3,c	;volatile
   691  00FEE4  9489               	bcf	3977,2,c	;volatile
   692                           
   693                           ;main.c: 239: return;
   694  00FEE6  0012               	return	
   695  00FEE8                     l71:
   696                           
   697                           ;main.c: 240: }
   698                           ;main.c: 241: LATCbits.LC2 = LATCbits.LC0 = LATCbits.LC1 = LATEbits.LE1 = LATEbits.LE2 =
      +                           1;
   699  00FEE8  848D               	bsf	3981,2,c	;volatile
   700  00FEEA  828D               	bsf	3981,1,c	;volatile
   701  00FEEC  828B               	bsf	3979,1,c	;volatile
   702  00FEEE  808B               	bsf	3979,0,c	;volatile
   703  00FEF0  848B               	bsf	3979,2,c	;volatile
   704                           
   705                           ;main.c: 242: LATAbits.LA7 = LATAbits.LA6 = 0;
   706  00FEF2  9C89               	bcf	3977,6,c	;volatile
   707  00FEF4  9E89               	bcf	3977,7,c	;volatile
   708                           
   709                           ;main.c: 243: break;
   710  00FEF6  0012               	return	
   711  00FEF8                     l727:
   712                           
   713                           ;main.c: 245: if (segment == 1) {
   714  00FEF8  0405               	decf	dispSeg@segment,w,c
   715  00FEFA  A4D8               	btfss	status,2,c
   716  00FEFC  D008               	goto	l73
   717                           
   718                           ;main.c: 246: LATAbits.LA2 = LATAbits.LA5 = LATEbits.LE0 = LATAbits.LA0 = 1;
   719  00FEFE  8089               	bsf	3977,0,c	;volatile
   720  00FF00  808D               	bsf	3981,0,c	;volatile
   721  00FF02  8A89               	bsf	3977,5,c	;volatile
   722  00FF04  8489               	bsf	3977,2,c	;volatile
   723                           
   724                           ;main.c: 247: LATAbits.LA3 = LATAbits.LA4 = LATAbits.LA1 = 0;
   725  00FF06  9289               	bcf	3977,1,c	;volatile
   726  00FF08  9889               	bcf	3977,4,c	;volatile
   727  00FF0A  9689               	bcf	3977,3,c	;volatile
   728                           
   729                           ;main.c: 248: return;
   730  00FF0C  0012               	return	
   731  00FF0E                     l73:
   732                           
   733                           ;main.c: 249: }
   734                           ;main.c: 250: LATAbits.LA7 = LATCbits.LC0 = LATCbits.LC1 = LATEbits.LE1 = 1;
   735  00FF0E  828D               	bsf	3981,1,c	;volatile
   736  00FF10  828B               	bsf	3979,1,c	;volatile
   737  00FF12  808B               	bsf	3979,0,c	;volatile
   738  00FF14  8E89               	bsf	3977,7,c	;volatile
   739                           
   740                           ;main.c: 251: LATAbits.LA6 = LATCbits.LC2 = LATEbits.LE2 = 0;
   741  00FF16  948D               	bcf	3981,2,c	;volatile
   742  00FF18  948B               	bcf	3979,2,c	;volatile
   743  00FF1A  9C89               	bcf	3977,6,c	;volatile
   744                           
   745                           ;main.c: 252: break;
   746  00FF1C  0012               	return	
   747  00FF1E                     l731:
   748                           
   749                           ;main.c: 254: if (segment == 1) {
   750  00FF1E  0405               	decf	dispSeg@segment,w,c
   751  00FF20  A4D8               	btfss	status,2,c
   752  00FF22  D008               	goto	l75
   753                           
   754                           ;main.c: 255: LATAbits.LA3 = LATAbits.LA4 = LATAbits.LA5 = LATEbits.LE0 = LATAbits.LA1 =
      +                           1;
   755  00FF24  8289               	bsf	3977,1,c	;volatile
   756  00FF26  808D               	bsf	3981,0,c	;volatile
   757  00FF28  8A89               	bsf	3977,5,c	;volatile
   758  00FF2A  8889               	bsf	3977,4,c	;volatile
   759  00FF2C  8689               	bsf	3977,3,c	;volatile
   760                           
   761                           ;main.c: 256: LATAbits.LA2 = LATAbits.LA0 = 0;
   762  00FF2E  9089               	bcf	3977,0,c	;volatile
   763  00FF30  9489               	bcf	3977,2,c	;volatile
   764                           
   765                           ;main.c: 257: return;
   766  00FF32  0012               	return	
   767  00FF34                     l75:
   768                           
   769                           ;main.c: 258: }
   770                           ;main.c: 259: LATAbits.LA6 = LATCbits.LC2 = LATCbits.LC0 = LATCbits.LC1 = LATEbits.LE2 =
      +                           1;
   771  00FF34  848D               	bsf	3981,2,c	;volatile
   772  00FF36  828B               	bsf	3979,1,c	;volatile
   773  00FF38  808B               	bsf	3979,0,c	;volatile
   774  00FF3A  848B               	bsf	3979,2,c	;volatile
   775  00FF3C  8C89               	bsf	3977,6,c	;volatile
   776                           
   777                           ;main.c: 260: LATAbits.LA7 = LATEbits.LE1 = 0;
   778  00FF3E  928D               	bcf	3981,1,c	;volatile
   779  00FF40  9E89               	bcf	3977,7,c	;volatile
   780                           
   781                           ;main.c: 261: break;
   782  00FF42  0012               	return	
   783  00FF44                     l735:
   784                           
   785                           ;main.c: 263: if (segment == 1) {
   786  00FF44  0405               	decf	dispSeg@segment,w,c
   787  00FF46  A4D8               	btfss	status,2,c
   788  00FF48  D008               	goto	l77
   789                           
   790                           ;main.c: 264: LATAbits.LA2 = LATAbits.LA5 = LATEbits.LE0 = LATAbits.LA0 = LATAbits.LA1 =
      +                           1;
   791  00FF4A  8289               	bsf	3977,1,c	;volatile
   792  00FF4C  8089               	bsf	3977,0,c	;volatile
   793  00FF4E  808D               	bsf	3981,0,c	;volatile
   794  00FF50  8A89               	bsf	3977,5,c	;volatile
   795  00FF52  8489               	bsf	3977,2,c	;volatile
   796                           
   797                           ;main.c: 265: LATAbits.LA3 = LATAbits.LA4 = 0;
   798  00FF54  9889               	bcf	3977,4,c	;volatile
   799  00FF56  9689               	bcf	3977,3,c	;volatile
   800                           
   801                           ;main.c: 266: return;
   802  00FF58  0012               	return	
   803  00FF5A                     l77:
   804                           
   805                           ;main.c: 267: }
   806                           ;main.c: 268: LATAbits.LA7 = LATCbits.LC0 = LATCbits.LC1 = LATEbits.LE1 = LATEbits.LE2 =
      +                           1;
   807  00FF5A  848D               	bsf	3981,2,c	;volatile
   808  00FF5C  828D               	bsf	3981,1,c	;volatile
   809  00FF5E  828B               	bsf	3979,1,c	;volatile
   810  00FF60  808B               	bsf	3979,0,c	;volatile
   811  00FF62  8E89               	bsf	3977,7,c	;volatile
   812                           
   813                           ;main.c: 269: LATAbits.LA6 = LATCbits.LC2 = 0;
   814  00FF64  948B               	bcf	3979,2,c	;volatile
   815  00FF66  9C89               	bcf	3977,6,c	;volatile
   816                           
   817                           ;main.c: 270: break;
   818  00FF68  0012               	return	
   819  00FF6A                     l739:
   820                           
   821                           ;main.c: 272: if (segment == 1) {
   822  00FF6A  0405               	decf	dispSeg@segment,w,c
   823  00FF6C  A4D8               	btfss	status,2,c
   824  00FF6E  D008               	goto	l79
   825                           
   826                           ;main.c: 273: LATAbits.LA2 = LATEbits.LE0 = LATAbits.LA0 = LATAbits.LA1 = 1;
   827  00FF70  8289               	bsf	3977,1,c	;volatile
   828  00FF72  8089               	bsf	3977,0,c	;volatile
   829  00FF74  808D               	bsf	3981,0,c	;volatile
   830  00FF76  8489               	bsf	3977,2,c	;volatile
   831                           
   832                           ;main.c: 274: LATAbits.LA3 = LATAbits.LA4 = LATAbits.LA5 = 0;
   833  00FF78  9A89               	bcf	3977,5,c	;volatile
   834  00FF7A  9889               	bcf	3977,4,c	;volatile
   835  00FF7C  9689               	bcf	3977,3,c	;volatile
   836                           
   837                           ;main.c: 275: return;
   838  00FF7E  0012               	return	
   839  00FF80                     l79:
   840                           
   841                           ;main.c: 276: }
   842                           ;main.c: 277: LATAbits.LA7 = LATCbits.LC1 = LATEbits.LE1 = LATEbits.LE2 = 1;
   843  00FF80  848D               	bsf	3981,2,c	;volatile
   844  00FF82  828D               	bsf	3981,1,c	;volatile
   845  00FF84  828B               	bsf	3979,1,c	;volatile
   846  00FF86  8E89               	bsf	3977,7,c	;volatile
   847                           
   848                           ;main.c: 278: LATAbits.LA6 = LATCbits.LC2 = LATCbits.LC0 = 0;
   849  00FF88  908B               	bcf	3979,0,c	;volatile
   850  00FF8A  948B               	bcf	3979,2,c	;volatile
   851  00FF8C  9C89               	bcf	3977,6,c	;volatile
   852                           
   853                           ;main.c: 279: break;
   854  00FF8E  0012               	return	
   855  00FF90                     l745:
   856  00FF90  5006               	movf	dispSeg@letter,w,c
   857                           
   858                           ; Switch size 1, requested type "space"
   859                           ; Number of cases is 18, Range of values is 0 to 102
   860                           ; switch strategies available:
   861                           ; Name         Instructions Cycles
   862                           ; simple_byte           55    28 (average)
   863                           ;	Chosen strategy is simple_byte
   864  00FF92  0A00               	xorlw	0	; case 0
   865  00FF94  B4D8               	btfsc	status,2,c
   866  00FF96  D6A8               	goto	l671
   867  00FF98  0A2D               	xorlw	45	; case 45
   868  00FF9A  B4D8               	btfsc	status,2,c
   869  00FF9C  D6B7               	goto	l675
   870  00FF9E  0A1D               	xorlw	29	; case 48
   871  00FFA0  B4D8               	btfsc	status,2,c
   872  00FFA2  D6C6               	goto	l679
   873  00FFA4  0A01               	xorlw	1	; case 49
   874  00FFA6  B4D8               	btfsc	status,2,c
   875  00FFA8  D6D6               	goto	l683
   876  00FFAA  0A03               	xorlw	3	; case 50
   877  00FFAC  B4D8               	btfsc	status,2,c
   878  00FFAE  D6E6               	goto	l687
   879  00FFB0  0A01               	xorlw	1	; case 51
   880  00FFB2  B4D8               	btfsc	status,2,c
   881  00FFB4  D6F6               	goto	l691
   882  00FFB6  0A07               	xorlw	7	; case 52
   883  00FFB8  B4D8               	btfsc	status,2,c
   884  00FFBA  D706               	goto	l695
   885  00FFBC  0A01               	xorlw	1	; case 53
   886  00FFBE  B4D8               	btfsc	status,2,c
   887  00FFC0  D716               	goto	l699
   888  00FFC2  0A03               	xorlw	3	; case 54
   889  00FFC4  B4D8               	btfsc	status,2,c
   890  00FFC6  D726               	goto	l703
   891  00FFC8  0A01               	xorlw	1	; case 55
   892  00FFCA  B4D8               	btfsc	status,2,c
   893  00FFCC  D736               	goto	l707
   894  00FFCE  0A0F               	xorlw	15	; case 56
   895  00FFD0  B4D8               	btfsc	status,2,c
   896  00FFD2  D746               	goto	l711
   897  00FFD4  0A01               	xorlw	1	; case 57
   898  00FFD6  B4D8               	btfsc	status,2,c
   899  00FFD8  D756               	goto	l715
   900  00FFDA  0A58               	xorlw	88	; case 97
   901  00FFDC  B4D8               	btfsc	status,2,c
   902  00FFDE  D766               	goto	l719
   903  00FFE0  0A03               	xorlw	3	; case 98
   904  00FFE2  B4D8               	btfsc	status,2,c
   905  00FFE4  D776               	goto	l723
   906  00FFE6  0A01               	xorlw	1	; case 99
   907  00FFE8  B4D8               	btfsc	status,2,c
   908  00FFEA  D786               	goto	l727
   909  00FFEC  0A07               	xorlw	7	; case 100
   910  00FFEE  B4D8               	btfsc	status,2,c
   911  00FFF0  D796               	goto	l731
   912  00FFF2  0A01               	xorlw	1	; case 101
   913  00FFF4  B4D8               	btfsc	status,2,c
   914  00FFF6  D7A6               	goto	l735
   915  00FFF8  0A03               	xorlw	3	; case 102
   916  00FFFA  A4D8               	btfss	status,2,c
   917  00FFFC  0012               	return	
   918  00FFFE  D7B5               	goto	l739
   919  010000                     __end_of_dispSeg:
   920                           	opt stack 0
   921  0000                     tblptru	equ	0xFF8
   922                           status	equ	0xFD8
   923                           tblptru	equ	0xFF8
   924                           status	equ	0xFD8
   925                           
   926                           	psect	rparam
   927  0000                     tblptru	equ	0xFF8
   928                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      4       8
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_dispSeg

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     285
                                              2 COMRAM     2     2      0
                            _dispSeg
 ---------------------------------------------------------------------------------
 (1) _dispSeg                                              2     0      2     285
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _dispSeg

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      4       8       1        8.4%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       1       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       8      12        0.0%
DATA                 0      0       9       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.21 build 54009 
Symbol Table                                                                                   Sat Feb 01 05:18:12 2014

                     l51 FD6C                       l43 FCFC                       l27 FCE4  
                     l61 FE2A                       l53 FD92                       l46 FD20  
                     l71 FEE8                       l63 FE50                       l55 FDB8  
                     l48 FD46                       l73 FF0E                       l65 FE76  
                     l57 FDDE                       l75 FF34                       l67 FE9C  
                     l59 FE04                       l77 FF5A                       l69 FEC2  
                     l79 FF80             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000                      l711 FE60  
                    l703 FE14                      l731 FF1E                      l723 FED2  
                    l715 FE86                      l707 FE3A                      l735 FF44  
                    l727 FEF8                      l719 FEAC                      l671 FCE8  
                    l745 FF90                      l739 FF6A                      l691 FDA2  
                    l683 FD56                      l675 FD0C                      l695 FDC8  
                    l687 FD7C                      l679 FD30                      l699 FDEE  
           __CFG_CPB$OFF 000000             __CFG_CPD$OFF 000000             __CFG_LVP$OFF 000000  
                   _LATA 000F89                     _LATC 000F8B                     _LATD 000F8C  
                   _LATE 000F8D                     _main FC9A            __CFG_BORV$190 000000  
                   start 0000            __CFG_IESO$OFF 000000                    ?_main 0005  
                  _TRISA 000F92                    _TRISC 000F94                    _TRISE 000F96  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
        __end_of_dispSeg 0000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000       __CFG_MCLRE$EXTMCLR 000000  
         __CFG_BOREN$OFF 000000                    status 000FD8           __CFG_HFOFST$ON 000000  
        __initialization FC88             __end_of_main FCE6                   ??_main 0007  
          __activetblptr 000002           __CFG_PLLCFG$ON 000000           __CFG_WDTEN$OFF 000000  
         __CFG_XINST$OFF 000000           __CFG_STVREN$ON 000000                ??_dispSeg 0007  
                 tblptru 000FF8               __accesstop 0060  __end_of__initialization FC90  
        __CFG_PBADEN$OFF 000000           __pcstackCOMRAM 0005       __CFG_CCP2MX$PORTC1 000000  
     __CFG_CCP3MX$PORTB5 000000        __CFG_PRICLKEN$OFF 000000          __CFG_PWRTEN$OFF 000000  
                __Hparam 0000                  __Lparam 0000                  __pcinit FC88  
                __ramtop 1000                  __ptext0 FC9A                  __ptext1 FCE6  
                _dispSeg FCE6     end_of_initialization FC90            __Lmediumconst 0000  
              _TRISDbits 000F95      start_initialization FC88              __pbssCOMRAM 0001  
               ?_dispSeg 0005                 _LATAbits 000F89                 _LATCbits 000F8B  
               _LATEbits 000F8D         __CFG_WDTPS$32768 000000                 __Hrparam 0000  
               __Lrparam 0000        __CFG_P2BMX$PORTD2 000000         __size_of_dispSeg 031A  
          __size_of_main 004C           dispSeg@segment 0005             wait_ms@timel 0001  
      __CFG_T3CMX$PORTC0 000000            dispSeg@letter 0006        __CFG_FOSC$INTIO67 000000  
