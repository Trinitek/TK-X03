

Microchip Technology PIC18 LITE Macro Assembler V1.21 build 54009 
                                                                                               Tue Feb 04 23:16:05 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 54009
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	text0,global,reloc=2,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    14  0000                     _ANSELD	set	3899
    15  0000                     _BAUDCON2bits	set	3952
    16  0000                     _LATA	set	3977
    17  0000                     _LATAbits	set	3977
    18  0000                     _LATC	set	3979
    19  0000                     _LATCbits	set	3979
    20  0000                     _LATD	set	3980
    21  0000                     _LATDbits	set	3980
    22  0000                     _LATE	set	3981
    23  0000                     _LATEbits	set	3981
    24  0000                     _PIR3bits	set	4004
    25  0000                     _RCREG2	set	3956
    26  0000                     _RCSTA2bits	set	3953
    27  0000                     _SPBRG2	set	3957
    28  0000                     _TRISA	set	3986
    29  0000                     _TRISC	set	3988
    30  0000                     _TRISDbits	set	3989
    31  0000                     _TRISE	set	3990
    32  0000                     _TXSTA2bits	set	3954
    33                           
    34 ;;
    35 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
    36 ;;
    37 ;; *************** function _main *****************
    38 ;; Defined at:
    39 ;;		line 19 in file "source/main.c"
    40 ;; Parameters:    Size  Location     Type
    41 ;;		None
    42 ;; Auto vars:     Size  Location     Type
    43 ;;  receivedByte    1    6[COMRAM] unsigned char 
    44 ;; Return value:  Size  Location     Type
    45 ;;		None               void
    46 ;; Registers used:
    47 ;;		wreg, status,2, status,0, cstack
    48 ;; Tracked objects:
    49 ;;		On entry : 0/0
    50 ;;		On exit  : 0/0
    51 ;;		Unchanged: 0/0
    52 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
    53 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
    54 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
    55 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
    56 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
    57 ;;Total ram usage:        3 bytes
    58 ;; Hardware stack levels required when called:    1
    59 ;; This function calls:
    60 ;;		_initPorts
    61 ;;		_enableSerialRX
    62 ;;		_dispSeg
    63 ;; This function is called by:
    64 ;;		Startup code after reset
    65 ;; This function uses a non-reentrant model
    66 ;;
    67                           
    68                           	psect	text0
    69  00FC06                     __ptext0:
    70                           	opt stack 0
    71                           
    72                           ; #config settings
    73  00FC06                     _main:
    74                           	opt stack 30
    75                           
    76                           ;main.c: 20: initPorts();
    77                           
    78                           ; BSR set to: 15
    79                           ;incstack = 0
    80                           ;incstack = 0
    81  00FC06  ECEB  F07D         	call	_initPorts	;wreg free
    82                           
    83                           ;main.c: 21: enableSerialRX(1200);
    84  00FC0A  0E04               	movlw	4
    85  00FC0C  6E02               	movwf	?_enableSerialRX+1,c
    86  00FC0E  0EB0               	movlw	176
    87  00FC10  6E01               	movwf	?_enableSerialRX,c
    88  00FC12  EC32  F07E         	call	_enableSerialRX	;wreg free
    89                           
    90                           ;main.c: 22: dispSeg(1, '-'); dispSeg(2, '-');
    91  00FC16  6E05               	movwf	??_main& (0+255),c
    92  00FC18  0E01               	movlw	1
    93  00FC1A  6E01               	movwf	?_dispSeg,c
    94  00FC1C  5005               	movf	??_main& (0+255),w,c
    95  00FC1E  6E06               	movwf	(??_main+1)& (0+255),c
    96  00FC20  0E2D               	movlw	45
    97  00FC22  6E02               	movwf	?_dispSeg+1,c
    98  00FC24  5006               	movf	(??_main+1)& (0+255),w,c
    99  00FC26  EC73  F07E         	call	_dispSeg	;wreg free
   100  00FC2A  6E05               	movwf	??_main& (0+255),c
   101  00FC2C  0E02               	movlw	2
   102  00FC2E  6E01               	movwf	?_dispSeg,c
   103  00FC30  5005               	movf	??_main& (0+255),w,c
   104  00FC32  6E06               	movwf	(??_main+1)& (0+255),c
   105  00FC34  0E2D               	movlw	45
   106  00FC36  6E02               	movwf	?_dispSeg+1,c
   107  00FC38  5006               	movf	(??_main+1)& (0+255),w,c
   108  00FC3A  EC73  F07E         	call	_dispSeg	;wreg free
   109  00FC3E                     l48:
   110  00FC3E  AAA4               	btfss	4004,5,c	;volatile
   111  00FC40  D7FE               	goto	l48
   112                           
   113                           ;main.c: 27: uint8_t receivedByte = RCREG2 ^ 0xF0;
   114  00FC42  5074               	movf	3956,w,c	;volatile
   115  00FC44  0AF0               	xorlw	240
   116  00FC46  6E07               	movwf	main@receivedByte,c
   117                           
   118                           ;main.c: 29: dispSeg(1, receivedByte);
   119  00FC48  6E05               	movwf	??_main& (0+255),c
   120  00FC4A  0E01               	movlw	1
   121  00FC4C  6E01               	movwf	?_dispSeg,c
   122  00FC4E  5005               	movf	??_main& (0+255),w,c
   123  00FC50  C007  F002         	movff	main@receivedByte,?_dispSeg+1
   124  00FC54  EC73  F07E         	call	_dispSeg	;wreg free
   125                           
   126                           ;main.c: 36: }
   127                           
   128                           ;main.c: 35: break;
   129                           
   130                           ;main.c: 34: case 11:
   131                           
   132                           ;main.c: 33: break;
   133                           
   134                           ;main.c: 32: case 10:
   135                           
   136                           ;main.c: 31: switch (receivedByte) {
   137  00FC58  5007               	movf	main@receivedByte,w,c
   138                           
   139                           ; Switch size 1, requested type "space"
   140                           ; Number of cases is 2, Range of values is 10 to 11
   141                           ; switch strategies available:
   142                           ; Name         Instructions Cycles
   143                           ; simple_byte            7     4 (average)
   144                           ;	Chosen strategy is simple_byte
   145  00FC5A  0A0A               	xorlw	10	; case 10
   146  00FC5C  B4D8               	btfsc	status,2,c
   147  00FC5E  D7EF               	goto	l48
   148  00FC60  0A01               	xorlw	1	; case 11
   149  00FC62  D7ED               	goto	l48
   150  00FC64                     __end_of_main:
   151                           	opt stack 0
   152                           status	equ	0xFD8
   153                           
   154                           	psect	cinit
   155  00FBC4                     __pcinit:
   156                           	opt stack 0
   157  00FBC4                     start_initialization:
   158                           	opt stack 0
   159  00FBC4                     __initialization:
   160                           	opt stack 0
   161                           
   162                           ; Clear objects allocated to COMRAM (4 bytes)
   163  00FBC4  6A0B               	clrf	(__pbssCOMRAM+3)& (0+255),c
   164  00FBC6  6A0A               	clrf	(__pbssCOMRAM+2)& (0+255),c
   165  00FBC8  6A09               	clrf	(__pbssCOMRAM+1)& (0+255),c
   166  00FBCA  6A08               	clrf	__pbssCOMRAM& (0+255),c
   167  00FBCC                     end_of_initialization:
   168                           	opt stack 0
   169  00FBCC                     __end_of__initialization:
   170                           	opt stack 0
   171  00FBCC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   172  00FBCE  6EF8               	movwf	tblptru,c
   173  00FBD0  0100               	movlb	0
   174  00FBD2  EF03  F07E         	goto	_main	;jump to C main() function
   175                           tblptru	equ	0xFF8
   176                           status	equ	0xFD8
   177                           
   178                           	psect	bssCOMRAM
   179  000008                     __pbssCOMRAM:
   180                           	opt stack 0
   181  000008                     wait_ms@timel:
   182                           	opt stack 0
   183  000008                     	ds	4
   184                           tblptru	equ	0xFF8
   185                           status	equ	0xFD8
   186                           
   187                           	psect	cstackCOMRAM
   188  000001                     __pcstackCOMRAM:
   189                           	opt stack 0
   190  000001                     ?_enableSerialRX:
   191                           	opt stack 0
   192  000001                     ?_dispSeg:
   193                           	opt stack 0
   194  000001                     dispSeg@segment:
   195                           	opt stack 0
   196  000001                     enableSerialRX@baudRate:
   197                           	opt stack 0
   198                           
   199                           ; 2 bytes @ 0x0
   200  000001                     	ds	1
   201  000002                     dispSeg@letter:
   202                           	opt stack 0
   203                           
   204                           ; 1 bytes @ 0x1
   205  000002                     	ds	1
   206  000003                     ??_enableSerialRX:
   207  000003                     
   208                           ; 0 bytes @ 0x2
   209  000003                     	ds	2
   210  000005                     ??_main:
   211                           
   212                           ; 0 bytes @ 0x4
   213  000005                     	ds	2
   214  000007                     main@receivedByte:
   215                           	opt stack 0
   216                           
   217                           ; 1 bytes @ 0x6
   218  000007                     	ds	1
   219                           tblptru	equ	0xFF8
   220                           status	equ	0xFD8
   221                           
   222 ;; *************** function _dispSeg *****************
   223 ;; Defined at:
   224 ;;		line 96 in file "source/main.c"
   225 ;; Parameters:    Size  Location     Type
   226 ;;  segment         1    0[COMRAM] unsigned char 
   227 ;;  letter          1    1[COMRAM] unsigned char 
   228 ;; Auto vars:     Size  Location     Type
   229 ;;		None
   230 ;; Return value:  Size  Location     Type
   231 ;;		None               void
   232 ;; Registers used:
   233 ;;		wreg, status,2, status,0
   234 ;; Tracked objects:
   235 ;;		On entry : 0/0
   236 ;;		On exit  : 0/0
   237 ;;		Unchanged: 0/0
   238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   239 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   242 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   243 ;;Total ram usage:        2 bytes
   244 ;; Hardware stack levels used:    1
   245 ;; This function calls:
   246 ;;		Nothing
   247 ;; This function is called by:
   248 ;;		_main
   249 ;;		_cycleSegDisplays
   250 ;; This function uses a non-reentrant model
   251 ;;
   252                           
   253                           	psect	text1
   254  00FCE6                     __ptext1:
   255                           	opt stack 0
   256  00FCE6                     _dispSeg:
   257                           	opt stack 30
   258                           
   259                           ;main.c: 97: switch (letter) {
   260                           
   261                           ;incstack = 0
   262                           ;incstack = 0
   263  00FCE6  D154               	goto	l836
   264  00FCE8                     l762:
   265                           
   266                           ;main.c: 99: if (segment == 1) {
   267  00FCE8  0401               	decf	dispSeg@segment,w,c
   268  00FCEA  A4D8               	btfss	status,2,c
   269  00FCEC  D007               	goto	l73
   270                           
   271                           ;main.c: 100: LATAbits.LA2 = LATAbits.LA3 = LATAbits.LA4 = LATAbits.LA5 = LATEbits.LE0 =
      +                           LATAbits.LA0 = LATAbits.LA1 = 0;
   272  00FCEE  9289               	bcf	3977,1,c	;volatile
   273  00FCF0  9089               	bcf	3977,0,c	;volatile
   274  00FCF2  908D               	bcf	3981,0,c	;volatile
   275  00FCF4  9A89               	bcf	3977,5,c	;volatile
   276  00FCF6  9889               	bcf	3977,4,c	;volatile
   277  00FCF8  9689               	bcf	3977,3,c	;volatile
   278  00FCFA  9489               	bcf	3977,2,c	;volatile
   279  00FCFC                     l73:
   280                           
   281                           ;main.c: 101: }
   282                           ;main.c: 102: LATAbits.LA7 = LATAbits.LA6 = LATCbits.LC2 = LATCbits.LC0 = LATCbits.LC1 =
      +                           LATEbits.LE1 = LATEbits.LE2 = 0;
   283  00FCFC  948D               	bcf	3981,2,c	;volatile
   284  00FCFE  928D               	bcf	3981,1,c	;volatile
   285  00FD00  928B               	bcf	3979,1,c	;volatile
   286  00FD02  908B               	bcf	3979,0,c	;volatile
   287  00FD04  948B               	bcf	3979,2,c	;volatile
   288  00FD06  9C89               	bcf	3977,6,c	;volatile
   289  00FD08  9E89               	bcf	3977,7,c	;volatile
   290                           
   291                           ;main.c: 103: break;
   292  00FD0A  0012               	return	
   293  00FD0C                     l766:
   294                           
   295                           ;main.c: 105: if (segment == 1) {
   296  00FD0C  0401               	decf	dispSeg@segment,w,c
   297  00FD0E  A4D8               	btfss	status,2,c
   298  00FD10  D007               	goto	l76
   299                           
   300                           ;main.c: 106: LATAbits.LA1 = 1;
   301  00FD12  8289               	bsf	3977,1,c	;volatile
   302                           
   303                           ;main.c: 107: LATAbits.LA2 = LATAbits.LA3 = LATAbits.LA4 = LATAbits.LA5 = LATEbits.LE0 =
      +                           LATAbits.LA0 = 0;
   304  00FD14  9089               	bcf	3977,0,c	;volatile
   305  00FD16  908D               	bcf	3981,0,c	;volatile
   306  00FD18  9A89               	bcf	3977,5,c	;volatile
   307  00FD1A  9889               	bcf	3977,4,c	;volatile
   308  00FD1C  9689               	bcf	3977,3,c	;volatile
   309  00FD1E  9489               	bcf	3977,2,c	;volatile
   310  00FD20                     l76:
   311                           
   312                           ;main.c: 108: }
   313                           ;main.c: 109: LATEbits.LE2 = 1;
   314  00FD20  848D               	bsf	3981,2,c	;volatile
   315                           
   316                           ;main.c: 110: LATAbits.LA7 = LATAbits.LA6 = LATCbits.LC2 = LATCbits.LC0 = LATCbits.LC1 =
      +                           LATEbits.LE1 = 0;
   317  00FD22  928D               	bcf	3981,1,c	;volatile
   318  00FD24  928B               	bcf	3979,1,c	;volatile
   319  00FD26  908B               	bcf	3979,0,c	;volatile
   320  00FD28  948B               	bcf	3979,2,c	;volatile
   321  00FD2A  9C89               	bcf	3977,6,c	;volatile
   322  00FD2C  9E89               	bcf	3977,7,c	;volatile
   323                           
   324                           ;main.c: 111: break;
   325  00FD2E  0012               	return	
   326  00FD30                     l770:
   327                           
   328                           ;main.c: 113: if (segment == 1) {
   329  00FD30  0401               	decf	dispSeg@segment,w,c
   330  00FD32  A4D8               	btfss	status,2,c
   331  00FD34  D008               	goto	l78
   332                           
   333                           ;main.c: 114: LATAbits.LA2 = LATAbits.LA3 = LATAbits.LA4 = LATAbits.LA5 = LATEbits.LE0 =
      +                           LATAbits.LA0 = 1;
   334  00FD36  8089               	bsf	3977,0,c	;volatile
   335  00FD38  808D               	bsf	3981,0,c	;volatile
   336  00FD3A  8A89               	bsf	3977,5,c	;volatile
   337  00FD3C  8889               	bsf	3977,4,c	;volatile
   338  00FD3E  8689               	bsf	3977,3,c	;volatile
   339  00FD40  8489               	bsf	3977,2,c	;volatile
   340                           
   341                           ;main.c: 115: LATAbits.LA1 = 0;
   342  00FD42  9289               	bcf	3977,1,c	;volatile
   343                           
   344                           ;main.c: 116: return;
   345  00FD44  0012               	return	
   346  00FD46                     l78:
   347                           
   348                           ;main.c: 117: }
   349                           ;main.c: 118: LATAbits.LA7 = LATAbits.LA6 = LATCbits.LC2 = LATCbits.LC0 = LATCbits.LC1 =
      +                           LATEbits.LE1 = 1;
   350  00FD46  828D               	bsf	3981,1,c	;volatile
   351  00FD48  828B               	bsf	3979,1,c	;volatile
   352  00FD4A  808B               	bsf	3979,0,c	;volatile
   353  00FD4C  848B               	bsf	3979,2,c	;volatile
   354  00FD4E  8C89               	bsf	3977,6,c	;volatile
   355  00FD50  8E89               	bsf	3977,7,c	;volatile
   356                           
   357                           ;main.c: 119: LATEbits.LE2 = 0;
   358  00FD52  948D               	bcf	3981,2,c	;volatile
   359                           
   360                           ;main.c: 120: break;
   361  00FD54  0012               	return	
   362  00FD56                     l774:
   363                           
   364                           ;main.c: 122: if (segment == 1) {
   365  00FD56  0401               	decf	dispSeg@segment,w,c
   366  00FD58  A4D8               	btfss	status,2,c
   367  00FD5A  D008               	goto	l81
   368                           
   369                           ;main.c: 123: LATAbits.LA3 = LATAbits.LA4 = 1;
   370  00FD5C  8889               	bsf	3977,4,c	;volatile
   371  00FD5E  8689               	bsf	3977,3,c	;volatile
   372                           
   373                           ;main.c: 124: LATAbits.LA2 = LATAbits.LA5 = LATEbits.LE0 = LATAbits.LA0 = LATAbits.LA1 =
      +                           0;
   374  00FD60  9289               	bcf	3977,1,c	;volatile
   375  00FD62  9089               	bcf	3977,0,c	;volatile
   376  00FD64  908D               	bcf	3981,0,c	;volatile
   377  00FD66  9A89               	bcf	3977,5,c	;volatile
   378  00FD68  9489               	bcf	3977,2,c	;volatile
   379                           
   380                           ;main.c: 125: return;
   381  00FD6A  0012               	return	
   382  00FD6C                     l81:
   383                           
   384                           ;main.c: 126: }
   385                           ;main.c: 127: LATAbits.LA6 = LATCbits.LC2 = 1;
   386  00FD6C  848B               	bsf	3979,2,c	;volatile
   387  00FD6E  8C89               	bsf	3977,6,c	;volatile
   388                           
   389                           ;main.c: 128: LATAbits.LA7 = LATCbits.LC0 = LATCbits.LC1 = LATEbits.LE1 = LATEbits.LE2 =
      +                           0;
   390  00FD70  948D               	bcf	3981,2,c	;volatile
   391  00FD72  928D               	bcf	3981,1,c	;volatile
   392  00FD74  928B               	bcf	3979,1,c	;volatile
   393  00FD76  908B               	bcf	3979,0,c	;volatile
   394  00FD78  9E89               	bcf	3977,7,c	;volatile
   395                           
   396                           ;main.c: 129: break;
   397  00FD7A  0012               	return	
   398  00FD7C                     l778:
   399                           
   400                           ;main.c: 131: if (segment == 1) {
   401  00FD7C  0401               	decf	dispSeg@segment,w,c
   402  00FD7E  A4D8               	btfss	status,2,c
   403  00FD80  D008               	goto	l83
   404                           
   405                           ;main.c: 132: LATAbits.LA2 = LATAbits.LA3 = LATAbits.LA1 = LATEbits.LE0 = LATAbits.LA5 =
      +                           1;
   406  00FD82  8A89               	bsf	3977,5,c	;volatile
   407  00FD84  808D               	bsf	3981,0,c	;volatile
   408  00FD86  8289               	bsf	3977,1,c	;volatile
   409  00FD88  8689               	bsf	3977,3,c	;volatile
   410  00FD8A  8489               	bsf	3977,2,c	;volatile
   411                           
   412                           ;main.c: 133: LATAbits.LA4 = LATAbits.LA0 = 0;
   413  00FD8C  9089               	bcf	3977,0,c	;volatile
   414  00FD8E  9889               	bcf	3977,4,c	;volatile
   415                           
   416                           ;main.c: 134: return;
   417  00FD90  0012               	return	
   418  00FD92                     l83:
   419                           
   420                           ;main.c: 135: }
   421                           ;main.c: 136: LATAbits.LA7 = LATAbits.LA6 = LATEbits.LE2 = LATCbits.LC1 = LATCbits.LC0 =
      +                           1;
   422  00FD92  808B               	bsf	3979,0,c	;volatile
   423  00FD94  828B               	bsf	3979,1,c	;volatile
   424  00FD96  848D               	bsf	3981,2,c	;volatile
   425  00FD98  8C89               	bsf	3977,6,c	;volatile
   426  00FD9A  8E89               	bsf	3977,7,c	;volatile
   427                           
   428                           ;main.c: 137: LATCbits.LC2 = LATEbits.LE1 = 0;
   429  00FD9C  928D               	bcf	3981,1,c	;volatile
   430  00FD9E  948B               	bcf	3979,2,c	;volatile
   431                           
   432                           ;main.c: 138: break;
   433  00FDA0  0012               	return	
   434  00FDA2                     l782:
   435                           
   436                           ;main.c: 140: if (segment == 1) {
   437  00FDA2  0401               	decf	dispSeg@segment,w,c
   438  00FDA4  A4D8               	btfss	status,2,c
   439  00FDA6  D008               	goto	l85
   440                           
   441                           ;main.c: 141: LATAbits.LA2 = LATAbits.LA3 = LATAbits.LA1 = LATAbits.LA4 = LATAbits.LA5 =
      +                           1;
   442  00FDA8  8A89               	bsf	3977,5,c	;volatile
   443  00FDAA  8889               	bsf	3977,4,c	;volatile
   444  00FDAC  8289               	bsf	3977,1,c	;volatile
   445  00FDAE  8689               	bsf	3977,3,c	;volatile
   446  00FDB0  8489               	bsf	3977,2,c	;volatile
   447                           
   448                           ;main.c: 142: LATEbits.LE0 = LATAbits.LA0 = 0;
   449  00FDB2  9089               	bcf	3977,0,c	;volatile
   450  00FDB4  908D               	bcf	3981,0,c	;volatile
   451                           
   452                           ;main.c: 143: return;
   453  00FDB6  0012               	return	
   454  00FDB8                     l85:
   455                           
   456                           ;main.c: 144: }
   457                           ;main.c: 145: LATAbits.LA7 = LATAbits.LA6 = LATEbits.LE2 = LATCbits.LC2 = LATCbits.LC0 =
      +                           1;
   458  00FDB8  808B               	bsf	3979,0,c	;volatile
   459  00FDBA  848B               	bsf	3979,2,c	;volatile
   460  00FDBC  848D               	bsf	3981,2,c	;volatile
   461  00FDBE  8C89               	bsf	3977,6,c	;volatile
   462  00FDC0  8E89               	bsf	3977,7,c	;volatile
   463                           
   464                           ;main.c: 146: LATCbits.LC1 = LATEbits.LE1 = 0;
   465  00FDC2  928D               	bcf	3981,1,c	;volatile
   466  00FDC4  928B               	bcf	3979,1,c	;volatile
   467                           
   468                           ;main.c: 147: break;
   469  00FDC6  0012               	return	
   470  00FDC8                     l786:
   471                           
   472                           ;main.c: 149: if (segment == 1) {
   473  00FDC8  0401               	decf	dispSeg@segment,w,c
   474  00FDCA  A4D8               	btfss	status,2,c
   475  00FDCC  D008               	goto	l87
   476                           
   477                           ;main.c: 150: LATAbits.LA0 = LATAbits.LA1 = LATAbits.LA3 = LATAbits.LA4 = 1;
   478  00FDCE  8889               	bsf	3977,4,c	;volatile
   479  00FDD0  8689               	bsf	3977,3,c	;volatile
   480  00FDD2  8289               	bsf	3977,1,c	;volatile
   481  00FDD4  8089               	bsf	3977,0,c	;volatile
   482                           
   483                           ;main.c: 151: LATAbits.LA2 = LATAbits.LA5 = LATEbits.LE0 = 0;
   484  00FDD6  908D               	bcf	3981,0,c	;volatile
   485  00FDD8  9A89               	bcf	3977,5,c	;volatile
   486  00FDDA  9489               	bcf	3977,2,c	;volatile
   487                           
   488                           ;main.c: 152: return;
   489  00FDDC  0012               	return	
   490  00FDDE                     l87:
   491                           
   492                           ;main.c: 153: }
   493                           ;main.c: 154: LATEbits.LE1 = LATEbits.LE2 = LATAbits.LA6 = LATCbits.LC2 = 1;
   494  00FDDE  848B               	bsf	3979,2,c	;volatile
   495  00FDE0  8C89               	bsf	3977,6,c	;volatile
   496  00FDE2  848D               	bsf	3981,2,c	;volatile
   497  00FDE4  828D               	bsf	3981,1,c	;volatile
   498                           
   499                           ;main.c: 155: LATAbits.LA7 = LATCbits.LC0 = LATCbits.LC1 = 0;
   500  00FDE6  928B               	bcf	3979,1,c	;volatile
   501  00FDE8  908B               	bcf	3979,0,c	;volatile
   502  00FDEA  9E89               	bcf	3977,7,c	;volatile
   503                           
   504                           ;main.c: 156: break;
   505  00FDEC  0012               	return	
   506  00FDEE                     l790:
   507                           
   508                           ;main.c: 158: if (segment == 1) {
   509  00FDEE  0401               	decf	dispSeg@segment,w,c
   510  00FDF0  A4D8               	btfss	status,2,c
   511  00FDF2  D008               	goto	l89
   512                           
   513                           ;main.c: 159: LATAbits.LA2 = LATAbits.LA0 = LATAbits.LA1 = LATAbits.LA4 = LATAbits.LA5 =
      +                           1;
   514  00FDF4  8A89               	bsf	3977,5,c	;volatile
   515  00FDF6  8889               	bsf	3977,4,c	;volatile
   516  00FDF8  8289               	bsf	3977,1,c	;volatile
   517  00FDFA  8089               	bsf	3977,0,c	;volatile
   518  00FDFC  8489               	bsf	3977,2,c	;volatile
   519                           
   520                           ;main.c: 160: LATAbits.LA3 = LATEbits.LE0 = 0;
   521  00FDFE  908D               	bcf	3981,0,c	;volatile
   522  00FE00  9689               	bcf	3977,3,c	;volatile
   523                           
   524                           ;main.c: 161: return;
   525  00FE02  0012               	return	
   526  00FE04                     l89:
   527                           
   528                           ;main.c: 162: }
   529                           ;main.c: 163: LATAbits.LA7 = LATEbits.LE1 = LATEbits.LE2 = LATCbits.LC2 = LATCbits.LC0 =
      +                           1;
   530  00FE04  808B               	bsf	3979,0,c	;volatile
   531  00FE06  848B               	bsf	3979,2,c	;volatile
   532  00FE08  848D               	bsf	3981,2,c	;volatile
   533  00FE0A  828D               	bsf	3981,1,c	;volatile
   534  00FE0C  8E89               	bsf	3977,7,c	;volatile
   535                           
   536                           ;main.c: 164: LATAbits.LA6 = LATCbits.LC1 = 0;
   537  00FE0E  928B               	bcf	3979,1,c	;volatile
   538  00FE10  9C89               	bcf	3977,6,c	;volatile
   539                           
   540                           ;main.c: 165: break;
   541  00FE12  0012               	return	
   542  00FE14                     l794:
   543                           
   544                           ;main.c: 167: if (segment == 1) {
   545  00FE14  0401               	decf	dispSeg@segment,w,c
   546  00FE16  A4D8               	btfss	status,2,c
   547  00FE18  D008               	goto	l91
   548                           
   549                           ;main.c: 168: LATAbits.LA2 = LATAbits.LA0 = LATAbits.LA1 = LATAbits.LA4 = LATAbits.LA5 =
      +                           LATEbits.LE0 = 1;
   550  00FE1A  808D               	bsf	3981,0,c	;volatile
   551  00FE1C  8A89               	bsf	3977,5,c	;volatile
   552  00FE1E  8889               	bsf	3977,4,c	;volatile
   553  00FE20  8289               	bsf	3977,1,c	;volatile
   554  00FE22  8089               	bsf	3977,0,c	;volatile
   555  00FE24  8489               	bsf	3977,2,c	;volatile
   556                           
   557                           ;main.c: 169: LATAbits.LA3 = 0;
   558  00FE26  9689               	bcf	3977,3,c	;volatile
   559                           
   560                           ;main.c: 170: return;
   561  00FE28  0012               	return	
   562  00FE2A                     l91:
   563                           
   564                           ;main.c: 171: }
   565                           ;main.c: 172: LATAbits.LA7 = LATEbits.LE1 = LATEbits.LE2 = LATCbits.LC2 = LATCbits.LC0 =
      +                           LATCbits.LC1 = 1;
   566  00FE2A  828B               	bsf	3979,1,c	;volatile
   567  00FE2C  808B               	bsf	3979,0,c	;volatile
   568  00FE2E  848B               	bsf	3979,2,c	;volatile
   569  00FE30  848D               	bsf	3981,2,c	;volatile
   570  00FE32  828D               	bsf	3981,1,c	;volatile
   571  00FE34  8E89               	bsf	3977,7,c	;volatile
   572                           
   573                           ;main.c: 173: LATAbits.LA6 = 0;
   574  00FE36  9C89               	bcf	3977,6,c	;volatile
   575                           
   576                           ;main.c: 174: break;
   577  00FE38  0012               	return	
   578  00FE3A                     l798:
   579                           
   580                           ;main.c: 176: if (segment == 1) {
   581  00FE3A  0401               	decf	dispSeg@segment,w,c
   582  00FE3C  A4D8               	btfss	status,2,c
   583  00FE3E  D008               	goto	l93
   584                           
   585                           ;main.c: 177: LATAbits.LA2 = LATAbits.LA3 = LATAbits.LA4 = 1;
   586  00FE40  8889               	bsf	3977,4,c	;volatile
   587  00FE42  8689               	bsf	3977,3,c	;volatile
   588  00FE44  8489               	bsf	3977,2,c	;volatile
   589                           
   590                           ;main.c: 178: LATAbits.LA5 = LATEbits.LE0 = LATAbits.LA0 = LATAbits.LA1 = 0;
   591  00FE46  9289               	bcf	3977,1,c	;volatile
   592  00FE48  9089               	bcf	3977,0,c	;volatile
   593  00FE4A  908D               	bcf	3981,0,c	;volatile
   594  00FE4C  9A89               	bcf	3977,5,c	;volatile
   595                           
   596                           ;main.c: 179: return;
   597  00FE4E  0012               	return	
   598  00FE50                     l93:
   599                           
   600                           ;main.c: 180: }
   601                           ;main.c: 181: LATAbits.LA7 = LATAbits.LA6 = LATCbits.LC2 = 1;
   602  00FE50  848B               	bsf	3979,2,c	;volatile
   603  00FE52  8C89               	bsf	3977,6,c	;volatile
   604  00FE54  8E89               	bsf	3977,7,c	;volatile
   605                           
   606                           ;main.c: 182: LATCbits.LC0 = LATCbits.LC1 = LATEbits.LE1 = LATEbits.LE2 = 0;
   607  00FE56  948D               	bcf	3981,2,c	;volatile
   608  00FE58  928D               	bcf	3981,1,c	;volatile
   609  00FE5A  928B               	bcf	3979,1,c	;volatile
   610  00FE5C  908B               	bcf	3979,0,c	;volatile
   611                           
   612                           ;main.c: 183: break;
   613  00FE5E  0012               	return	
   614  00FE60                     l802:
   615                           
   616                           ;main.c: 185: if (segment == 1) {
   617  00FE60  0401               	decf	dispSeg@segment,w,c
   618  00FE62  A4D8               	btfss	status,2,c
   619  00FE64  D008               	goto	l95
   620                           
   621                           ;main.c: 186: LATAbits.LA2 = LATAbits.LA3 = LATAbits.LA4 = LATAbits.LA5 = LATEbits.LE0 =
      +                           LATAbits.LA0 = LATAbits.LA1 = 1;
   622  00FE66  8289               	bsf	3977,1,c	;volatile
   623  00FE68  8089               	bsf	3977,0,c	;volatile
   624  00FE6A  808D               	bsf	3981,0,c	;volatile
   625  00FE6C  8A89               	bsf	3977,5,c	;volatile
   626  00FE6E  8889               	bsf	3977,4,c	;volatile
   627  00FE70  8689               	bsf	3977,3,c	;volatile
   628  00FE72  8489               	bsf	3977,2,c	;volatile
   629                           
   630                           ;main.c: 187: return;
   631  00FE74  0012               	return	
   632  00FE76                     l95:
   633                           
   634                           ;main.c: 188: }
   635                           ;main.c: 189: LATAbits.LA7 = LATAbits.LA6 = LATCbits.LC2 = LATCbits.LC0 = LATCbits.LC1 =
      +                           LATEbits.LE1 = LATEbits.LE2 = 1;
   636  00FE76  848D               	bsf	3981,2,c	;volatile
   637  00FE78  828D               	bsf	3981,1,c	;volatile
   638  00FE7A  828B               	bsf	3979,1,c	;volatile
   639  00FE7C  808B               	bsf	3979,0,c	;volatile
   640  00FE7E  848B               	bsf	3979,2,c	;volatile
   641  00FE80  8C89               	bsf	3977,6,c	;volatile
   642  00FE82  8E89               	bsf	3977,7,c	;volatile
   643                           
   644                           ;main.c: 190: break;
   645  00FE84  0012               	return	
   646  00FE86                     l806:
   647                           
   648                           ;main.c: 192: if (segment == 1) {
   649  00FE86  0401               	decf	dispSeg@segment,w,c
   650  00FE88  A4D8               	btfss	status,2,c
   651  00FE8A  D008               	goto	l97
   652                           
   653                           ;main.c: 193: LATAbits.LA2 = LATAbits.LA3 = LATAbits.LA4 = LATAbits.LA5 = LATAbits.LA0 =
      +                           LATAbits.LA1 = 1;
   654  00FE8C  8289               	bsf	3977,1,c	;volatile
   655  00FE8E  8089               	bsf	3977,0,c	;volatile
   656  00FE90  8A89               	bsf	3977,5,c	;volatile
   657  00FE92  8889               	bsf	3977,4,c	;volatile
   658  00FE94  8689               	bsf	3977,3,c	;volatile
   659  00FE96  8489               	bsf	3977,2,c	;volatile
   660                           
   661                           ;main.c: 194: LATEbits.LE0 = 0;
   662  00FE98  908D               	bcf	3981,0,c	;volatile
   663                           
   664                           ;main.c: 195: return;
   665  00FE9A  0012               	return	
   666  00FE9C                     l97:
   667                           
   668                           ;main.c: 196: }
   669                           ;main.c: 197: LATAbits.LA7 = LATAbits.LA6 = LATCbits.LC2 = LATCbits.LC0 = LATEbits.LE1 =
      +                           LATEbits.LE2 = 1;
   670  00FE9C  848D               	bsf	3981,2,c	;volatile
   671  00FE9E  828D               	bsf	3981,1,c	;volatile
   672  00FEA0  808B               	bsf	3979,0,c	;volatile
   673  00FEA2  848B               	bsf	3979,2,c	;volatile
   674  00FEA4  8C89               	bsf	3977,6,c	;volatile
   675  00FEA6  8E89               	bsf	3977,7,c	;volatile
   676                           
   677                           ;main.c: 198: LATCbits.LC1 = 0;
   678  00FEA8  928B               	bcf	3979,1,c	;volatile
   679                           
   680                           ;main.c: 199: break;
   681  00FEAA  0012               	return	
   682  00FEAC                     l810:
   683                           
   684                           ;main.c: 201: if (segment == 1) {
   685  00FEAC  0401               	decf	dispSeg@segment,w,c
   686  00FEAE  A4D8               	btfss	status,2,c
   687  00FEB0  D008               	goto	l99
   688                           
   689                           ;main.c: 202: LATAbits.LA2 = LATAbits.LA3 = LATAbits.LA4 = LATEbits.LE0 = LATAbits.LA0 =
      +                           LATAbits.LA1 = 1;
   690  00FEB2  8289               	bsf	3977,1,c	;volatile
   691  00FEB4  8089               	bsf	3977,0,c	;volatile
   692  00FEB6  808D               	bsf	3981,0,c	;volatile
   693  00FEB8  8889               	bsf	3977,4,c	;volatile
   694  00FEBA  8689               	bsf	3977,3,c	;volatile
   695  00FEBC  8489               	bsf	3977,2,c	;volatile
   696                           
   697                           ;main.c: 203: LATAbits.LA5 = 0;
   698  00FEBE  9A89               	bcf	3977,5,c	;volatile
   699                           
   700                           ;main.c: 204: return;
   701  00FEC0  0012               	return	
   702  00FEC2                     l99:
   703                           
   704                           ;main.c: 205: }
   705                           ;main.c: 206: LATAbits.LA7 = LATAbits.LA6 = LATCbits.LC2 = LATCbits.LC1 = LATEbits.LE1 =
      +                           LATEbits.LE2 = 1;
   706  00FEC2  848D               	bsf	3981,2,c	;volatile
   707  00FEC4  828D               	bsf	3981,1,c	;volatile
   708  00FEC6  828B               	bsf	3979,1,c	;volatile
   709  00FEC8  848B               	bsf	3979,2,c	;volatile
   710  00FECA  8C89               	bsf	3977,6,c	;volatile
   711  00FECC  8E89               	bsf	3977,7,c	;volatile
   712                           
   713                           ;main.c: 207: LATCbits.LC0 = 0;
   714  00FECE  908B               	bcf	3979,0,c	;volatile
   715                           
   716                           ;main.c: 208: break;
   717  00FED0  0012               	return	
   718  00FED2                     l814:
   719                           
   720                           ;main.c: 210: if (segment == 1) {
   721  00FED2  0401               	decf	dispSeg@segment,w,c
   722  00FED4  A4D8               	btfss	status,2,c
   723  00FED6  D008               	goto	l101
   724                           
   725                           ;main.c: 211: LATAbits.LA4 = LATAbits.LA5 = LATEbits.LE0 = LATAbits.LA0 = LATAbits.LA1 =
      +                           1;
   726  00FED8  8289               	bsf	3977,1,c	;volatile
   727  00FEDA  8089               	bsf	3977,0,c	;volatile
   728  00FEDC  808D               	bsf	3981,0,c	;volatile
   729  00FEDE  8A89               	bsf	3977,5,c	;volatile
   730  00FEE0  8889               	bsf	3977,4,c	;volatile
   731                           
   732                           ;main.c: 212: LATAbits.LA2 = LATAbits.LA3 = 0;
   733  00FEE2  9689               	bcf	3977,3,c	;volatile
   734  00FEE4  9489               	bcf	3977,2,c	;volatile
   735                           
   736                           ;main.c: 213: return;
   737  00FEE6  0012               	return	
   738  00FEE8                     l101:
   739                           
   740                           ;main.c: 214: }
   741                           ;main.c: 215: LATCbits.LC2 = LATCbits.LC0 = LATCbits.LC1 = LATEbits.LE1 = LATEbits.LE2 =
      +                           1;
   742  00FEE8  848D               	bsf	3981,2,c	;volatile
   743  00FEEA  828D               	bsf	3981,1,c	;volatile
   744  00FEEC  828B               	bsf	3979,1,c	;volatile
   745  00FEEE  808B               	bsf	3979,0,c	;volatile
   746  00FEF0  848B               	bsf	3979,2,c	;volatile
   747                           
   748                           ;main.c: 216: LATAbits.LA7 = LATAbits.LA6 = 0;
   749  00FEF2  9C89               	bcf	3977,6,c	;volatile
   750  00FEF4  9E89               	bcf	3977,7,c	;volatile
   751                           
   752                           ;main.c: 217: break;
   753  00FEF6  0012               	return	
   754  00FEF8                     l818:
   755                           
   756                           ;main.c: 219: if (segment == 1) {
   757  00FEF8  0401               	decf	dispSeg@segment,w,c
   758  00FEFA  A4D8               	btfss	status,2,c
   759  00FEFC  D008               	goto	l103
   760                           
   761                           ;main.c: 220: LATAbits.LA2 = LATAbits.LA5 = LATEbits.LE0 = LATAbits.LA0 = 1;
   762  00FEFE  8089               	bsf	3977,0,c	;volatile
   763  00FF00  808D               	bsf	3981,0,c	;volatile
   764  00FF02  8A89               	bsf	3977,5,c	;volatile
   765  00FF04  8489               	bsf	3977,2,c	;volatile
   766                           
   767                           ;main.c: 221: LATAbits.LA3 = LATAbits.LA4 = LATAbits.LA1 = 0;
   768  00FF06  9289               	bcf	3977,1,c	;volatile
   769  00FF08  9889               	bcf	3977,4,c	;volatile
   770  00FF0A  9689               	bcf	3977,3,c	;volatile
   771                           
   772                           ;main.c: 222: return;
   773  00FF0C  0012               	return	
   774  00FF0E                     l103:
   775                           
   776                           ;main.c: 223: }
   777                           ;main.c: 224: LATAbits.LA7 = LATCbits.LC0 = LATCbits.LC1 = LATEbits.LE1 = 1;
   778  00FF0E  828D               	bsf	3981,1,c	;volatile
   779  00FF10  828B               	bsf	3979,1,c	;volatile
   780  00FF12  808B               	bsf	3979,0,c	;volatile
   781  00FF14  8E89               	bsf	3977,7,c	;volatile
   782                           
   783                           ;main.c: 225: LATAbits.LA6 = LATCbits.LC2 = LATEbits.LE2 = 0;
   784  00FF16  948D               	bcf	3981,2,c	;volatile
   785  00FF18  948B               	bcf	3979,2,c	;volatile
   786  00FF1A  9C89               	bcf	3977,6,c	;volatile
   787                           
   788                           ;main.c: 226: break;
   789  00FF1C  0012               	return	
   790  00FF1E                     l822:
   791                           
   792                           ;main.c: 228: if (segment == 1) {
   793  00FF1E  0401               	decf	dispSeg@segment,w,c
   794  00FF20  A4D8               	btfss	status,2,c
   795  00FF22  D008               	goto	l105
   796                           
   797                           ;main.c: 229: LATAbits.LA3 = LATAbits.LA4 = LATAbits.LA5 = LATEbits.LE0 = LATAbits.LA1 =
      +                           1;
   798  00FF24  8289               	bsf	3977,1,c	;volatile
   799  00FF26  808D               	bsf	3981,0,c	;volatile
   800  00FF28  8A89               	bsf	3977,5,c	;volatile
   801  00FF2A  8889               	bsf	3977,4,c	;volatile
   802  00FF2C  8689               	bsf	3977,3,c	;volatile
   803                           
   804                           ;main.c: 230: LATAbits.LA2 = LATAbits.LA0 = 0;
   805  00FF2E  9089               	bcf	3977,0,c	;volatile
   806  00FF30  9489               	bcf	3977,2,c	;volatile
   807                           
   808                           ;main.c: 231: return;
   809  00FF32  0012               	return	
   810  00FF34                     l105:
   811                           
   812                           ;main.c: 232: }
   813                           ;main.c: 233: LATAbits.LA6 = LATCbits.LC2 = LATCbits.LC0 = LATCbits.LC1 = LATEbits.LE2 =
      +                           1;
   814  00FF34  848D               	bsf	3981,2,c	;volatile
   815  00FF36  828B               	bsf	3979,1,c	;volatile
   816  00FF38  808B               	bsf	3979,0,c	;volatile
   817  00FF3A  848B               	bsf	3979,2,c	;volatile
   818  00FF3C  8C89               	bsf	3977,6,c	;volatile
   819                           
   820                           ;main.c: 234: LATAbits.LA7 = LATEbits.LE1 = 0;
   821  00FF3E  928D               	bcf	3981,1,c	;volatile
   822  00FF40  9E89               	bcf	3977,7,c	;volatile
   823                           
   824                           ;main.c: 235: break;
   825  00FF42  0012               	return	
   826  00FF44                     l826:
   827                           
   828                           ;main.c: 237: if (segment == 1) {
   829  00FF44  0401               	decf	dispSeg@segment,w,c
   830  00FF46  A4D8               	btfss	status,2,c
   831  00FF48  D008               	goto	l107
   832                           
   833                           ;main.c: 238: LATAbits.LA2 = LATAbits.LA5 = LATEbits.LE0 = LATAbits.LA0 = LATAbits.LA1 =
      +                           1;
   834  00FF4A  8289               	bsf	3977,1,c	;volatile
   835  00FF4C  8089               	bsf	3977,0,c	;volatile
   836  00FF4E  808D               	bsf	3981,0,c	;volatile
   837  00FF50  8A89               	bsf	3977,5,c	;volatile
   838  00FF52  8489               	bsf	3977,2,c	;volatile
   839                           
   840                           ;main.c: 239: LATAbits.LA3 = LATAbits.LA4 = 0;
   841  00FF54  9889               	bcf	3977,4,c	;volatile
   842  00FF56  9689               	bcf	3977,3,c	;volatile
   843                           
   844                           ;main.c: 240: return;
   845  00FF58  0012               	return	
   846  00FF5A                     l107:
   847                           
   848                           ;main.c: 241: }
   849                           ;main.c: 242: LATAbits.LA7 = LATCbits.LC0 = LATCbits.LC1 = LATEbits.LE1 = LATEbits.LE2 =
      +                           1;
   850  00FF5A  848D               	bsf	3981,2,c	;volatile
   851  00FF5C  828D               	bsf	3981,1,c	;volatile
   852  00FF5E  828B               	bsf	3979,1,c	;volatile
   853  00FF60  808B               	bsf	3979,0,c	;volatile
   854  00FF62  8E89               	bsf	3977,7,c	;volatile
   855                           
   856                           ;main.c: 243: LATAbits.LA6 = LATCbits.LC2 = 0;
   857  00FF64  948B               	bcf	3979,2,c	;volatile
   858  00FF66  9C89               	bcf	3977,6,c	;volatile
   859                           
   860                           ;main.c: 244: break;
   861  00FF68  0012               	return	
   862  00FF6A                     l830:
   863                           
   864                           ;main.c: 246: if (segment == 1) {
   865  00FF6A  0401               	decf	dispSeg@segment,w,c
   866  00FF6C  A4D8               	btfss	status,2,c
   867  00FF6E  D008               	goto	l109
   868                           
   869                           ;main.c: 247: LATAbits.LA2 = LATEbits.LE0 = LATAbits.LA0 = LATAbits.LA1 = 1;
   870  00FF70  8289               	bsf	3977,1,c	;volatile
   871  00FF72  8089               	bsf	3977,0,c	;volatile
   872  00FF74  808D               	bsf	3981,0,c	;volatile
   873  00FF76  8489               	bsf	3977,2,c	;volatile
   874                           
   875                           ;main.c: 248: LATAbits.LA3 = LATAbits.LA4 = LATAbits.LA5 = 0;
   876  00FF78  9A89               	bcf	3977,5,c	;volatile
   877  00FF7A  9889               	bcf	3977,4,c	;volatile
   878  00FF7C  9689               	bcf	3977,3,c	;volatile
   879                           
   880                           ;main.c: 249: return;
   881  00FF7E  0012               	return	
   882  00FF80                     l109:
   883                           
   884                           ;main.c: 250: }
   885                           ;main.c: 251: LATAbits.LA7 = LATCbits.LC1 = LATEbits.LE1 = LATEbits.LE2 = 1;
   886  00FF80  848D               	bsf	3981,2,c	;volatile
   887  00FF82  828D               	bsf	3981,1,c	;volatile
   888  00FF84  828B               	bsf	3979,1,c	;volatile
   889  00FF86  8E89               	bsf	3977,7,c	;volatile
   890                           
   891                           ;main.c: 252: LATAbits.LA6 = LATCbits.LC2 = LATCbits.LC0 = 0;
   892  00FF88  908B               	bcf	3979,0,c	;volatile
   893  00FF8A  948B               	bcf	3979,2,c	;volatile
   894  00FF8C  9C89               	bcf	3977,6,c	;volatile
   895                           
   896                           ;main.c: 253: break;
   897  00FF8E  0012               	return	
   898  00FF90                     l836:
   899  00FF90  5002               	movf	dispSeg@letter,w,c
   900                           
   901                           ; Switch size 1, requested type "space"
   902                           ; Number of cases is 18, Range of values is 45 to 120
   903                           ; switch strategies available:
   904                           ; Name         Instructions Cycles
   905                           ; simple_byte           55    28 (average)
   906                           ;	Chosen strategy is simple_byte
   907  00FF92  0A2D               	xorlw	45	; case 45
   908  00FF94  B4D8               	btfsc	status,2,c
   909  00FF96  D6BA               	goto	l766
   910  00FF98  0A1D               	xorlw	29	; case 48
   911  00FF9A  B4D8               	btfsc	status,2,c
   912  00FF9C  D6C9               	goto	l770
   913  00FF9E  0A01               	xorlw	1	; case 49
   914  00FFA0  B4D8               	btfsc	status,2,c
   915  00FFA2  D6D9               	goto	l774
   916  00FFA4  0A03               	xorlw	3	; case 50
   917  00FFA6  B4D8               	btfsc	status,2,c
   918  00FFA8  D6E9               	goto	l778
   919  00FFAA  0A01               	xorlw	1	; case 51
   920  00FFAC  B4D8               	btfsc	status,2,c
   921  00FFAE  D6F9               	goto	l782
   922  00FFB0  0A07               	xorlw	7	; case 52
   923  00FFB2  B4D8               	btfsc	status,2,c
   924  00FFB4  D709               	goto	l786
   925  00FFB6  0A01               	xorlw	1	; case 53
   926  00FFB8  B4D8               	btfsc	status,2,c
   927  00FFBA  D719               	goto	l790
   928  00FFBC  0A03               	xorlw	3	; case 54
   929  00FFBE  B4D8               	btfsc	status,2,c
   930  00FFC0  D729               	goto	l794
   931  00FFC2  0A01               	xorlw	1	; case 55
   932  00FFC4  B4D8               	btfsc	status,2,c
   933  00FFC6  D739               	goto	l798
   934  00FFC8  0A0F               	xorlw	15	; case 56
   935  00FFCA  B4D8               	btfsc	status,2,c
   936  00FFCC  D749               	goto	l802
   937  00FFCE  0A01               	xorlw	1	; case 57
   938  00FFD0  B4D8               	btfsc	status,2,c
   939  00FFD2  D759               	goto	l806
   940  00FFD4  0A5B               	xorlw	91	; case 98
   941  00FFD6  B4D8               	btfsc	status,2,c
   942  00FFD8  D77C               	goto	l814
   943  00FFDA  0A01               	xorlw	1	; case 99
   944  00FFDC  B4D8               	btfsc	status,2,c
   945  00FFDE  D78C               	goto	l818
   946  00FFE0  0A07               	xorlw	7	; case 100
   947  00FFE2  B4D8               	btfsc	status,2,c
   948  00FFE4  D79C               	goto	l822
   949  00FFE6  0A01               	xorlw	1	; case 101
   950  00FFE8  B4D8               	btfsc	status,2,c
   951  00FFEA  D7AC               	goto	l826
   952  00FFEC  0A03               	xorlw	3	; case 102
   953  00FFEE  B4D8               	btfsc	status,2,c
   954  00FFF0  D7BC               	goto	l830
   955  00FFF2  0A0D               	xorlw	13	; case 107
   956  00FFF4  B4D8               	btfsc	status,2,c
   957  00FFF6  D75A               	goto	l810
   958  00FFF8  0A13               	xorlw	19	; case 120
   959  00FFFA  A4D8               	btfss	status,2,c
   960  00FFFC  0012               	return	
   961  00FFFE  D674               	goto	l762
   962  010000                     __end_of_dispSeg:
   963                           	opt stack 0
   964                           tblptru	equ	0xFF8
   965                           status	equ	0xFD8
   966                           
   967 ;; *************** function _enableSerialRX *****************
   968 ;; Defined at:
   969 ;;		line 317 in file "source/main.c"
   970 ;; Parameters:    Size  Location     Type
   971 ;;  baudRate        2    0[COMRAM] unsigned int 
   972 ;; Auto vars:     Size  Location     Type
   973 ;;		None
   974 ;; Return value:  Size  Location     Type
   975 ;;		None               void
   976 ;; Registers used:
   977 ;;		wreg, status,2, status,0
   978 ;; Tracked objects:
   979 ;;		On entry : 0/0
   980 ;;		On exit  : 0/0
   981 ;;		Unchanged: 0/0
   982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   983 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   985 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   986 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   987 ;;Total ram usage:        4 bytes
   988 ;; Hardware stack levels used:    1
   989 ;; This function calls:
   990 ;;		Nothing
   991 ;; This function is called by:
   992 ;;		_main
   993 ;; This function uses a non-reentrant model
   994 ;;
   995                           
   996                           	psect	text2
   997  00FC64                     __ptext2:
   998                           	opt stack 0
   999  00FC64                     _enableSerialRX:
  1000                           	opt stack 30
  1001                           
  1002                           ;main.c: 318: LATDbits.LD3 = 1;
  1003                           
  1004                           ;incstack = 0
  1005                           ;incstack = 0
  1006  00FC64  868C               	bsf	3980,3,c	;volatile
  1007                           
  1008                           ;main.c: 321: switch (baudRate) {
  1009  00FC66  D00B               	goto	l738
  1010  00FC68                     l726:
  1011                           
  1012                           ;main.c: 323: SPBRG2 = 207;
  1013  00FC68  0ECF               	movlw	207
  1014  00FC6A  D007               	goto	L4
  1015  00FC6C                     l728:
  1016                           
  1017                           ;main.c: 326: SPBRG2 = 103;
  1018  00FC6C  0E67               	movlw	103
  1019  00FC6E  D005               	goto	L4
  1020  00FC70                     l730:
  1021                           
  1022                           ;main.c: 329: SPBRG2 = 25;
  1023  00FC70  0E19               	movlw	25
  1024  00FC72  D003               	goto	L4
  1025  00FC74                     l732:
  1026                           
  1027                           ;main.c: 332: SPBRG2 = 23;
  1028  00FC74  0E17               	movlw	23
  1029  00FC76  D001               	goto	L4
  1030  00FC78                     l734:
  1031                           
  1032                           ;main.c: 335: SPBRG2 = 12;
  1033  00FC78  0E0C               	movlw	12
  1034  00FC7A                     L4:
  1035  00FC7A  6E75               	movwf	3957,c	;volatile
  1036                           
  1037                           ;main.c: 336: break;
  1038  00FC7C  D02D               	goto	l117
  1039  00FC7E                     l738:
  1040  00FC7E  C001  F003         	movff	enableSerialRX@baudRate,??_enableSerialRX
  1041  00FC82  C002  F004         	movff	enableSerialRX@baudRate+1,??_enableSerialRX+1
  1042                           
  1043                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 5 sub-sw
      +                          itches
  1044                           ; Switch size 1, requested type "space"
  1045                           ; Number of cases is 5, Range of values is 4 to 75
  1046                           ; switch strategies available:
  1047                           ; Name         Instructions Cycles
  1048                           ; simple_byte           16     9 (average)
  1049                           ;	Chosen strategy is simple_byte
  1050  00FC86  5004               	movf	??_enableSerialRX+1,w,c
  1051  00FC88  0A04               	xorlw	4	; case 4
  1052  00FC8A  B4D8               	btfsc	status,2,c
  1053  00FC8C  D00D               	goto	l1032
  1054  00FC8E  0A0D               	xorlw	13	; case 9
  1055  00FC90  B4D8               	btfsc	status,2,c
  1056  00FC92  D00F               	goto	l1034
  1057  00FC94  0A2C               	xorlw	44	; case 37
  1058  00FC96  B4D8               	btfsc	status,2,c
  1059  00FC98  D011               	goto	l1036
  1060  00FC9A  0A0D               	xorlw	13	; case 40
  1061  00FC9C  B4D8               	btfsc	status,2,c
  1062  00FC9E  D013               	goto	l1038
  1063  00FCA0  0A63               	xorlw	99	; case 75
  1064  00FCA2  B4D8               	btfsc	status,2,c
  1065  00FCA4  D015               	goto	l1040
  1066  00FCA6  D018               	goto	l117
  1067  00FCA8                     l1032:
  1068                           
  1069                           ; Switch size 1, requested type "space"
  1070                           ; Number of cases is 1, Range of values is 176 to 176
  1071                           ; switch strategies available:
  1072                           ; Name         Instructions Cycles
  1073                           ; simple_byte            4     3 (average)
  1074                           ;	Chosen strategy is simple_byte
  1075  00FCA8  5003               	movf	??_enableSerialRX,w,c
  1076  00FCAA  0AB0               	xorlw	176	; case 176
  1077  00FCAC  B4D8               	btfsc	status,2,c
  1078  00FCAE  D7DC               	goto	l726
  1079  00FCB0  D013               	goto	l117
  1080  00FCB2                     l1034:
  1081                           
  1082                           ; Switch size 1, requested type "space"
  1083                           ; Number of cases is 1, Range of values is 96 to 96
  1084                           ; switch strategies available:
  1085                           ; Name         Instructions Cycles
  1086                           ; simple_byte            4     3 (average)
  1087                           ;	Chosen strategy is simple_byte
  1088  00FCB2  5003               	movf	??_enableSerialRX,w,c
  1089  00FCB4  0A60               	xorlw	96	; case 96
  1090  00FCB6  B4D8               	btfsc	status,2,c
  1091  00FCB8  D7D9               	goto	l728
  1092  00FCBA  D00E               	goto	l117
  1093  00FCBC                     l1036:
  1094                           
  1095                           ; Switch size 1, requested type "space"
  1096                           ; Number of cases is 1, Range of values is 128 to 128
  1097                           ; switch strategies available:
  1098                           ; Name         Instructions Cycles
  1099                           ; simple_byte            4     3 (average)
  1100                           ;	Chosen strategy is simple_byte
  1101  00FCBC  5003               	movf	??_enableSerialRX,w,c
  1102  00FCBE  0A80               	xorlw	128	; case 128
  1103  00FCC0  B4D8               	btfsc	status,2,c
  1104  00FCC2  D7D6               	goto	l730
  1105  00FCC4  D009               	goto	l117
  1106  00FCC6                     l1038:
  1107                           
  1108                           ; Switch size 1, requested type "space"
  1109                           ; Number of cases is 1, Range of values is 177 to 177
  1110                           ; switch strategies available:
  1111                           ; Name         Instructions Cycles
  1112                           ; simple_byte            4     3 (average)
  1113                           ;	Chosen strategy is simple_byte
  1114  00FCC6  5003               	movf	??_enableSerialRX,w,c
  1115  00FCC8  0AB1               	xorlw	177	; case 177
  1116  00FCCA  B4D8               	btfsc	status,2,c
  1117  00FCCC  D7D3               	goto	l732
  1118  00FCCE  D004               	goto	l117
  1119  00FCD0                     l1040:
  1120                           
  1121                           ; Switch size 1, requested type "space"
  1122                           ; Number of cases is 1, Range of values is 0 to 0
  1123                           ; switch strategies available:
  1124                           ; Name         Instructions Cycles
  1125                           ; simple_byte            4     3 (average)
  1126                           ;	Chosen strategy is simple_byte
  1127  00FCD0  5003               	movf	??_enableSerialRX,w,c
  1128  00FCD2  0A00               	xorlw	0	; case 0
  1129  00FCD4  B4D8               	btfsc	status,2,c
  1130  00FCD6  D7D0               	goto	l734
  1131  00FCD8                     l117:
  1132                           
  1133                           ;main.c: 339: TXSTA2bits.BRGH = 0;
  1134  00FCD8  9472               	bcf	3954,2,c	;volatile
  1135                           
  1136                           ;main.c: 340: BAUDCON2bits.BRG16 = 0;
  1137  00FCDA  9670               	bcf	3952,3,c	;volatile
  1138                           
  1139                           ;main.c: 342: RCSTA2bits.CREN = 1;
  1140  00FCDC  8871               	bsf	3953,4,c	;volatile
  1141                           
  1142                           ;main.c: 343: TXSTA2bits.SYNC = 0;
  1143  00FCDE  9872               	bcf	3954,4,c	;volatile
  1144                           
  1145                           ;main.c: 344: RCSTA2bits.SPEN = 1;
  1146  00FCE0  8E71               	bsf	3953,7,c	;volatile
  1147                           
  1148                           ;main.c: 345: BAUDCON2bits.DTRXP = 1;
  1149  00FCE2  8A70               	bsf	3952,5,c	;volatile
  1150  00FCE4  0012               	return	
  1151  00FCE6                     __end_of_enableSerialRX:
  1152                           	opt stack 0
  1153                           tblptru	equ	0xFF8
  1154                           status	equ	0xFD8
  1155                           
  1156 ;; *************** function _initPorts *****************
  1157 ;; Defined at:
  1158 ;;		line 59 in file "source/main.c"
  1159 ;; Parameters:    Size  Location     Type
  1160 ;;		None
  1161 ;; Auto vars:     Size  Location     Type
  1162 ;;		None
  1163 ;; Return value:  Size  Location     Type
  1164 ;;		None               void
  1165 ;; Registers used:
  1166 ;;		wreg, status,2
  1167 ;; Tracked objects:
  1168 ;;		On entry : 0/0
  1169 ;;		On exit  : 0/0
  1170 ;;		Unchanged: 0/0
  1171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1176 ;;Total ram usage:        0 bytes
  1177 ;; Hardware stack levels used:    1
  1178 ;; This function calls:
  1179 ;;		Nothing
  1180 ;; This function is called by:
  1181 ;;		_main
  1182 ;; This function uses a non-reentrant model
  1183 ;;
  1184                           
  1185                           	psect	text3
  1186  00FBD6                     __ptext3:
  1187                           	opt stack 0
  1188  00FBD6                     _initPorts:
  1189                           	opt stack 30
  1190                           
  1191                           ;main.c: 60: TRISA = 0;
  1192                           
  1193                           ;incstack = 0
  1194                           ;incstack = 0
  1195  00FBD6  0E00               	movlw	0
  1196  00FBD8  6E92               	movwf	3986,c	;volatile
  1197                           
  1198                           ;main.c: 61: TRISC = 0;
  1199  00FBDA  0E00               	movlw	0
  1200  00FBDC  6E94               	movwf	3988,c	;volatile
  1201                           
  1202                           ;main.c: 62: TRISE = 0;
  1203  00FBDE  0E00               	movlw	0
  1204  00FBE0  6E96               	movwf	3990,c	;volatile
  1205                           
  1206                           ;main.c: 64: ANSELD = 0;
  1207  00FBE2  0E00               	movlw	0
  1208  00FBE4  010F               	movlb	15	; () banked
  1209  00FBE6  010F               	movlb	15	; () banked
  1210  00FBE8  6F3B               	movwf	59,b	;volatile
  1211                           
  1212                           ; BSR set to: 15
  1213                           ;main.c: 65: TRISDbits.RD3 = 0;
  1214  00FBEA  9695               	bcf	3989,3,c	;volatile
  1215                           
  1216                           ; BSR set to: 15
  1217                           ;main.c: 66: TRISDbits.RD4 = 1;
  1218  00FBEC  8895               	bsf	3989,4,c	;volatile
  1219                           
  1220                           ; BSR set to: 15
  1221                           ;main.c: 67: TRISDbits.RD5 = 0;
  1222  00FBEE  9A95               	bcf	3989,5,c	;volatile
  1223                           
  1224                           ; BSR set to: 15
  1225                           ;main.c: 68: TRISDbits.RD6 = 0;
  1226  00FBF0  9C95               	bcf	3989,6,c	;volatile
  1227                           
  1228                           ; BSR set to: 15
  1229                           ;main.c: 69: TRISDbits.RD7 = 1;
  1230  00FBF2  8E95               	bsf	3989,7,c	;volatile
  1231                           
  1232                           ;main.c: 71: LATA = 0;
  1233  00FBF4  0E00               	movlw	0
  1234  00FBF6  6E89               	movwf	3977,c	;volatile
  1235                           
  1236                           ;main.c: 72: LATC = 0;
  1237  00FBF8  0E00               	movlw	0
  1238  00FBFA  6E8B               	movwf	3979,c	;volatile
  1239                           
  1240                           ;main.c: 73: LATD = 0;
  1241  00FBFC  0E00               	movlw	0
  1242  00FBFE  6E8C               	movwf	3980,c	;volatile
  1243                           
  1244                           ;main.c: 74: LATE = 0;
  1245  00FC00  0E00               	movlw	0
  1246  00FC02  6E8D               	movwf	3981,c	;volatile
  1247                           
  1248                           ; BSR set to: 15
  1249  00FC04  0012               	return	
  1250  00FC06                     __end_of_initPorts:
  1251                           	opt stack 0
  1252  0000                     tblptru	equ	0xFF8
  1253                           status	equ	0xFD8
  1254                           tblptru	equ	0xFF8
  1255                           status	equ	0xFD8
  1256                           
  1257                           	psect	rparam
  1258  0000                     tblptru	equ	0xFF8
  1259                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      7      11
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_enableSerialRX

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     330
                                              4 COMRAM     3     3      0
                          _initPorts
                     _enableSerialRX
                            _dispSeg
 ---------------------------------------------------------------------------------
 (1) _dispSeg                                              2     0      2     285
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _enableSerialRX                                       4     2      2      15
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _initPorts                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initPorts
   _enableSerialRX
   _dispSeg

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      7       B       1       11.6%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       1       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       B      12        0.0%
DATA                 0      0       C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.21 build 54009 
Symbol Table                                                                                   Tue Feb 04 23:16:05 2014

                     l48 FC3E                       l81 FD6C                       l73 FCFC  
                     l91 FE2A                       l83 FD92                       l76 FD20  
                     l93 FE50                       l85 FDB8                       l78 FD46  
                     l95 FE76                       l87 FDDE                       l97 FE9C  
                     l89 FE04                       l99 FEC2             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
                    l101 FEE8                      l103 FF0E                      l105 FF34  
                    l107 FF5A                      l117 FCD8                      l109 FF80  
                    l730 FC70                      l810 FEAC                      l802 FE60  
                    l732 FC74                      l734 FC78                      l726 FC68  
                    l830 FF6A                      l822 FF1E                      l814 FED2  
                    l806 FE86                      l728 FC6C                      l738 FC7E  
                    l826 FF44                      l818 FEF8                      l770 FD30  
                    l762 FCE8                      l836 FF90                      l790 FDEE  
                    l782 FDA2                      l774 FD56                      l766 FD0C  
                    l794 FE14                      l786 FDC8                      l778 FD7C  
                    l798 FE3A             __CFG_CPB$OFF 000000             __CFG_CPD$OFF 000000  
             _TXSTA2bits 000F72             __CFG_LVP$OFF 000000                     l1040 FCD0  
                   l1032 FCA8                     l1034 FCB2                     l1036 FCBC  
                   l1038 FCC6                     _LATA 000F89                     _LATC 000F8B  
                   _LATD 000F8C                     _LATE 000F8D                     _main FC06  
          __CFG_BORV$190 000000                     start 0000            __CFG_IESO$OFF 000000  
           _BAUDCON2bits 000F70                    ?_main 0001                    _TRISA 000F92  
                  _TRISC 000F94                    _TRISE 000F96            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000  
         __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000  
         __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000          __end_of_dispSeg 0000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
         __CFG_EBTRB$OFF 000000       __CFG_MCLRE$EXTMCLR 000000           __CFG_BOREN$OFF 000000  
                  status 000FD8           __CFG_HFOFST$ON 000000          __initialization FBC4  
           __end_of_main FC64                   ??_main 0005            __activetblptr 000002  
         __CFG_PLLCFG$ON 000000                   _ANSELD 000F3B           __CFG_WDTEN$OFF 000000  
                 _RCREG2 000F74                   _SPBRG2 000F75           __CFG_XINST$OFF 000000  
         __CFG_STVREN$ON 000000                ??_dispSeg 0003                   tblptru 000FF8  
             __accesstop 0060  __end_of__initialization FBCC          __CFG_PBADEN$OFF 000000  
         __pcstackCOMRAM 0001       __size_of_initPorts 0030       __CFG_CCP2MX$PORTC1 000000  
__size_of_enableSerialRX 0082       __CFG_CCP3MX$PORTB5 000000        __CFG_PRICLKEN$OFF 000000  
        __CFG_PWRTEN$OFF 000000                  __Hparam 0000                  __Lparam 0000  
                __pcinit FBC4                  __ramtop 1000                  __ptext0 FC06  
                __ptext1 FCE6                  __ptext2 FC64                  __ptext3 FBD6  
                _dispSeg FCE6        __end_of_initPorts FC06     end_of_initialization FBCC  
          __Lmediumconst 0000                _TRISDbits 000F95           _enableSerialRX FC64  
    start_initialization FBC4         main@receivedByte 0007   __end_of_enableSerialRX FCE6  
            __pbssCOMRAM 0008          ?_enableSerialRX 0001   enableSerialRX@baudRate 0001  
               ?_dispSeg 0001                _initPorts FBD6                 _LATAbits 000F89  
               _LATCbits 000F8B                 _LATDbits 000F8C                 _LATEbits 000F8D  
               _PIR3bits 000FA4         __CFG_WDTPS$32768 000000               ?_initPorts 0001  
               __Hrparam 0000                 __Lrparam 0000        __CFG_P2BMX$PORTD2 000000  
       __size_of_dispSeg 031A            __size_of_main 005E              ??_initPorts 0001  
       ??_enableSerialRX 0003               _RCSTA2bits 000F71           dispSeg@segment 0001  
           wait_ms@timel 0008        __CFG_T3CMX$PORTC0 000000            dispSeg@letter 0002  
      __CFG_FOSC$INTIO67 000000  
