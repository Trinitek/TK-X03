

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Wed Mar 12 13:42:13 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    27                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    28  0000                     
    29                           	psect	idataBIGRAM
    30  001006                     __pidataBIGRAM:
    31                           	opt stack 0
    32                           
    33                           ;initializer for _virtualMemory
    34  001006  00                 	db	0
    35  001007  00                 	db	0
    36  001008  00                 	db	0
    37  001009  00                 	db	0
    38  00100A  00                 	db	0
    39  00100B  00                 	db	0
    40  00100C  00                 	db	0
    41  00100D  00                 	db	0
    42  00100E  00                 	db	0
    43  00100F  00                 	db	0
    44  001010  00                 	db	0
    45  001011  00                 	db	0
    46  001012  00                 	db	0
    47  001013  00                 	db	0
    48  001014  00                 	db	0
    49  001015  00                 	db	0
    50  001016  00                 	db	0
    51  001017  00                 	db	0
    52  001018  00                 	db	0
    53  001019  00                 	db	0
    54  00101A  00                 	db	0
    55  00101B  00                 	db	0
    56  00101C  00                 	db	0
    57  00101D  00                 	db	0
    58  00101E  00                 	db	0
    59  00101F  00                 	db	0
    60  001020  00                 	db	0
    61  001021  00                 	db	0
    62  001022  00                 	db	0
    63  001023  00                 	db	0
    64  001024  00                 	db	0
    65  001025  00                 	db	0
    66  001026  00                 	db	0
    67  001027  00                 	db	0
    68  001028  00                 	db	0
    69  001029  00                 	db	0
    70  00102A  00                 	db	0
    71  00102B  00                 	db	0
    72  00102C  00                 	db	0
    73  00102D  00                 	db	0
    74  00102E  00                 	db	0
    75  00102F  00                 	db	0
    76  001030  00                 	db	0
    77  001031  00                 	db	0
    78  001032  00                 	db	0
    79  001033  00                 	db	0
    80  001034  00                 	db	0
    81  001035  00                 	db	0
    82  001036  00                 	db	0
    83  001037  00                 	db	0
    84  001038  00                 	db	0
    85  001039  00                 	db	0
    86  00103A  00                 	db	0
    87  00103B  00                 	db	0
    88  00103C  00                 	db	0
    89  00103D  00                 	db	0
    90  00103E  00                 	db	0
    91  00103F  00                 	db	0
    92  001040  00                 	db	0
    93  001041  00                 	db	0
    94  001042  00                 	db	0
    95  001043  00                 	db	0
    96  001044  00                 	db	0
    97  001045  00                 	db	0
    98  001046  00                 	db	0
    99  001047  00                 	db	0
   100  001048  00                 	db	0
   101  001049  00                 	db	0
   102  00104A  00                 	db	0
   103  00104B  00                 	db	0
   104  00104C  00                 	db	0
   105  00104D  00                 	db	0
   106  00104E  00                 	db	0
   107  00104F  00                 	db	0
   108  001050  00                 	db	0
   109  001051  00                 	db	0
   110  001052  00                 	db	0
   111  001053  00                 	db	0
   112  001054  00                 	db	0
   113  001055  00                 	db	0
   114  001056  00                 	db	0
   115  001057  00                 	db	0
   116  001058  00                 	db	0
   117  001059  00                 	db	0
   118  00105A  00                 	db	0
   119  00105B  00                 	db	0
   120  00105C  00                 	db	0
   121  00105D  00                 	db	0
   122  00105E  00                 	db	0
   123  00105F  00                 	db	0
   124  001060  00                 	db	0
   125  001061  00                 	db	0
   126  001062  00                 	db	0
   127  001063  00                 	db	0
   128  001064  00                 	db	0
   129  001065  00                 	db	0
   130  001066  00                 	db	0
   131  001067  00                 	db	0
   132  001068  00                 	db	0
   133  001069  00                 	db	0
   134  00106A  00                 	db	0
   135  00106B  00                 	db	0
   136  00106C  00                 	db	0
   137  00106D  00                 	db	0
   138  00106E  00                 	db	0
   139  00106F  00                 	db	0
   140  001070  00                 	db	0
   141  001071  00                 	db	0
   142  001072  00                 	db	0
   143  001073  00                 	db	0
   144  001074  00                 	db	0
   145  001075  00                 	db	0
   146  001076  00                 	db	0
   147  001077  00                 	db	0
   148  001078  00                 	db	0
   149  001079  00                 	db	0
   150  00107A  00                 	db	0
   151  00107B  00                 	db	0
   152  00107C  00                 	db	0
   153  00107D  00                 	db	0
   154  00107E  00                 	db	0
   155  00107F  00                 	db	0
   156  001080  00                 	db	0
   157  001081  00                 	db	0
   158  001082  00                 	db	0
   159  001083  00                 	db	0
   160  001084  00                 	db	0
   161  001085  00                 	db	0
   162  001086  00                 	db	0
   163  001087  00                 	db	0
   164  001088  00                 	db	0
   165  001089  00                 	db	0
   166  00108A  00                 	db	0
   167  00108B  00                 	db	0
   168  00108C  00                 	db	0
   169  00108D  00                 	db	0
   170  00108E  00                 	db	0
   171  00108F  00                 	db	0
   172  001090  00                 	db	0
   173  001091  00                 	db	0
   174  001092  00                 	db	0
   175  001093  00                 	db	0
   176  001094  00                 	db	0
   177  001095  00                 	db	0
   178  001096  00                 	db	0
   179  001097  00                 	db	0
   180  001098  00                 	db	0
   181  001099  00                 	db	0
   182  00109A  00                 	db	0
   183  00109B  00                 	db	0
   184  00109C  00                 	db	0
   185  00109D  00                 	db	0
   186  00109E  00                 	db	0
   187  00109F  00                 	db	0
   188  0010A0  00                 	db	0
   189  0010A1  00                 	db	0
   190  0010A2  00                 	db	0
   191  0010A3  00                 	db	0
   192  0010A4  00                 	db	0
   193  0010A5  00                 	db	0
   194  0010A6  00                 	db	0
   195  0010A7  00                 	db	0
   196  0010A8  00                 	db	0
   197  0010A9  00                 	db	0
   198  0010AA  00                 	db	0
   199  0010AB  00                 	db	0
   200  0010AC  00                 	db	0
   201  0010AD  00                 	db	0
   202  0010AE  00                 	db	0
   203  0010AF  00                 	db	0
   204  0010B0  00                 	db	0
   205  0010B1  00                 	db	0
   206  0010B2  00                 	db	0
   207  0010B3  00                 	db	0
   208  0010B4  00                 	db	0
   209  0010B5  00                 	db	0
   210  0010B6  00                 	db	0
   211  0010B7  00                 	db	0
   212  0010B8  00                 	db	0
   213  0010B9  00                 	db	0
   214  0010BA  00                 	db	0
   215  0010BB  00                 	db	0
   216  0010BC  00                 	db	0
   217  0010BD  00                 	db	0
   218  0010BE  00                 	db	0
   219  0010BF  00                 	db	0
   220  0010C0  00                 	db	0
   221  0010C1  00                 	db	0
   222  0010C2  00                 	db	0
   223  0010C3  00                 	db	0
   224  0010C4  00                 	db	0
   225  0010C5  00                 	db	0
   226  0010C6  00                 	db	0
   227  0010C7  00                 	db	0
   228  0010C8  00                 	db	0
   229  0010C9  00                 	db	0
   230  0010CA  00                 	db	0
   231  0010CB  00                 	db	0
   232  0010CC  00                 	db	0
   233  0010CD  00                 	db	0
   234  0010CE  00                 	db	0
   235  0010CF  00                 	db	0
   236  0010D0  00                 	db	0
   237  0010D1  00                 	db	0
   238  0010D2  00                 	db	0
   239  0010D3  00                 	db	0
   240  0010D4  00                 	db	0
   241  0010D5  00                 	db	0
   242  0010D6  00                 	db	0
   243  0010D7  00                 	db	0
   244  0010D8  00                 	db	0
   245  0010D9  00                 	db	0
   246  0010DA  00                 	db	0
   247  0010DB  00                 	db	0
   248  0010DC  00                 	db	0
   249  0010DD  00                 	db	0
   250  0010DE  00                 	db	0
   251  0010DF  00                 	db	0
   252  0010E0  00                 	db	0
   253  0010E1  00                 	db	0
   254  0010E2  00                 	db	0
   255  0010E3  00                 	db	0
   256  0010E4  00                 	db	0
   257  0010E5  00                 	db	0
   258  0010E6  00                 	db	0
   259  0010E7  00                 	db	0
   260  0010E8  00                 	db	0
   261  0010E9  00                 	db	0
   262  0010EA  00                 	db	0
   263  0010EB  00                 	db	0
   264  0010EC  00                 	db	0
   265  0010ED  00                 	db	0
   266  0010EE  00                 	db	0
   267  0010EF  00                 	db	0
   268  0010F0  00                 	db	0
   269  0010F1  00                 	db	0
   270  0010F2  00                 	db	0
   271  0010F3  00                 	db	0
   272  0010F4  00                 	db	0
   273  0010F5  00                 	db	0
   274  0010F6  00                 	db	0
   275  0010F7  00                 	db	0
   276  0010F8  00                 	db	0
   277  0010F9  00                 	db	0
   278  0010FA  00                 	db	0
   279  0010FB  00                 	db	0
   280  0010FC  00                 	db	0
   281  0010FD  00                 	db	0
   282  0010FE  00                 	db	0
   283  0010FF  00                 	db	0
   284  001100  00                 	db	0
   285  001101  00                 	db	0
   286  001102  00                 	db	0
   287  001103  00                 	db	0
   288  001104  00                 	db	0
   289  001105  00                 	db	0
   290  001106  1B                 	db	27
   291  001107  38                 	db	56
   292  001108  06                 	db	6
   293  001109  03                 	db	3
   294  00110A  08                 	db	8
   295  00110B  00                 	db	0
   296  00110C  00                 	db	0
   297  00110D  00                 	db	0
   298  00110E  00                 	db	0
   299  00110F  00                 	db	0
   300  001110  00                 	db	0
   301  001111  00                 	db	0
   302  001112  00                 	db	0
   303  001113  00                 	db	0
   304  001114  00                 	db	0
   305  001115  00                 	db	0
   306  001116  00                 	db	0
   307  001117  00                 	db	0
   308  001118  00                 	db	0
   309  001119  00                 	db	0
   310  00111A  00                 	db	0
   311  00111B  00                 	db	0
   312  00111C  00                 	db	0
   313  00111D  00                 	db	0
   314  00111E  00                 	db	0
   315  00111F  00                 	db	0
   316  001120  00                 	db	0
   317  001121  00                 	db	0
   318  001122  00                 	db	0
   319  001123  00                 	db	0
   320  001124  00                 	db	0
   321  001125  00                 	db	0
   322  001126  00                 	db	0
   323  001127  00                 	db	0
   324  001128  00                 	db	0
   325  001129  00                 	db	0
   326  00112A  00                 	db	0
   327  00112B  00                 	db	0
   328  00112C  00                 	db	0
   329  00112D  00                 	db	0
   330  00112E  00                 	db	0
   331  00112F  00                 	db	0
   332  001130  00                 	db	0
   333  001131  00                 	db	0
   334  001132  00                 	db	0
   335  001133  00                 	db	0
   336  001134  00                 	db	0
   337  001135  00                 	db	0
   338  001136  00                 	db	0
   339  001137  00                 	db	0
   340  001138  00                 	db	0
   341  001139  00                 	db	0
   342  00113A  00                 	db	0
   343  00113B  00                 	db	0
   344  00113C  00                 	db	0
   345  00113D  00                 	db	0
   346  00113E  00                 	db	0
   347  00113F  00                 	db	0
   348  001140  00                 	db	0
   349  001141  00                 	db	0
   350  001142  00                 	db	0
   351  001143  00                 	db	0
   352  001144  00                 	db	0
   353  001145  00                 	db	0
   354  001146  00                 	db	0
   355  001147  00                 	db	0
   356  001148  00                 	db	0
   357  001149  00                 	db	0
   358  00114A  00                 	db	0
   359  00114B  00                 	db	0
   360  00114C  00                 	db	0
   361  00114D  00                 	db	0
   362  00114E  00                 	db	0
   363  00114F  00                 	db	0
   364  001150  00                 	db	0
   365  001151  00                 	db	0
   366  001152  00                 	db	0
   367  001153  00                 	db	0
   368  001154  00                 	db	0
   369  001155  00                 	db	0
   370  001156  00                 	db	0
   371  001157  00                 	db	0
   372  001158  00                 	db	0
   373  001159  00                 	db	0
   374  00115A  00                 	db	0
   375  00115B  00                 	db	0
   376  00115C  00                 	db	0
   377  00115D  00                 	db	0
   378  00115E  00                 	db	0
   379  00115F  00                 	db	0
   380  001160  00                 	db	0
   381  001161  00                 	db	0
   382  001162  00                 	db	0
   383  001163  00                 	db	0
   384  001164  00                 	db	0
   385  001165  00                 	db	0
   386  001166  00                 	db	0
   387  001167  00                 	db	0
   388  001168  00                 	db	0
   389  001169  00                 	db	0
   390  00116A  00                 	db	0
   391  00116B  00                 	db	0
   392  00116C  00                 	db	0
   393  00116D  00                 	db	0
   394  00116E  00                 	db	0
   395  00116F  00                 	db	0
   396  001170  00                 	db	0
   397  001171  00                 	db	0
   398  001172  00                 	db	0
   399  001173  00                 	db	0
   400  001174  00                 	db	0
   401  001175  00                 	db	0
   402  001176  00                 	db	0
   403  001177  00                 	db	0
   404  001178  00                 	db	0
   405  001179  00                 	db	0
   406  00117A  00                 	db	0
   407  00117B  00                 	db	0
   408  00117C  00                 	db	0
   409  00117D  00                 	db	0
   410  00117E  00                 	db	0
   411  00117F  00                 	db	0
   412  001180  00                 	db	0
   413  001181  00                 	db	0
   414  001182  00                 	db	0
   415  001183  00                 	db	0
   416  001184  00                 	db	0
   417  001185  00                 	db	0
   418  001186  00                 	db	0
   419  001187  00                 	db	0
   420  001188  00                 	db	0
   421  001189  00                 	db	0
   422  00118A  00                 	db	0
   423  00118B  00                 	db	0
   424  00118C  00                 	db	0
   425  00118D  00                 	db	0
   426  00118E  00                 	db	0
   427  00118F  00                 	db	0
   428  001190  00                 	db	0
   429  001191  00                 	db	0
   430  001192  00                 	db	0
   431  001193  00                 	db	0
   432  001194  00                 	db	0
   433  001195  00                 	db	0
   434  001196  00                 	db	0
   435  001197  00                 	db	0
   436  001198  00                 	db	0
   437  001199  00                 	db	0
   438  00119A  00                 	db	0
   439  00119B  00                 	db	0
   440  00119C  00                 	db	0
   441  00119D  00                 	db	0
   442  00119E  00                 	db	0
   443  00119F  00                 	db	0
   444  0011A0  00                 	db	0
   445  0011A1  00                 	db	0
   446  0011A2  00                 	db	0
   447  0011A3  00                 	db	0
   448  0011A4  00                 	db	0
   449  0011A5  00                 	db	0
   450  0011A6  00                 	db	0
   451  0011A7  00                 	db	0
   452  0011A8  00                 	db	0
   453  0011A9  00                 	db	0
   454  0011AA  00                 	db	0
   455  0011AB  00                 	db	0
   456  0011AC  00                 	db	0
   457  0011AD  00                 	db	0
   458  0011AE  00                 	db	0
   459  0011AF  00                 	db	0
   460  0011B0  00                 	db	0
   461  0011B1  00                 	db	0
   462  0011B2  00                 	db	0
   463  0011B3  00                 	db	0
   464  0011B4  00                 	db	0
   465  0011B5  00                 	db	0
   466  0011B6  00                 	db	0
   467  0011B7  00                 	db	0
   468  0011B8  00                 	db	0
   469  0011B9  00                 	db	0
   470  0011BA  00                 	db	0
   471  0011BB  00                 	db	0
   472  0011BC  00                 	db	0
   473  0011BD  00                 	db	0
   474  0011BE  00                 	db	0
   475  0011BF  00                 	db	0
   476  0011C0  00                 	db	0
   477  0011C1  00                 	db	0
   478  0011C2  00                 	db	0
   479  0011C3  00                 	db	0
   480  0011C4  00                 	db	0
   481  0011C5  00                 	db	0
   482  0011C6  00                 	db	0
   483  0011C7  00                 	db	0
   484  0011C8  00                 	db	0
   485  0011C9  00                 	db	0
   486  0011CA  00                 	db	0
   487  0011CB  00                 	db	0
   488  0011CC  00                 	db	0
   489  0011CD  00                 	db	0
   490  0011CE  00                 	db	0
   491  0011CF  00                 	db	0
   492  0011D0  00                 	db	0
   493  0011D1  00                 	db	0
   494  0011D2  00                 	db	0
   495  0011D3  00                 	db	0
   496  0011D4  00                 	db	0
   497  0011D5  00                 	db	0
   498  0011D6  00                 	db	0
   499  0011D7  00                 	db	0
   500  0011D8  00                 	db	0
   501  0011D9  00                 	db	0
   502  0011DA  00                 	db	0
   503  0011DB  00                 	db	0
   504  0011DC  00                 	db	0
   505  0011DD  00                 	db	0
   506  0011DE  00                 	db	0
   507  0011DF  00                 	db	0
   508  0011E0  00                 	db	0
   509  0011E1  00                 	db	0
   510  0011E2  00                 	db	0
   511  0011E3  00                 	db	0
   512  0011E4  00                 	db	0
   513  0011E5  00                 	db	0
   514  0011E6  00                 	db	0
   515  0011E7  00                 	db	0
   516  0011E8  00                 	db	0
   517  0011E9  00                 	db	0
   518  0011EA  00                 	db	0
   519  0011EB  00                 	db	0
   520  0011EC  00                 	db	0
   521  0011ED  00                 	db	0
   522  0011EE  00                 	db	0
   523  0011EF  00                 	db	0
   524  0011F0  00                 	db	0
   525  0011F1  00                 	db	0
   526  0011F2  00                 	db	0
   527  0011F3  00                 	db	0
   528  0011F4  00                 	db	0
   529  0011F5  00                 	db	0
   530  0011F6  00                 	db	0
   531  0011F7  00                 	db	0
   532  0011F8  00                 	db	0
   533  0011F9  00                 	db	0
   534  0011FA  00                 	db	0
   535  0011FB  00                 	db	0
   536  0011FC  00                 	db	0
   537  0011FD  00                 	db	0
   538  0011FE  00                 	db	0
   539  0011FF  00                 	db	0
   540  001200  00                 	db	0
   541  001201  00                 	db	0
   542  001202  00                 	db	0
   543  001203  00                 	db	0
   544  001204  00                 	db	0
   545  001205  00                 	db	0
   546  001206  00                 	db	0
   547  001207  00                 	db	0
   548  001208  00                 	db	0
   549  001209  00                 	db	0
   550  00120A  00                 	db	0
   551  00120B  00                 	db	0
   552  00120C  00                 	db	0
   553  00120D  00                 	db	0
   554  00120E  00                 	db	0
   555  00120F  00                 	db	0
   556  001210  00                 	db	0
   557  001211  00                 	db	0
   558  001212  00                 	db	0
   559  001213  00                 	db	0
   560  001214  00                 	db	0
   561  001215  00                 	db	0
   562  001216  00                 	db	0
   563  001217  00                 	db	0
   564  001218  00                 	db	0
   565  001219  00                 	db	0
   566  00121A  00                 	db	0
   567  00121B  00                 	db	0
   568  00121C  00                 	db	0
   569  00121D  00                 	db	0
   570  00121E  00                 	db	0
   571  00121F  00                 	db	0
   572  001220  00                 	db	0
   573  001221  00                 	db	0
   574  001222  00                 	db	0
   575  001223  00                 	db	0
   576  001224  00                 	db	0
   577  001225  00                 	db	0
   578  001226  00                 	db	0
   579  001227  00                 	db	0
   580  001228  00                 	db	0
   581  001229  00                 	db	0
   582  00122A  00                 	db	0
   583  00122B  00                 	db	0
   584  00122C  00                 	db	0
   585  00122D  00                 	db	0
   586  00122E  00                 	db	0
   587  00122F  00                 	db	0
   588  001230  00                 	db	0
   589  001231  00                 	db	0
   590  001232  00                 	db	0
   591  001233  00                 	db	0
   592  001234  00                 	db	0
   593  001235  00                 	db	0
   594  001236  00                 	db	0
   595  001237  00                 	db	0
   596  001238  00                 	db	0
   597  001239  00                 	db	0
   598  00123A  00                 	db	0
   599  00123B  00                 	db	0
   600  00123C  00                 	db	0
   601  00123D  00                 	db	0
   602  00123E  00                 	db	0
   603  00123F  00                 	db	0
   604  001240  00                 	db	0
   605  001241  00                 	db	0
   606  001242  00                 	db	0
   607  001243  00                 	db	0
   608  001244  00                 	db	0
   609  001245  00                 	db	0
   610  001246  00                 	db	0
   611  001247  00                 	db	0
   612  001248  00                 	db	0
   613  001249  00                 	db	0
   614  00124A  00                 	db	0
   615  00124B  00                 	db	0
   616  00124C  00                 	db	0
   617  00124D  00                 	db	0
   618  00124E  00                 	db	0
   619  00124F  00                 	db	0
   620  001250  00                 	db	0
   621  001251  00                 	db	0
   622  001252  00                 	db	0
   623  001253  00                 	db	0
   624  001254  00                 	db	0
   625  001255  00                 	db	0
   626  001256  00                 	db	0
   627  001257  00                 	db	0
   628  001258  00                 	db	0
   629  001259  00                 	db	0
   630  00125A  00                 	db	0
   631  00125B  00                 	db	0
   632  00125C  00                 	db	0
   633  00125D  00                 	db	0
   634  00125E  00                 	db	0
   635  00125F  00                 	db	0
   636  001260  00                 	db	0
   637  001261  00                 	db	0
   638  001262  00                 	db	0
   639  001263  00                 	db	0
   640  001264  00                 	db	0
   641  001265  00                 	db	0
   642  001266  00                 	db	0
   643  001267  00                 	db	0
   644  001268  00                 	db	0
   645  001269  00                 	db	0
   646  00126A  00                 	db	0
   647  00126B  00                 	db	0
   648  00126C  00                 	db	0
   649  00126D  00                 	db	0
   650  00126E  00                 	db	0
   651  00126F  00                 	db	0
   652  001270  00                 	db	0
   653  001271  00                 	db	0
   654  001272  00                 	db	0
   655  001273  00                 	db	0
   656  001274  00                 	db	0
   657  001275  00                 	db	0
   658  001276  00                 	db	0
   659  001277  00                 	db	0
   660  001278  00                 	db	0
   661  001279  00                 	db	0
   662  00127A  00                 	db	0
   663  00127B  00                 	db	0
   664  00127C  00                 	db	0
   665  00127D  00                 	db	0
   666  00127E  00                 	db	0
   667  00127F  00                 	db	0
   668  001280  00                 	db	0
   669  001281  00                 	db	0
   670  001282  00                 	db	0
   671  001283  00                 	db	0
   672  001284  00                 	db	0
   673  001285  00                 	db	0
   674  001286  00                 	db	0
   675  001287  00                 	db	0
   676  001288  00                 	db	0
   677  001289  00                 	db	0
   678  00128A  00                 	db	0
   679  00128B  00                 	db	0
   680  00128C  00                 	db	0
   681  00128D  00                 	db	0
   682  00128E  00                 	db	0
   683  00128F  00                 	db	0
   684  001290  00                 	db	0
   685  001291  00                 	db	0
   686  001292  00                 	db	0
   687  001293  00                 	db	0
   688  001294  00                 	db	0
   689  001295  00                 	db	0
   690  001296  00                 	db	0
   691  001297  00                 	db	0
   692  001298  00                 	db	0
   693  001299  00                 	db	0
   694  00129A  00                 	db	0
   695  00129B  00                 	db	0
   696  00129C  00                 	db	0
   697  00129D  00                 	db	0
   698  00129E  00                 	db	0
   699  00129F  00                 	db	0
   700  0012A0  00                 	db	0
   701  0012A1  00                 	db	0
   702  0012A2  00                 	db	0
   703  0012A3  00                 	db	0
   704  0012A4  00                 	db	0
   705  0012A5  00                 	db	0
   706  0012A6  00                 	db	0
   707  0012A7  00                 	db	0
   708  0012A8  00                 	db	0
   709  0012A9  00                 	db	0
   710  0012AA  00                 	db	0
   711  0012AB  00                 	db	0
   712  0012AC  00                 	db	0
   713  0012AD  00                 	db	0
   714  0012AE  00                 	db	0
   715  0012AF  00                 	db	0
   716  0012B0  00                 	db	0
   717  0012B1  00                 	db	0
   718  0012B2  00                 	db	0
   719  0012B3  00                 	db	0
   720  0012B4  00                 	db	0
   721  0012B5  00                 	db	0
   722  0012B6  00                 	db	0
   723  0012B7  00                 	db	0
   724  0012B8  00                 	db	0
   725  0012B9  00                 	db	0
   726  0012BA  00                 	db	0
   727  0012BB  00                 	db	0
   728  0012BC  00                 	db	0
   729  0012BD  00                 	db	0
   730  0012BE  00                 	db	0
   731  0012BF  00                 	db	0
   732  0012C0  00                 	db	0
   733  0012C1  00                 	db	0
   734  0012C2  00                 	db	0
   735  0012C3  00                 	db	0
   736  0012C4  00                 	db	0
   737  0012C5  00                 	db	0
   738  0012C6  00                 	db	0
   739  0012C7  00                 	db	0
   740  0012C8  00                 	db	0
   741  0012C9  00                 	db	0
   742  0012CA  00                 	db	0
   743  0012CB  00                 	db	0
   744  0012CC  00                 	db	0
   745  0012CD  00                 	db	0
   746  0012CE  00                 	db	0
   747  0012CF  00                 	db	0
   748  0012D0  00                 	db	0
   749  0012D1  00                 	db	0
   750  0012D2  00                 	db	0
   751  0012D3  00                 	db	0
   752  0012D4  00                 	db	0
   753  0012D5  00                 	db	0
   754  0012D6  00                 	db	0
   755  0012D7  00                 	db	0
   756  0012D8  00                 	db	0
   757  0012D9  00                 	db	0
   758  0012DA  00                 	db	0
   759  0012DB  00                 	db	0
   760  0012DC  00                 	db	0
   761  0012DD  00                 	db	0
   762  0012DE  00                 	db	0
   763  0012DF  00                 	db	0
   764  0012E0  00                 	db	0
   765  0012E1  00                 	db	0
   766  0012E2  00                 	db	0
   767  0012E3  00                 	db	0
   768  0012E4  00                 	db	0
   769  0012E5  00                 	db	0
   770  0012E6  00                 	db	0
   771  0012E7  00                 	db	0
   772  0012E8  00                 	db	0
   773  0012E9  00                 	db	0
   774  0012EA  00                 	db	0
   775  0012EB  00                 	db	0
   776  0012EC  00                 	db	0
   777  0012ED  00                 	db	0
   778  0012EE  00                 	db	0
   779  0012EF  00                 	db	0
   780  0012F0  00                 	db	0
   781  0012F1  00                 	db	0
   782  0012F2  00                 	db	0
   783  0012F3  00                 	db	0
   784  0012F4  00                 	db	0
   785  0012F5  00                 	db	0
   786  0012F6  00                 	db	0
   787  0012F7  00                 	db	0
   788  0012F8  00                 	db	0
   789  0012F9  00                 	db	0
   790  0012FA  00                 	db	0
   791  0012FB  00                 	db	0
   792  0012FC  00                 	db	0
   793  0012FD  00                 	db	0
   794  0012FE  00                 	db	0
   795  0012FF  00                 	db	0
   796  001300  00                 	db	0
   797  001301  00                 	db	0
   798  001302  00                 	db	0
   799  001303  00                 	db	0
   800  001304  00                 	db	0
   801  001305  00                 	db	0
   802  001306  00                 	db	0
   803  001307  00                 	db	0
   804  001308  00                 	db	0
   805  001309  00                 	db	0
   806  00130A  00                 	db	0
   807  00130B  00                 	db	0
   808  00130C  00                 	db	0
   809  00130D  00                 	db	0
   810  00130E  00                 	db	0
   811  00130F  00                 	db	0
   812  001310  00                 	db	0
   813  001311  00                 	db	0
   814  001312  00                 	db	0
   815  001313  00                 	db	0
   816  001314  00                 	db	0
   817  001315  00                 	db	0
   818  001316  00                 	db	0
   819  001317  00                 	db	0
   820  001318  00                 	db	0
   821  001319  00                 	db	0
   822  00131A  00                 	db	0
   823  00131B  00                 	db	0
   824  00131C  00                 	db	0
   825  00131D  00                 	db	0
   826  00131E  00                 	db	0
   827  00131F  00                 	db	0
   828  001320  00                 	db	0
   829  001321  00                 	db	0
   830  001322  00                 	db	0
   831  001323  00                 	db	0
   832  001324  00                 	db	0
   833  001325  00                 	db	0
   834  001326  00                 	db	0
   835  001327  00                 	db	0
   836  001328  00                 	db	0
   837  001329  00                 	db	0
   838  00132A  00                 	db	0
   839  00132B  00                 	db	0
   840  00132C  00                 	db	0
   841  00132D  00                 	db	0
   842  00132E  00                 	db	0
   843  00132F  00                 	db	0
   844  001330  00                 	db	0
   845  001331  00                 	db	0
   846  001332  00                 	db	0
   847  001333  00                 	db	0
   848  001334  00                 	db	0
   849  001335  00                 	db	0
   850  001336  00                 	db	0
   851  001337  00                 	db	0
   852  001338  00                 	db	0
   853  001339  00                 	db	0
   854  00133A  00                 	db	0
   855  00133B  00                 	db	0
   856  00133C  00                 	db	0
   857  00133D  00                 	db	0
   858  00133E  00                 	db	0
   859  00133F  00                 	db	0
   860  001340  00                 	db	0
   861  001341  00                 	db	0
   862  001342  00                 	db	0
   863  001343  00                 	db	0
   864  001344  00                 	db	0
   865  001345  00                 	db	0
   866  001346  00                 	db	0
   867  001347  00                 	db	0
   868  001348  00                 	db	0
   869  001349  00                 	db	0
   870  00134A  00                 	db	0
   871  00134B  00                 	db	0
   872  00134C  00                 	db	0
   873  00134D  00                 	db	0
   874  00134E  00                 	db	0
   875  00134F  00                 	db	0
   876  001350  00                 	db	0
   877  001351  00                 	db	0
   878  001352  00                 	db	0
   879  001353  00                 	db	0
   880  001354  00                 	db	0
   881  001355  00                 	db	0
   882  001356  00                 	db	0
   883  001357  00                 	db	0
   884  001358  00                 	db	0
   885  001359  00                 	db	0
   886  00135A  00                 	db	0
   887  00135B  00                 	db	0
   888  00135C  00                 	db	0
   889  00135D  00                 	db	0
   890  00135E  00                 	db	0
   891  00135F  00                 	db	0
   892  001360  00                 	db	0
   893  001361  00                 	db	0
   894  001362  00                 	db	0
   895  001363  00                 	db	0
   896  001364  00                 	db	0
   897  001365  00                 	db	0
   898  001366  00                 	db	0
   899  001367  00                 	db	0
   900  001368  00                 	db	0
   901  001369  00                 	db	0
   902  00136A  00                 	db	0
   903  00136B  00                 	db	0
   904  00136C  00                 	db	0
   905  00136D  00                 	db	0
   906  00136E  00                 	db	0
   907  00136F  00                 	db	0
   908  001370  00                 	db	0
   909  001371  00                 	db	0
   910  001372  00                 	db	0
   911  001373  00                 	db	0
   912  001374  00                 	db	0
   913  001375  00                 	db	0
   914  001376  00                 	db	0
   915  001377  00                 	db	0
   916  001378  00                 	db	0
   917  001379  00                 	db	0
   918  00137A  00                 	db	0
   919  00137B  00                 	db	0
   920  00137C  00                 	db	0
   921  00137D  00                 	db	0
   922  00137E  00                 	db	0
   923  00137F  00                 	db	0
   924  001380  00                 	db	0
   925  001381  00                 	db	0
   926  001382  00                 	db	0
   927  001383  00                 	db	0
   928  001384  00                 	db	0
   929  001385  00                 	db	0
   930  001386  00                 	db	0
   931  001387  00                 	db	0
   932  001388  00                 	db	0
   933  001389  00                 	db	0
   934  00138A  00                 	db	0
   935  00138B  00                 	db	0
   936  00138C  00                 	db	0
   937  00138D  00                 	db	0
   938  00138E  00                 	db	0
   939  00138F  00                 	db	0
   940  001390  00                 	db	0
   941  001391  00                 	db	0
   942  001392  00                 	db	0
   943  001393  00                 	db	0
   944  001394  00                 	db	0
   945  001395  00                 	db	0
   946  001396  00                 	db	0
   947  001397  00                 	db	0
   948  001398  00                 	db	0
   949  001399  00                 	db	0
   950  00139A  00                 	db	0
   951  00139B  00                 	db	0
   952  00139C  00                 	db	0
   953  00139D  00                 	db	0
   954  00139E  00                 	db	0
   955  00139F  00                 	db	0
   956  0013A0  00                 	db	0
   957  0013A1  00                 	db	0
   958  0013A2  00                 	db	0
   959  0013A3  00                 	db	0
   960  0013A4  00                 	db	0
   961  0013A5  00                 	db	0
   962  0013A6  00                 	db	0
   963  0013A7  00                 	db	0
   964  0013A8  00                 	db	0
   965  0013A9  00                 	db	0
   966  0013AA  00                 	db	0
   967  0013AB  00                 	db	0
   968  0013AC  00                 	db	0
   969  0013AD  00                 	db	0
   970  0013AE  00                 	db	0
   971  0013AF  00                 	db	0
   972  0013B0  00                 	db	0
   973  0013B1  00                 	db	0
   974  0013B2  00                 	db	0
   975  0013B3  00                 	db	0
   976  0013B4  00                 	db	0
   977  0013B5  00                 	db	0
   978  0013B6  00                 	db	0
   979  0013B7  00                 	db	0
   980  0013B8  00                 	db	0
   981  0013B9  00                 	db	0
   982  0013BA  00                 	db	0
   983  0013BB  00                 	db	0
   984  0013BC  00                 	db	0
   985  0013BD  00                 	db	0
   986  0013BE  00                 	db	0
   987  0013BF  00                 	db	0
   988  0013C0  00                 	db	0
   989  0013C1  00                 	db	0
   990  0013C2  00                 	db	0
   991  0013C3  00                 	db	0
   992  0013C4  00                 	db	0
   993  0013C5  00                 	db	0
   994  0013C6  00                 	db	0
   995  0013C7  00                 	db	0
   996  0013C8  00                 	db	0
   997  0013C9  00                 	db	0
   998  0013CA  00                 	db	0
   999  0013CB  00                 	db	0
  1000  0013CC  00                 	db	0
  1001  0013CD  00                 	db	0
  1002  0013CE  00                 	db	0
  1003  0013CF  00                 	db	0
  1004  0013D0  00                 	db	0
  1005  0013D1  00                 	db	0
  1006  0013D2  00                 	db	0
  1007  0013D3  00                 	db	0
  1008  0013D4  00                 	db	0
  1009  0013D5  00                 	db	0
  1010  0013D6  00                 	db	0
  1011  0013D7  00                 	db	0
  1012  0013D8  00                 	db	0
  1013  0013D9  00                 	db	0
  1014  0013DA  00                 	db	0
  1015  0013DB  00                 	db	0
  1016  0013DC  00                 	db	0
  1017  0013DD  00                 	db	0
  1018  0013DE  00                 	db	0
  1019  0013DF  00                 	db	0
  1020  0013E0  00                 	db	0
  1021  0013E1  00                 	db	0
  1022  0013E2  00                 	db	0
  1023  0013E3  00                 	db	0
  1024  0013E4  00                 	db	0
  1025  0013E5  00                 	db	0
  1026  0013E6  00                 	db	0
  1027  0013E7  00                 	db	0
  1028  0013E8  00                 	db	0
  1029  0013E9  00                 	db	0
  1030  0013EA  00                 	db	0
  1031  0013EB  00                 	db	0
  1032  0013EC  00                 	db	0
  1033  0013ED  00                 	db	0
  1034  0013EE  00                 	db	0
  1035  0013EF  00                 	db	0
  1036  0013F0  00                 	db	0
  1037  0013F1  00                 	db	0
  1038  0013F2  00                 	db	0
  1039  0013F3  00                 	db	0
  1040  0013F4  00                 	db	0
  1041  0013F5  00                 	db	0
  1042  0013F6  00                 	db	0
  1043  0013F7  00                 	db	0
  1044  0013F8  00                 	db	0
  1045  0013F9  00                 	db	0
  1046  0013FA  00                 	db	0
  1047  0013FB  00                 	db	0
  1048  0013FC  00                 	db	0
  1049  0013FD  00                 	db	0
  1050  0013FE  00                 	db	0
  1051  0013FF  00                 	db	0
  1052  001400  00                 	db	0
  1053  001401  00                 	db	0
  1054  001402  00                 	db	0
  1055  001403  00                 	db	0
  1056  001404  00                 	db	0
  1057  001405  00                 	db	0
  1058  001406  00                 	db	0
  1059  001407  00                 	db	0
  1060  001408  00                 	db	0
  1061  001409  00                 	db	0
  1062  00140A  00                 	db	0
  1063  00140B  00                 	db	0
  1064  00140C  00                 	db	0
  1065  00140D  00                 	db	0
  1066  00140E  00                 	db	0
  1067  00140F  00                 	db	0
  1068  001410  00                 	db	0
  1069  001411  00                 	db	0
  1070  001412  00                 	db	0
  1071  001413  00                 	db	0
  1072  001414  00                 	db	0
  1073  001415  00                 	db	0
  1074  001416  00                 	db	0
  1075  001417  00                 	db	0
  1076  001418  00                 	db	0
  1077  001419  00                 	db	0
  1078  00141A  00                 	db	0
  1079  00141B  00                 	db	0
  1080  00141C  00                 	db	0
  1081  00141D  00                 	db	0
  1082  00141E  00                 	db	0
  1083  00141F  00                 	db	0
  1084  001420  00                 	db	0
  1085  001421  00                 	db	0
  1086  001422  00                 	db	0
  1087  001423  00                 	db	0
  1088  001424  00                 	db	0
  1089  001425  00                 	db	0
  1090  001426  00                 	db	0
  1091  001427  00                 	db	0
  1092  001428  00                 	db	0
  1093  001429  00                 	db	0
  1094  00142A  00                 	db	0
  1095  00142B  00                 	db	0
  1096  00142C  00                 	db	0
  1097  00142D  00                 	db	0
  1098  00142E  00                 	db	0
  1099  00142F  00                 	db	0
  1100  001430  00                 	db	0
  1101  001431  00                 	db	0
  1102  001432  00                 	db	0
  1103  001433  00                 	db	0
  1104  001434  00                 	db	0
  1105  001435  00                 	db	0
  1106  001436  00                 	db	0
  1107  001437  00                 	db	0
  1108  001438  00                 	db	0
  1109  001439  00                 	db	0
  1110  00143A  00                 	db	0
  1111  00143B  00                 	db	0
  1112  00143C  00                 	db	0
  1113  00143D  00                 	db	0
  1114  00143E  00                 	db	0
  1115  00143F  00                 	db	0
  1116  001440  00                 	db	0
  1117  001441  00                 	db	0
  1118  001442  00                 	db	0
  1119  001443  00                 	db	0
  1120  001444  00                 	db	0
  1121  001445  00                 	db	0
  1122  001446  00                 	db	0
  1123  001447  00                 	db	0
  1124  001448  00                 	db	0
  1125  001449  00                 	db	0
  1126  00144A  00                 	db	0
  1127  00144B  00                 	db	0
  1128  00144C  00                 	db	0
  1129  00144D  00                 	db	0
  1130  00144E  00                 	db	0
  1131  00144F  00                 	db	0
  1132  001450  00                 	db	0
  1133  001451  00                 	db	0
  1134  001452  00                 	db	0
  1135  001453  00                 	db	0
  1136  001454  00                 	db	0
  1137  001455  00                 	db	0
  1138  001456  00                 	db	0
  1139  001457  00                 	db	0
  1140  001458  00                 	db	0
  1141  001459  00                 	db	0
  1142  00145A  00                 	db	0
  1143  00145B  00                 	db	0
  1144  00145C  00                 	db	0
  1145  00145D  00                 	db	0
  1146  00145E  00                 	db	0
  1147  00145F  00                 	db	0
  1148  001460  00                 	db	0
  1149  001461  00                 	db	0
  1150  001462  00                 	db	0
  1151  001463  00                 	db	0
  1152  001464  00                 	db	0
  1153  001465  00                 	db	0
  1154  001466  00                 	db	0
  1155  001467  00                 	db	0
  1156  001468  00                 	db	0
  1157  001469  00                 	db	0
  1158  00146A  00                 	db	0
  1159  00146B  00                 	db	0
  1160  00146C  00                 	db	0
  1161  00146D  00                 	db	0
  1162  00146E  00                 	db	0
  1163  00146F  00                 	db	0
  1164  001470  00                 	db	0
  1165  001471  00                 	db	0
  1166  001472  00                 	db	0
  1167  001473  00                 	db	0
  1168  001474  00                 	db	0
  1169  001475  00                 	db	0
  1170  001476  00                 	db	0
  1171  001477  00                 	db	0
  1172  001478  00                 	db	0
  1173  001479  00                 	db	0
  1174  00147A  00                 	db	0
  1175  00147B  00                 	db	0
  1176  00147C  00                 	db	0
  1177  00147D  00                 	db	0
  1178  00147E  00                 	db	0
  1179  00147F  00                 	db	0
  1180  001480  00                 	db	0
  1181  001481  00                 	db	0
  1182  001482  00                 	db	0
  1183  001483  00                 	db	0
  1184  001484  00                 	db	0
  1185  001485  00                 	db	0
  1186  001486  00                 	db	0
  1187  001487  00                 	db	0
  1188  001488  00                 	db	0
  1189  001489  00                 	db	0
  1190  00148A  00                 	db	0
  1191  00148B  00                 	db	0
  1192  00148C  00                 	db	0
  1193  00148D  00                 	db	0
  1194  00148E  00                 	db	0
  1195  00148F  00                 	db	0
  1196  001490  00                 	db	0
  1197  001491  00                 	db	0
  1198  001492  00                 	db	0
  1199  001493  00                 	db	0
  1200  001494  00                 	db	0
  1201  001495  00                 	db	0
  1202  001496  00                 	db	0
  1203  001497  00                 	db	0
  1204  001498  00                 	db	0
  1205  001499  00                 	db	0
  1206  00149A  00                 	db	0
  1207  00149B  00                 	db	0
  1208  00149C  00                 	db	0
  1209  00149D  00                 	db	0
  1210  00149E  00                 	db	0
  1211  00149F  00                 	db	0
  1212  0014A0  00                 	db	0
  1213  0014A1  00                 	db	0
  1214  0014A2  00                 	db	0
  1215  0014A3  00                 	db	0
  1216  0014A4  00                 	db	0
  1217  0014A5  00                 	db	0
  1218  0014A6  00                 	db	0
  1219  0014A7  00                 	db	0
  1220  0014A8  00                 	db	0
  1221  0014A9  00                 	db	0
  1222  0014AA  00                 	db	0
  1223  0014AB  00                 	db	0
  1224  0014AC  00                 	db	0
  1225  0014AD  00                 	db	0
  1226  0014AE  00                 	db	0
  1227  0014AF  00                 	db	0
  1228  0014B0  00                 	db	0
  1229  0014B1  00                 	db	0
  1230  0014B2  00                 	db	0
  1231  0014B3  00                 	db	0
  1232  0014B4  00                 	db	0
  1233  0014B5  00                 	db	0
  1234  0014B6  00                 	db	0
  1235  0014B7  00                 	db	0
  1236  0014B8  00                 	db	0
  1237  0014B9  00                 	db	0
  1238  0014BA  00                 	db	0
  1239  0014BB  00                 	db	0
  1240  0014BC  00                 	db	0
  1241  0014BD  00                 	db	0
  1242  0014BE  00                 	db	0
  1243  0014BF  00                 	db	0
  1244  0014C0  00                 	db	0
  1245  0014C1  00                 	db	0
  1246  0014C2  00                 	db	0
  1247  0014C3  00                 	db	0
  1248  0014C4  00                 	db	0
  1249  0014C5  00                 	db	0
  1250  0014C6  00                 	db	0
  1251  0014C7  00                 	db	0
  1252  0014C8  00                 	db	0
  1253  0014C9  00                 	db	0
  1254  0014CA  00                 	db	0
  1255  0014CB  00                 	db	0
  1256  0014CC  00                 	db	0
  1257  0014CD  00                 	db	0
  1258  0014CE  00                 	db	0
  1259  0014CF  00                 	db	0
  1260  0014D0  00                 	db	0
  1261  0014D1  00                 	db	0
  1262  0014D2  00                 	db	0
  1263  0014D3  00                 	db	0
  1264  0014D4  00                 	db	0
  1265  0014D5  00                 	db	0
  1266  0014D6  00                 	db	0
  1267  0014D7  00                 	db	0
  1268  0014D8  00                 	db	0
  1269  0014D9  00                 	db	0
  1270  0014DA  00                 	db	0
  1271  0014DB  00                 	db	0
  1272  0014DC  00                 	db	0
  1273  0014DD  00                 	db	0
  1274  0014DE  00                 	db	0
  1275  0014DF  00                 	db	0
  1276  0014E0  00                 	db	0
  1277  0014E1  00                 	db	0
  1278  0014E2  00                 	db	0
  1279  0014E3  00                 	db	0
  1280  0014E4  00                 	db	0
  1281  0014E5  00                 	db	0
  1282  0014E6  00                 	db	0
  1283  0014E7  00                 	db	0
  1284  0014E8  00                 	db	0
  1285  0014E9  00                 	db	0
  1286  0014EA  00                 	db	0
  1287  0014EB  00                 	db	0
  1288  0014EC  00                 	db	0
  1289  0014ED  00                 	db	0
  1290  0014EE  00                 	db	0
  1291  0014EF  00                 	db	0
  1292  0014F0  00                 	db	0
  1293  0014F1  00                 	db	0
  1294  0014F2  00                 	db	0
  1295  0014F3  00                 	db	0
  1296  0014F4  00                 	db	0
  1297  0014F5  00                 	db	0
  1298  0014F6  00                 	db	0
  1299  0014F7  00                 	db	0
  1300  0014F8  00                 	db	0
  1301  0014F9  00                 	db	0
  1302  0014FA  00                 	db	0
  1303  0014FB  00                 	db	0
  1304  0014FC  00                 	db	0
  1305  0014FD  00                 	db	0
  1306  0014FE  00                 	db	0
  1307  0014FF  00                 	db	0
  1308  001500  00                 	db	0
  1309  001501  00                 	db	0
  1310  001502  00                 	db	0
  1311  001503  00                 	db	0
  1312  001504  00                 	db	0
  1313  001505  00                 	db	0
  1314  001506  00                 	db	0
  1315  001507  00                 	db	0
  1316  001508  00                 	db	0
  1317  001509  00                 	db	0
  1318  00150A  00                 	db	0
  1319  00150B  00                 	db	0
  1320  00150C  00                 	db	0
  1321  00150D  00                 	db	0
  1322  00150E  00                 	db	0
  1323  00150F  00                 	db	0
  1324  001510  00                 	db	0
  1325  001511  00                 	db	0
  1326  001512  00                 	db	0
  1327  001513  00                 	db	0
  1328  001514  00                 	db	0
  1329  001515  00                 	db	0
  1330  001516  00                 	db	0
  1331  001517  00                 	db	0
  1332  001518  00                 	db	0
  1333  001519  00                 	db	0
  1334  00151A  00                 	db	0
  1335  00151B  00                 	db	0
  1336  00151C  00                 	db	0
  1337  00151D  00                 	db	0
  1338  00151E  00                 	db	0
  1339  00151F  00                 	db	0
  1340  001520  00                 	db	0
  1341  001521  00                 	db	0
  1342  001522  00                 	db	0
  1343  001523  00                 	db	0
  1344  001524  00                 	db	0
  1345  001525  00                 	db	0
  1346  001526  00                 	db	0
  1347  001527  00                 	db	0
  1348  001528  00                 	db	0
  1349  001529  00                 	db	0
  1350  00152A  00                 	db	0
  1351  00152B  00                 	db	0
  1352  00152C  00                 	db	0
  1353  00152D  00                 	db	0
  1354  00152E  00                 	db	0
  1355  00152F  00                 	db	0
  1356  001530  00                 	db	0
  1357  001531  00                 	db	0
  1358  001532  00                 	db	0
  1359  001533  00                 	db	0
  1360  001534  00                 	db	0
  1361  001535  00                 	db	0
  1362  001536  00                 	db	0
  1363  001537  00                 	db	0
  1364  001538  00                 	db	0
  1365  001539  00                 	db	0
  1366  00153A  00                 	db	0
  1367  00153B  00                 	db	0
  1368  00153C  00                 	db	0
  1369  00153D  00                 	db	0
  1370  00153E  00                 	db	0
  1371  00153F  00                 	db	0
  1372  001540  00                 	db	0
  1373  001541  00                 	db	0
  1374  001542  00                 	db	0
  1375  001543  00                 	db	0
  1376  001544  00                 	db	0
  1377  001545  00                 	db	0
  1378  001546  00                 	db	0
  1379  001547  00                 	db	0
  1380  001548  00                 	db	0
  1381  001549  00                 	db	0
  1382  00154A  00                 	db	0
  1383  00154B  00                 	db	0
  1384  00154C  00                 	db	0
  1385  00154D  00                 	db	0
  1386  00154E  00                 	db	0
  1387  00154F  00                 	db	0
  1388  001550  00                 	db	0
  1389  001551  00                 	db	0
  1390  001552  00                 	db	0
  1391  001553  00                 	db	0
  1392  001554  00                 	db	0
  1393  001555  00                 	db	0
  1394  001556  00                 	db	0
  1395  001557  00                 	db	0
  1396  001558  00                 	db	0
  1397  001559  00                 	db	0
  1398  00155A  00                 	db	0
  1399  00155B  00                 	db	0
  1400  00155C  00                 	db	0
  1401  00155D  00                 	db	0
  1402  00155E  00                 	db	0
  1403  00155F  00                 	db	0
  1404  001560  00                 	db	0
  1405  001561  00                 	db	0
  1406  001562  00                 	db	0
  1407  001563  00                 	db	0
  1408  001564  00                 	db	0
  1409  001565  00                 	db	0
  1410  001566  00                 	db	0
  1411  001567  00                 	db	0
  1412  001568  00                 	db	0
  1413  001569  00                 	db	0
  1414  00156A  00                 	db	0
  1415  00156B  00                 	db	0
  1416  00156C  00                 	db	0
  1417  00156D  00                 	db	0
  1418  00156E  00                 	db	0
  1419  00156F  00                 	db	0
  1420  001570  00                 	db	0
  1421  001571  00                 	db	0
  1422  001572  00                 	db	0
  1423  001573  00                 	db	0
  1424  001574  00                 	db	0
  1425  001575  00                 	db	0
  1426  001576  00                 	db	0
  1427  001577  00                 	db	0
  1428  001578  00                 	db	0
  1429  001579  00                 	db	0
  1430  00157A  00                 	db	0
  1431  00157B  00                 	db	0
  1432  00157C  00                 	db	0
  1433  00157D  00                 	db	0
  1434  00157E  00                 	db	0
  1435  00157F  00                 	db	0
  1436  001580  00                 	db	0
  1437  001581  00                 	db	0
  1438  001582  00                 	db	0
  1439  001583  00                 	db	0
  1440  001584  00                 	db	0
  1441  001585  00                 	db	0
  1442  001586  00                 	db	0
  1443  001587  00                 	db	0
  1444  001588  00                 	db	0
  1445  001589  00                 	db	0
  1446  00158A  00                 	db	0
  1447  00158B  00                 	db	0
  1448  00158C  00                 	db	0
  1449  00158D  00                 	db	0
  1450  00158E  00                 	db	0
  1451  00158F  00                 	db	0
  1452  001590  00                 	db	0
  1453  001591  00                 	db	0
  1454  001592  00                 	db	0
  1455  001593  00                 	db	0
  1456  001594  00                 	db	0
  1457  001595  00                 	db	0
  1458  001596  00                 	db	0
  1459  001597  00                 	db	0
  1460  001598  00                 	db	0
  1461  001599  00                 	db	0
  1462  00159A  00                 	db	0
  1463  00159B  00                 	db	0
  1464  00159C  00                 	db	0
  1465  00159D  00                 	db	0
  1466  00159E  00                 	db	0
  1467  00159F  00                 	db	0
  1468  0015A0  00                 	db	0
  1469  0015A1  00                 	db	0
  1470  0015A2  00                 	db	0
  1471  0015A3  00                 	db	0
  1472  0015A4  00                 	db	0
  1473  0015A5  00                 	db	0
  1474  0015A6  00                 	db	0
  1475  0015A7  00                 	db	0
  1476  0015A8  00                 	db	0
  1477  0015A9  00                 	db	0
  1478  0015AA  00                 	db	0
  1479  0015AB  00                 	db	0
  1480  0015AC  00                 	db	0
  1481  0015AD  00                 	db	0
  1482  0015AE  00                 	db	0
  1483  0015AF  00                 	db	0
  1484  0015B0  00                 	db	0
  1485  0015B1  00                 	db	0
  1486  0015B2  00                 	db	0
  1487  0015B3  00                 	db	0
  1488  0015B4  00                 	db	0
  1489  0015B5  00                 	db	0
  1490  0015B6  00                 	db	0
  1491  0015B7  00                 	db	0
  1492  0015B8  00                 	db	0
  1493  0015B9  00                 	db	0
  1494  0015BA  00                 	db	0
  1495  0015BB  00                 	db	0
  1496  0015BC  00                 	db	0
  1497  0015BD  00                 	db	0
  1498  0015BE  00                 	db	0
  1499  0015BF  00                 	db	0
  1500  0015C0  00                 	db	0
  1501  0015C1  00                 	db	0
  1502  0015C2  00                 	db	0
  1503  0015C3  00                 	db	0
  1504  0015C4  00                 	db	0
  1505  0015C5  00                 	db	0
  1506  0015C6  00                 	db	0
  1507  0015C7  00                 	db	0
  1508  0015C8  00                 	db	0
  1509  0015C9  00                 	db	0
  1510  0015CA  00                 	db	0
  1511  0015CB  00                 	db	0
  1512  0015CC  00                 	db	0
  1513  0015CD  00                 	db	0
  1514  0015CE  00                 	db	0
  1515  0015CF  00                 	db	0
  1516  0015D0  00                 	db	0
  1517  0015D1  00                 	db	0
  1518  0015D2  00                 	db	0
  1519  0015D3  00                 	db	0
  1520  0015D4  00                 	db	0
  1521  0015D5  00                 	db	0
  1522  0015D6  00                 	db	0
  1523  0015D7  00                 	db	0
  1524  0015D8  00                 	db	0
  1525  0015D9  00                 	db	0
  1526  0015DA  00                 	db	0
  1527  0015DB  00                 	db	0
  1528  0015DC  00                 	db	0
  1529  0015DD  00                 	db	0
  1530  0015DE  00                 	db	0
  1531  0015DF  00                 	db	0
  1532  0015E0  00                 	db	0
  1533  0015E1  00                 	db	0
  1534  0015E2  00                 	db	0
  1535  0015E3  00                 	db	0
  1536  0015E4  00                 	db	0
  1537  0015E5  00                 	db	0
  1538  0015E6  00                 	db	0
  1539  0015E7  00                 	db	0
  1540  0015E8  00                 	db	0
  1541  0015E9  00                 	db	0
  1542  0015EA  00                 	db	0
  1543  0015EB  00                 	db	0
  1544  0015EC  00                 	db	0
  1545  0015ED  00                 	db	0
  1546  0015EE  00                 	db	0
  1547  0015EF  00                 	db	0
  1548  0015F0  00                 	db	0
  1549  0015F1  00                 	db	0
  1550  0015F2  00                 	db	0
  1551  0015F3  00                 	db	0
  1552  0015F4  00                 	db	0
  1553  0015F5  00                 	db	0
  1554  0015F6  00                 	db	0
  1555  0015F7  00                 	db	0
  1556  0015F8  00                 	db	0
  1557  0015F9  00                 	db	0
  1558  0015FA  00                 	db	0
  1559  0015FB  00                 	db	0
  1560  0015FC  00                 	db	0
  1561  0015FD  00                 	db	0
  1562  0015FE  00                 	db	0
  1563  0015FF  00                 	db	0
  1564  001600  00                 	db	0
  1565  001601  00                 	db	0
  1566  001602  00                 	db	0
  1567  001603  00                 	db	0
  1568  001604  00                 	db	0
  1569  001605  00                 	db	0
  1570  001606  00                 	db	0
  1571  001607  00                 	db	0
  1572  001608  00                 	db	0
  1573  001609  00                 	db	0
  1574  00160A  00                 	db	0
  1575  00160B  00                 	db	0
  1576  00160C  00                 	db	0
  1577  00160D  00                 	db	0
  1578  00160E  00                 	db	0
  1579  00160F  00                 	db	0
  1580  001610  00                 	db	0
  1581  001611  00                 	db	0
  1582  001612  00                 	db	0
  1583  001613  00                 	db	0
  1584  001614  00                 	db	0
  1585  001615  00                 	db	0
  1586  001616  00                 	db	0
  1587  001617  00                 	db	0
  1588  001618  00                 	db	0
  1589  001619  00                 	db	0
  1590  00161A  00                 	db	0
  1591  00161B  00                 	db	0
  1592  00161C  00                 	db	0
  1593  00161D  00                 	db	0
  1594  00161E  00                 	db	0
  1595  00161F  00                 	db	0
  1596  001620  00                 	db	0
  1597  001621  00                 	db	0
  1598  001622  00                 	db	0
  1599  001623  00                 	db	0
  1600  001624  00                 	db	0
  1601  001625  00                 	db	0
  1602  001626  00                 	db	0
  1603  001627  00                 	db	0
  1604  001628  00                 	db	0
  1605  001629  00                 	db	0
  1606  00162A  00                 	db	0
  1607  00162B  00                 	db	0
  1608  00162C  00                 	db	0
  1609  00162D  00                 	db	0
  1610  00162E  00                 	db	0
  1611  00162F  00                 	db	0
  1612  001630  00                 	db	0
  1613  001631  00                 	db	0
  1614  001632  00                 	db	0
  1615  001633  00                 	db	0
  1616  001634  00                 	db	0
  1617  001635  00                 	db	0
  1618  001636  00                 	db	0
  1619  001637  00                 	db	0
  1620  001638  00                 	db	0
  1621  001639  00                 	db	0
  1622  00163A  00                 	db	0
  1623  00163B  00                 	db	0
  1624  00163C  00                 	db	0
  1625  00163D  00                 	db	0
  1626  00163E  00                 	db	0
  1627  00163F  00                 	db	0
  1628  001640  00                 	db	0
  1629  001641  00                 	db	0
  1630  001642  00                 	db	0
  1631  001643  00                 	db	0
  1632  001644  00                 	db	0
  1633  001645  00                 	db	0
  1634  001646  00                 	db	0
  1635  001647  00                 	db	0
  1636  001648  00                 	db	0
  1637  001649  00                 	db	0
  1638  00164A  00                 	db	0
  1639  00164B  00                 	db	0
  1640  00164C  00                 	db	0
  1641  00164D  00                 	db	0
  1642  00164E  00                 	db	0
  1643  00164F  00                 	db	0
  1644  001650  00                 	db	0
  1645  001651  00                 	db	0
  1646  001652  00                 	db	0
  1647  001653  00                 	db	0
  1648  001654  00                 	db	0
  1649  001655  00                 	db	0
  1650  001656  00                 	db	0
  1651  001657  00                 	db	0
  1652  001658  00                 	db	0
  1653  001659  00                 	db	0
  1654  00165A  00                 	db	0
  1655  00165B  00                 	db	0
  1656  00165C  00                 	db	0
  1657  00165D  00                 	db	0
  1658  00165E  00                 	db	0
  1659  00165F  00                 	db	0
  1660  001660  00                 	db	0
  1661  001661  00                 	db	0
  1662  001662  00                 	db	0
  1663  001663  00                 	db	0
  1664  001664  00                 	db	0
  1665  001665  00                 	db	0
  1666  001666  00                 	db	0
  1667  001667  00                 	db	0
  1668  001668  00                 	db	0
  1669  001669  00                 	db	0
  1670  00166A  00                 	db	0
  1671  00166B  00                 	db	0
  1672  00166C  00                 	db	0
  1673  00166D  00                 	db	0
  1674  00166E  00                 	db	0
  1675  00166F  00                 	db	0
  1676  001670  00                 	db	0
  1677  001671  00                 	db	0
  1678  001672  00                 	db	0
  1679  001673  00                 	db	0
  1680  001674  00                 	db	0
  1681  001675  00                 	db	0
  1682  001676  00                 	db	0
  1683  001677  00                 	db	0
  1684  001678  00                 	db	0
  1685  001679  00                 	db	0
  1686  00167A  00                 	db	0
  1687  00167B  00                 	db	0
  1688  00167C  00                 	db	0
  1689  00167D  00                 	db	0
  1690  00167E  00                 	db	0
  1691  00167F  00                 	db	0
  1692  001680  00                 	db	0
  1693  001681  00                 	db	0
  1694  001682  00                 	db	0
  1695  001683  00                 	db	0
  1696  001684  00                 	db	0
  1697  001685  00                 	db	0
  1698  001686  00                 	db	0
  1699  001687  00                 	db	0
  1700  001688  00                 	db	0
  1701  001689  00                 	db	0
  1702  00168A  00                 	db	0
  1703  00168B  00                 	db	0
  1704  00168C  00                 	db	0
  1705  00168D  00                 	db	0
  1706  00168E  00                 	db	0
  1707  00168F  00                 	db	0
  1708  001690  00                 	db	0
  1709  001691  00                 	db	0
  1710  001692  00                 	db	0
  1711  001693  00                 	db	0
  1712  001694  00                 	db	0
  1713  001695  00                 	db	0
  1714  001696  00                 	db	0
  1715  001697  00                 	db	0
  1716  001698  00                 	db	0
  1717  001699  00                 	db	0
  1718  00169A  00                 	db	0
  1719  00169B  00                 	db	0
  1720  00169C  00                 	db	0
  1721  00169D  00                 	db	0
  1722  00169E  00                 	db	0
  1723  00169F  00                 	db	0
  1724  0016A0  00                 	db	0
  1725  0016A1  00                 	db	0
  1726  0016A2  00                 	db	0
  1727  0016A3  00                 	db	0
  1728  0016A4  00                 	db	0
  1729  0016A5  00                 	db	0
  1730  0016A6  00                 	db	0
  1731  0016A7  00                 	db	0
  1732  0016A8  00                 	db	0
  1733  0016A9  00                 	db	0
  1734  0016AA  00                 	db	0
  1735  0016AB  00                 	db	0
  1736  0016AC  00                 	db	0
  1737  0016AD  00                 	db	0
  1738  0016AE  00                 	db	0
  1739  0016AF  00                 	db	0
  1740  0016B0  00                 	db	0
  1741  0016B1  00                 	db	0
  1742  0016B2  00                 	db	0
  1743  0016B3  00                 	db	0
  1744  0016B4  00                 	db	0
  1745  0016B5  00                 	db	0
  1746  0016B6  00                 	db	0
  1747  0016B7  00                 	db	0
  1748  0016B8  00                 	db	0
  1749  0016B9  00                 	db	0
  1750  0016BA  00                 	db	0
  1751  0016BB  00                 	db	0
  1752  0016BC  00                 	db	0
  1753  0016BD  00                 	db	0
  1754  0016BE  00                 	db	0
  1755  0016BF  00                 	db	0
  1756  0016C0  00                 	db	0
  1757  0016C1  00                 	db	0
  1758  0016C2  00                 	db	0
  1759  0016C3  00                 	db	0
  1760  0016C4  00                 	db	0
  1761  0016C5  00                 	db	0
  1762  0016C6  00                 	db	0
  1763  0016C7  00                 	db	0
  1764  0016C8  00                 	db	0
  1765  0016C9  00                 	db	0
  1766  0016CA  00                 	db	0
  1767  0016CB  00                 	db	0
  1768  0016CC  00                 	db	0
  1769  0016CD  00                 	db	0
  1770  0016CE  00                 	db	0
  1771  0016CF  00                 	db	0
  1772  0016D0  00                 	db	0
  1773  0016D1  00                 	db	0
  1774  0016D2  00                 	db	0
  1775  0016D3  00                 	db	0
  1776  0016D4  00                 	db	0
  1777  0016D5  00                 	db	0
  1778  0016D6  00                 	db	0
  1779  0016D7  00                 	db	0
  1780  0016D8  00                 	db	0
  1781  0016D9  00                 	db	0
  1782  0016DA  00                 	db	0
  1783  0016DB  00                 	db	0
  1784  0016DC  00                 	db	0
  1785  0016DD  00                 	db	0
  1786  0016DE  00                 	db	0
  1787  0016DF  00                 	db	0
  1788  0016E0  00                 	db	0
  1789  0016E1  00                 	db	0
  1790  0016E2  00                 	db	0
  1791  0016E3  00                 	db	0
  1792  0016E4  00                 	db	0
  1793  0016E5  00                 	db	0
  1794  0016E6  00                 	db	0
  1795  0016E7  00                 	db	0
  1796  0016E8  00                 	db	0
  1797  0016E9  00                 	db	0
  1798  0016EA  00                 	db	0
  1799  0016EB  00                 	db	0
  1800  0016EC  00                 	db	0
  1801  0016ED  00                 	db	0
  1802  0016EE  00                 	db	0
  1803  0016EF  00                 	db	0
  1804  0016F0  00                 	db	0
  1805  0016F1  00                 	db	0
  1806  0016F2  00                 	db	0
  1807  0016F3  00                 	db	0
  1808  0016F4  00                 	db	0
  1809  0016F5  00                 	db	0
  1810  0016F6  00                 	db	0
  1811  0016F7  00                 	db	0
  1812  0016F8  00                 	db	0
  1813  0016F9  00                 	db	0
  1814  0016FA  00                 	db	0
  1815  0016FB  00                 	db	0
  1816  0016FC  00                 	db	0
  1817  0016FD  00                 	db	0
  1818  0016FE  00                 	db	0
  1819  0016FF  00                 	db	0
  1820  001700  00                 	db	0
  1821  001701  00                 	db	0
  1822  001702  00                 	db	0
  1823  001703  00                 	db	0
  1824  001704  00                 	db	0
  1825  001705  00                 	db	0
  1826  001706  00                 	db	0
  1827  001707  00                 	db	0
  1828  001708  00                 	db	0
  1829  001709  00                 	db	0
  1830  00170A  00                 	db	0
  1831  00170B  00                 	db	0
  1832  00170C  00                 	db	0
  1833  00170D  00                 	db	0
  1834  00170E  00                 	db	0
  1835  00170F  00                 	db	0
  1836  001710  00                 	db	0
  1837  001711  00                 	db	0
  1838  001712  00                 	db	0
  1839  001713  00                 	db	0
  1840  001714  00                 	db	0
  1841  001715  00                 	db	0
  1842  001716  00                 	db	0
  1843  001717  00                 	db	0
  1844  001718  00                 	db	0
  1845  001719  00                 	db	0
  1846  00171A  00                 	db	0
  1847  00171B  00                 	db	0
  1848  00171C  00                 	db	0
  1849  00171D  00                 	db	0
  1850  00171E  00                 	db	0
  1851  00171F  00                 	db	0
  1852  001720  00                 	db	0
  1853  001721  00                 	db	0
  1854  001722  00                 	db	0
  1855  001723  00                 	db	0
  1856  001724  00                 	db	0
  1857  001725  00                 	db	0
  1858  001726  00                 	db	0
  1859  001727  00                 	db	0
  1860  001728  00                 	db	0
  1861  001729  00                 	db	0
  1862  00172A  00                 	db	0
  1863  00172B  00                 	db	0
  1864  00172C  00                 	db	0
  1865  00172D  00                 	db	0
  1866  00172E  00                 	db	0
  1867  00172F  00                 	db	0
  1868  001730  00                 	db	0
  1869  001731  00                 	db	0
  1870  001732  00                 	db	0
  1871  001733  00                 	db	0
  1872  001734  00                 	db	0
  1873  001735  00                 	db	0
  1874  001736  00                 	db	0
  1875  001737  00                 	db	0
  1876  001738  00                 	db	0
  1877  001739  00                 	db	0
  1878  00173A  00                 	db	0
  1879  00173B  00                 	db	0
  1880  00173C  00                 	db	0
  1881  00173D  00                 	db	0
  1882  00173E  00                 	db	0
  1883  00173F  00                 	db	0
  1884  001740  00                 	db	0
  1885  001741  00                 	db	0
  1886  001742  00                 	db	0
  1887  001743  00                 	db	0
  1888  001744  00                 	db	0
  1889  001745  00                 	db	0
  1890  001746  00                 	db	0
  1891  001747  00                 	db	0
  1892  001748  00                 	db	0
  1893  001749  00                 	db	0
  1894  00174A  00                 	db	0
  1895  00174B  00                 	db	0
  1896  00174C  00                 	db	0
  1897  00174D  00                 	db	0
  1898  00174E  00                 	db	0
  1899  00174F  00                 	db	0
  1900  001750  00                 	db	0
  1901  001751  00                 	db	0
  1902  001752  00                 	db	0
  1903  001753  00                 	db	0
  1904  001754  00                 	db	0
  1905  001755  00                 	db	0
  1906  001756  00                 	db	0
  1907  001757  00                 	db	0
  1908  001758  00                 	db	0
  1909  001759  00                 	db	0
  1910  00175A  00                 	db	0
  1911  00175B  00                 	db	0
  1912  00175C  00                 	db	0
  1913  00175D  00                 	db	0
  1914  00175E  00                 	db	0
  1915  00175F  00                 	db	0
  1916  001760  00                 	db	0
  1917  001761  00                 	db	0
  1918  001762  00                 	db	0
  1919  001763  00                 	db	0
  1920  001764  00                 	db	0
  1921  001765  00                 	db	0
  1922  001766  00                 	db	0
  1923  001767  00                 	db	0
  1924  001768  00                 	db	0
  1925  001769  00                 	db	0
  1926  00176A  00                 	db	0
  1927  00176B  00                 	db	0
  1928  00176C  00                 	db	0
  1929  00176D  00                 	db	0
  1930  00176E  00                 	db	0
  1931  00176F  00                 	db	0
  1932  001770  00                 	db	0
  1933  001771  00                 	db	0
  1934  001772  00                 	db	0
  1935  001773  00                 	db	0
  1936  001774  00                 	db	0
  1937  001775  00                 	db	0
  1938  001776  00                 	db	0
  1939  001777  00                 	db	0
  1940  001778  00                 	db	0
  1941  001779  00                 	db	0
  1942  00177A  00                 	db	0
  1943  00177B  00                 	db	0
  1944  00177C  00                 	db	0
  1945  00177D  00                 	db	0
  1946  00177E  00                 	db	0
  1947  00177F  00                 	db	0
  1948  001780  00                 	db	0
  1949  001781  00                 	db	0
  1950  001782  00                 	db	0
  1951  001783  00                 	db	0
  1952  001784  00                 	db	0
  1953  001785  00                 	db	0
  1954  001786  00                 	db	0
  1955  001787  00                 	db	0
  1956  001788  00                 	db	0
  1957  001789  00                 	db	0
  1958  00178A  00                 	db	0
  1959  00178B  00                 	db	0
  1960  00178C  00                 	db	0
  1961  00178D  00                 	db	0
  1962  00178E  00                 	db	0
  1963  00178F  00                 	db	0
  1964  001790  00                 	db	0
  1965  001791  00                 	db	0
  1966  001792  00                 	db	0
  1967  001793  00                 	db	0
  1968  001794  00                 	db	0
  1969  001795  00                 	db	0
  1970  001796  00                 	db	0
  1971  001797  00                 	db	0
  1972  001798  00                 	db	0
  1973  001799  00                 	db	0
  1974  00179A  00                 	db	0
  1975  00179B  00                 	db	0
  1976  00179C  00                 	db	0
  1977  00179D  00                 	db	0
  1978  00179E  00                 	db	0
  1979  00179F  00                 	db	0
  1980  0017A0  00                 	db	0
  1981  0017A1  00                 	db	0
  1982  0017A2  00                 	db	0
  1983  0017A3  00                 	db	0
  1984  0017A4  00                 	db	0
  1985  0017A5  00                 	db	0
  1986  0017A6  00                 	db	0
  1987  0017A7  00                 	db	0
  1988  0017A8  00                 	db	0
  1989  0017A9  00                 	db	0
  1990  0017AA  00                 	db	0
  1991  0017AB  00                 	db	0
  1992  0017AC  00                 	db	0
  1993  0017AD  00                 	db	0
  1994  0017AE  00                 	db	0
  1995  0017AF  00                 	db	0
  1996  0017B0  00                 	db	0
  1997  0017B1  00                 	db	0
  1998  0017B2  00                 	db	0
  1999  0017B3  00                 	db	0
  2000  0017B4  00                 	db	0
  2001  0017B5  00                 	db	0
  2002  0017B6  00                 	db	0
  2003  0017B7  00                 	db	0
  2004  0017B8  00                 	db	0
  2005  0017B9  00                 	db	0
  2006  0017BA  00                 	db	0
  2007  0017BB  00                 	db	0
  2008  0017BC  00                 	db	0
  2009  0017BD  00                 	db	0
  2010  0017BE  00                 	db	0
  2011  0017BF  00                 	db	0
  2012  0017C0  00                 	db	0
  2013  0017C1  00                 	db	0
  2014  0017C2  00                 	db	0
  2015  0017C3  00                 	db	0
  2016  0017C4  00                 	db	0
  2017  0017C5  00                 	db	0
  2018  0017C6  00                 	db	0
  2019  0017C7  00                 	db	0
  2020  0017C8  00                 	db	0
  2021  0017C9  00                 	db	0
  2022  0017CA  00                 	db	0
  2023  0017CB  00                 	db	0
  2024  0017CC  00                 	db	0
  2025  0017CD  00                 	db	0
  2026  0017CE  00                 	db	0
  2027  0017CF  00                 	db	0
  2028  0017D0  00                 	db	0
  2029  0017D1  00                 	db	0
  2030  0017D2  00                 	db	0
  2031  0017D3  00                 	db	0
  2032  0017D4  00                 	db	0
  2033  0017D5  00                 	db	0
  2034  0017D6  00                 	db	0
  2035  0017D7  00                 	db	0
  2036  0017D8  00                 	db	0
  2037  0017D9  00                 	db	0
  2038  0017DA  00                 	db	0
  2039  0017DB  00                 	db	0
  2040  0017DC  00                 	db	0
  2041  0017DD  00                 	db	0
  2042  0017DE  00                 	db	0
  2043  0017DF  00                 	db	0
  2044  0017E0  00                 	db	0
  2045  0017E1  00                 	db	0
  2046  0017E2  00                 	db	0
  2047  0017E3  00                 	db	0
  2048  0017E4  00                 	db	0
  2049  0017E5  00                 	db	0
  2050  0017E6  00                 	db	0
  2051  0017E7  00                 	db	0
  2052  0017E8  00                 	db	0
  2053  0017E9  00                 	db	0
  2054  0017EA  00                 	db	0
  2055  0017EB  00                 	db	0
  2056  0017EC  00                 	db	0
  2057  0017ED  00                 	db	0
  2058  0017EE  00                 	db	0
  2059  0017EF  00                 	db	0
  2060  0017F0  00                 	db	0
  2061  0017F1  00                 	db	0
  2062  0017F2  00                 	db	0
  2063  0017F3  00                 	db	0
  2064  0017F4  00                 	db	0
  2065  0017F5  00                 	db	0
  2066  0017F6  00                 	db	0
  2067  0017F7  00                 	db	0
  2068  0017F8  00                 	db	0
  2069  0017F9  00                 	db	0
  2070  0017FA  00                 	db	0
  2071  0017FB  00                 	db	0
  2072  0017FC  00                 	db	0
  2073  0017FD  00                 	db	0
  2074  0017FE  00                 	db	0
  2075  0017FF  00                 	db	0
  2076  001800  00                 	db	0
  2077  001801  00                 	db	0
  2078  001802  00                 	db	0
  2079  001803  00                 	db	0
  2080  001804  00                 	db	0
  2081  001805  00                 	db	0
  2082                           
  2083                           	psect	smallconst
  2084  001000                     __psmallconst:
  2085                           	opt stack 0
  2086  001000  00                 	db	0
  2087  001001                     _virtualMemory_size:
  2088                           	opt stack 0
  2089  001001  0800               	dw	2048
  2090  001003  0000               	dw	0
  2091  001005                     __end_of_virtualMemory_size:
  2092                           	opt stack 0
  2093  0000                     _ANSELD	set	3899
  2094  0000                     _BAUDCON2bits	set	3952
  2095  0000                     _LATA	set	3977
  2096  0000                     _LATAbits	set	3977
  2097  0000                     _LATC	set	3979
  2098  0000                     _LATCbits	set	3979
  2099  0000                     _LATD	set	3980
  2100  0000                     _LATDbits	set	3980
  2101  0000                     _LATE	set	3981
  2102  0000                     _LATEbits	set	3981
  2103  0000                     _OSCCON2bits	set	4050
  2104  0000                     _OSCCONbits	set	4051
  2105  0000                     _RCREG2	set	3956
  2106  0000                     _RCSTA2bits	set	3953
  2107  0000                     _SPBRG2	set	3957
  2108  0000                     _SPBRGH2	set	3958
  2109  0000                     _TRISA	set	3986
  2110  0000                     _TRISC	set	3988
  2111  0000                     _TRISDbits	set	3989
  2112  0000                     _TRISE	set	3990
  2113  0000                     _TXREG2	set	3955
  2114  0000                     _TXSTA2bits	set	3954
  2115                           
  2116                           ; #config settings
  2117  001005  00                 	db	0	; dummy byte at the end
  2118  0000                     
  2119                           	psect	cinit
  2120  0024DE                     __pcinit:
  2121                           	opt stack 0
  2122  0024DE                     start_initialization:
  2123                           	opt stack 0
  2124  0024DE                     __initialization:
  2125                           	opt stack 0
  2126                           
  2127                           ; Clear objects allocated to COMRAM (14 bytes)
  2128  0024DE  EE00  F001         	lfsr	0,__pbssCOMRAM
  2129  0024E2  0E0E               	movlw	14
  2130  0024E4                     clear_0:
  2131  0024E4  6AEE               	clrf	postinc0,c
  2132  0024E6  06E8               	decf	wreg,f,c
  2133  0024E8  E1FD               	bnz	clear_0
  2134                           
  2135                           ; Initialize objects allocated to BIGRAM (2048 bytes)
  2136                           ; load TBLPTR registers with __pidataBIGRAM
  2137  0024EA  0E06               	movlw	low __pidataBIGRAM
  2138  0024EC  6EF6               	movwf	tblptrl,c
  2139  0024EE  0E10               	movlw	high __pidataBIGRAM
  2140  0024F0  6EF7               	movwf	tblptrh,c
  2141  0024F2  0E00               	movlw	low (__pidataBIGRAM shr (0+16))
  2142  0024F4  6EF8               	movwf	tblptru,c
  2143  0024F6  EE07  F038         	lfsr	0,__pdataBIGRAM
  2144  0024FA  EE18 F000          	lfsr	1,2048
  2145  0024FE                     copy_data0:
  2146  0024FE  0009               	tblrd		*+
  2147  002500  CFF5 FFEE          	movff	tablat,postinc0
  2148  002504  50E5               	movf	postdec1,w,c
  2149  002506  50E1               	movf	fsr1l,w,c
  2150  002508  E1FA               	bnz	copy_data0
  2151  00250A  50E2               	movf	fsr1h,w,c
  2152  00250C  E1F8               	bnz	copy_data0
  2153  00250E                     end_of_initialization:
  2154                           	opt stack 0
  2155  00250E                     __end_of__initialization:
  2156                           	opt stack 0
  2157  00250E  0100               	movlb	0
  2158  002510  EF29  F012         	goto	_main	;jump to C main() function
  2159                           tblptru	equ	0xFF8
  2160                           tblptrh	equ	0xFF7
  2161                           tblptrl	equ	0xFF6
  2162                           tablat	equ	0xFF5
  2163                           postinc0	equ	0xFEE
  2164                           wreg	equ	0xFE8
  2165                           postdec1	equ	0xFE5
  2166                           fsr1h	equ	0xFE2
  2167                           fsr1l	equ	0xFE1
  2168                           
  2169                           	psect	bssCOMRAM
  2170  000001                     __pbssCOMRAM:
  2171                           	opt stack 0
  2172  000001                     wait_ms@timel:
  2173                           	opt stack 0
  2174  000001                     	ds	4
  2175  000005                     _regMX:
  2176                           	opt stack 0
  2177  000005                     	ds	2
  2178  000007                     _regPC:
  2179                           	opt stack 0
  2180  000007                     	ds	2
  2181  000009                     _immData_1:
  2182                           	opt stack 0
  2183  000009                     	ds	1
  2184  00000A                     _immData_2:
  2185                           	opt stack 0
  2186  00000A                     	ds	1
  2187  00000B                     _regA:
  2188                           	opt stack 0
  2189  00000B                     	ds	1
  2190  00000C                     _regB:
  2191                           	opt stack 0
  2192  00000C                     	ds	1
  2193  00000D                     _regF:
  2194                           	opt stack 0
  2195  00000D                     	ds	1
  2196  00000E                     _regSP:
  2197                           	opt stack 0
  2198  00000E                     	ds	1
  2199                           tblptru	equ	0xFF8
  2200                           tblptrh	equ	0xFF7
  2201                           tblptrl	equ	0xFF6
  2202                           tablat	equ	0xFF5
  2203                           postinc0	equ	0xFEE
  2204                           wreg	equ	0xFE8
  2205                           postdec1	equ	0xFE5
  2206                           fsr1h	equ	0xFE2
  2207                           fsr1l	equ	0xFE1
  2208                           
  2209                           	psect	dataBIGRAM
  2210  000738                     __pdataBIGRAM:
  2211                           	opt stack 0
  2212  000738                     _virtualMemory:
  2213                           	opt stack 0
  2214  000738                     	ds	2048
  2215                           tblptru	equ	0xFF8
  2216                           tblptrh	equ	0xFF7
  2217                           tblptrl	equ	0xFF6
  2218                           tablat	equ	0xFF5
  2219                           postinc0	equ	0xFEE
  2220                           wreg	equ	0xFE8
  2221                           postdec1	equ	0xFE5
  2222                           fsr1h	equ	0xFE2
  2223                           fsr1l	equ	0xFE1
  2224                           
  2225                           	psect	cstackCOMRAM
  2226  00000F                     __pcstackCOMRAM:
  2227                           	opt stack 0
  2228  00000F                     ??_update_immData:
  2229  00000F                     ?_immData_toPointer:
  2230                           	opt stack 0
  2231  00000F                     dispSeg@letter:
  2232                           	opt stack 0
  2233  00000F                     setMXbits@value:
  2234                           	opt stack 0
  2235  00000F                     getFbits@subRegister:
  2236                           	opt stack 0
  2237  00000F                     setFbits@value:
  2238                           	opt stack 0
  2239  00000F                     getPortData@portNumber:
  2240                           	opt stack 0
  2241  00000F                     getMXbits@regMX_temp:
  2242                           	opt stack 0
  2243  00000F                     enableSerial@baudRate:
  2244                           	opt stack 0
  2245                           
  2246                           ; 2 bytes @ 0x0
  2247  00000F                     	ds	1
  2248  000010                     ??_setFbits:
  2249  000010                     dispSeg@segment:
  2250                           	opt stack 0
  2251  000010                     getFbits@regF_temp:
  2252                           	opt stack 0
  2253  000010                     setMXbits@value_temp:
  2254                           	opt stack 0
  2255                           
  2256                           ; 2 bytes @ 0x1
  2257  000010                     	ds	1
  2258  000011                     ??_enableSerial:
  2259  000011                     getMXbits@subRegister:
  2260                           	opt stack 0
  2261  000011                     setFbits@subRegister:
  2262                           	opt stack 0
  2263  000011                     immData_toPointer@pointer:
  2264                           	opt stack 0
  2265                           
  2266                           ; 2 bytes @ 0x2
  2267  000011                     	ds	1
  2268  000012                     setFbits@regF_temp1:
  2269                           	opt stack 0
  2270  000012                     setMXbits@regMX_temp:
  2271                           	opt stack 0
  2272                           
  2273                           ; 2 bytes @ 0x3
  2274  000012                     	ds	1
  2275  000013                     setFbits@regF_temp2:
  2276                           	opt stack 0
  2277  000013                     setPortData@outputData:
  2278                           	opt stack 0
  2279                           
  2280                           ; 1 bytes @ 0x4
  2281  000013                     	ds	1
  2282  000014                     ??_initializeRegisters:
  2283  000014                     setMXbits@subRegister:
  2284                           	opt stack 0
  2285  000014                     setPortData@portNumber:
  2286                           	opt stack 0
  2287                           
  2288                           ; 1 bytes @ 0x5
  2289  000014                     	ds	1
  2290  000015                     setPortData@outputData_temp16:
  2291                           	opt stack 0
  2292                           
  2293                           ; 2 bytes @ 0x6
  2294  000015                     	ds	2
  2295  000017                     ??_processOpcode:
  2296                           
  2297                           ; 0 bytes @ 0x8
  2298  000017                     	ds	1
  2299  000018                     processOpcode@carriedBit:
  2300                           	opt stack 0
  2301                           
  2302                           ; 1 bytes @ 0x9
  2303  000018                     	ds	1
  2304  000019                     processOpcode@regA_temp8:
  2305                           	opt stack 0
  2306                           
  2307                           ; 1 bytes @ 0xA
  2308  000019                     	ds	1
  2309  00001A                     processOpcode@regA_temp16:
  2310                           	opt stack 0
  2311                           
  2312                           ; 2 bytes @ 0xB
  2313  00001A                     	ds	2
  2314  00001C                     ??_main:
  2315                           
  2316                           ; 0 bytes @ 0xD
  2317  00001C                     	ds	1
  2318                           tblptru	equ	0xFF8
  2319                           tblptrh	equ	0xFF7
  2320                           tblptrl	equ	0xFF6
  2321                           tablat	equ	0xFF5
  2322                           postinc0	equ	0xFEE
  2323                           wreg	equ	0xFE8
  2324                           postdec1	equ	0xFE5
  2325                           fsr1h	equ	0xFE2
  2326                           fsr1l	equ	0xFE1
  2327                           
  2328 ;;
  2329 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  2330 ;;
  2331 ;; *************** function _main *****************
  2332 ;; Defined at:
  2333 ;;		line 18 in file "source/main.c"
  2334 ;; Parameters:    Size  Location     Type
  2335 ;;		None
  2336 ;; Auto vars:     Size  Location     Type
  2337 ;;		None
  2338 ;; Return value:  Size  Location     Type
  2339 ;;		None               void
  2340 ;; Registers used:
  2341 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2342 ;; Tracked objects:
  2343 ;;		On entry : 0/0
  2344 ;;		On exit  : 0/0
  2345 ;;		Unchanged: 0/0
  2346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2349 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2350 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2351 ;;Total ram usage:        1 bytes
  2352 ;; Hardware stack levels required when called:    3
  2353 ;; This function calls:
  2354 ;;		_dispSeg
  2355 ;;		_initOscillator
  2356 ;;		_initPorts
  2357 ;;		_initializeRegisters
  2358 ;;		_processOpcode
  2359 ;; This function is called by:
  2360 ;;		Startup code after reset
  2361 ;; This function uses a non-reentrant model
  2362 ;;
  2363                           
  2364                           	psect	text0
  2365  002452                     __ptext0:
  2366                           	opt stack 0
  2367  002452                     _main:
  2368                           	opt stack 28
  2369                           
  2370                           ;main.c: 20: initOscillator();
  2371                           
  2372                           ;incstack = 0
  2373  002452  ECC9  F012         	call	_initOscillator	;wreg free
  2374                           
  2375                           ;main.c: 21: initPorts();
  2376  002456  EC8A  F012         	call	_initPorts	;wreg free
  2377                           
  2378                           ;main.c: 22: dispSeg(1, '-'); dispSeg(2, '-');
  2379  00245A  6E1C               	movwf	??_main& (0+255),c
  2380  00245C  0E2D               	movlw	45
  2381  00245E  6E0F               	movwf	dispSeg@letter,c
  2382  002460  501C               	movf	??_main& (0+255),w,c
  2383  002462  0E01               	movlw	1
  2384  002464  ECA6  F00F         	call	_dispSeg
  2385  002468  6E1C               	movwf	??_main& (0+255),c
  2386  00246A  0E2D               	movlw	45
  2387  00246C  6E0F               	movwf	dispSeg@letter,c
  2388  00246E  501C               	movf	??_main& (0+255),w,c
  2389  002470  0E02               	movlw	2
  2390  002472  ECA6  F00F         	call	_dispSeg
  2391                           
  2392                           ;main.c: 24: initializeRegisters();
  2393  002476  ECC6  F011         	call	_initializeRegisters	;wreg free
  2394  00247A                     l1594:
  2395                           
  2396                           ;main.c: 27: {
  2397                           ;main.c: 28: if (regPC < 256 || regPC > 2047)
  2398  00247A  0E00               	movlw	0
  2399  00247C  5C07               	subwf	_regPC,w,c
  2400  00247E  0E01               	movlw	1
  2401  002480  5808               	subwfb	_regPC+1,w,c
  2402  002482  A0D8               	btfss	status,0,c
  2403  002484  D006               	goto	l1598
  2404  002486  0E00               	movlw	0
  2405  002488  5C07               	subwf	_regPC,w,c
  2406  00248A  0E08               	movlw	8
  2407  00248C  5808               	subwfb	_regPC+1,w,c
  2408  00248E  A0D8               	btfss	status,0,c
  2409  002490  D005               	goto	l1600
  2410  002492                     l1598:
  2411                           
  2412                           ;main.c: 29: {
  2413                           ;main.c: 30: regPC = 256;
  2414  002492  0E01               	movlw	1
  2415  002494  6E08               	movwf	_regPC+1,c
  2416  002496  0E00               	movlw	0
  2417  002498  6E07               	movwf	_regPC,c
  2418                           
  2419                           ;main.c: 31: continue;
  2420  00249A  D7EF               	goto	l1594
  2421  00249C                     l1600:
  2422                           
  2423                           ;main.c: 32: }
  2424                           ;main.c: 37: processOpcode();
  2425  00249C  EC03  F00C         	call	_processOpcode	;wreg free
  2426  0024A0  D7EC               	goto	l1594
  2427  0024A2                     __end_of_main:
  2428                           	opt stack 0
  2429                           tblptru	equ	0xFF8
  2430                           tblptrh	equ	0xFF7
  2431                           tblptrl	equ	0xFF6
  2432                           tablat	equ	0xFF5
  2433                           postinc0	equ	0xFEE
  2434                           wreg	equ	0xFE8
  2435                           postdec1	equ	0xFE5
  2436                           fsr1h	equ	0xFE2
  2437                           fsr1l	equ	0xFE1
  2438                           status	equ	0xFD8
  2439                           
  2440 ;; *************** function _processOpcode *****************
  2441 ;; Defined at:
  2442 ;;		line 254 in file "source/emulator.c"
  2443 ;; Parameters:    Size  Location     Type
  2444 ;;		None
  2445 ;; Auto vars:     Size  Location     Type
  2446 ;;  regA_temp16     2   11[COMRAM] unsigned int 
  2447 ;;  regA_temp8      1   10[COMRAM] unsigned char 
  2448 ;;  carriedBit      1    9[COMRAM] unsigned char 
  2449 ;; Return value:  Size  Location     Type
  2450 ;;		None               void
  2451 ;; Registers used:
  2452 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2453 ;; Tracked objects:
  2454 ;;		On entry : 0/0
  2455 ;;		On exit  : 0/0
  2456 ;;		Unchanged: 0/0
  2457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2459 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2460 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2461 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2462 ;;Total ram usage:        5 bytes
  2463 ;; Hardware stack levels used:    1
  2464 ;; Hardware stack levels required when called:    2
  2465 ;; This function calls:
  2466 ;;		_getFbits
  2467 ;;		_getMXbits
  2468 ;;		_getPortData
  2469 ;;		_immData_toPointer
  2470 ;;		_setFbits
  2471 ;;		_setMXbits
  2472 ;;		_setPortData
  2473 ;;		_update_immData
  2474 ;; This function is called by:
  2475 ;;		_main
  2476 ;; This function uses a non-reentrant model
  2477 ;;
  2478                           
  2479                           	psect	text1
  2480  001806                     __ptext1:
  2481                           	opt stack 0
  2482  001806                     _processOpcode:
  2483                           	opt stack 28
  2484                           
  2485                           ;emulator.c: 257: update_immData();
  2486                           
  2487                           ;incstack = 0
  2488  001806  ECFA  F011         	call	_update_immData	;wreg free
  2489                           
  2490                           ;emulator.c: 260: uint8_t regA_temp8 = regA;
  2491  00180A  C00B  F019         	movff	_regA,processOpcode@regA_temp8
  2492                           
  2493                           ;emulator.c: 261: uint16_t regA_temp16 = (uint16_t) regA;
  2494  00180E  C00B  F01A         	movff	_regA,processOpcode@regA_temp16
  2495  001812  6A1B               	clrf	processOpcode@regA_temp16+1,c
  2496                           
  2497                           ;emulator.c: 262: uint8_t carriedBit;
  2498                           ;emulator.c: 265: switch (virtualMemory[regPC])
  2499  001814  D2C8               	goto	l1582
  2500  001816                     l1308:
  2501                           
  2502                           ;emulator.c: 273: setFbits(0, 1);
  2503  001816  6E17               	movwf	??_processOpcode& (0+255),c
  2504  001818  0E01               	movlw	1
  2505  00181A  6E0F               	movwf	setFbits@value,c
  2506  00181C  5017               	movf	??_processOpcode& (0+255),w,c
  2507  00181E  0E00               	movlw	0
  2508  001820  EC51  F012         	call	_setFbits
  2509                           
  2510                           ;emulator.c: 274: break;
  2511  001824  D390               	goto	l1584
  2512  001826                     l1310:
  2513                           
  2514                           ;emulator.c: 277: setFbits(0, 0);
  2515  001826  6E17               	movwf	??_processOpcode& (0+255),c
  2516  001828  0E00               	movlw	0
  2517  00182A  6E0F               	movwf	setFbits@value,c
  2518  00182C  5017               	movf	??_processOpcode& (0+255),w,c
  2519  00182E  0E00               	movlw	0
  2520  001830  EC51  F012         	call	_setFbits
  2521                           
  2522                           ;emulator.c: 278: break;
  2523  001834  D388               	goto	l1584
  2524  001836                     l1312:
  2525                           
  2526                           ;emulator.c: 284: regA = getPortData(regB);
  2527  001836  500C               	movf	_regB,w,c
  2528  001838  ECE3  F012         	call	_getPortData
  2529  00183C  D1C5               	goto	L11
  2530  00183E                     l1314:
  2531                           
  2532                           ;emulator.c: 288: regA = getPortData(immData_1);
  2533  00183E  5009               	movf	_immData_1,w,c
  2534  001840  ECE3  F012         	call	_getPortData
  2535  001844  6E0B               	movwf	_regA,c
  2536  001846  D279               	goto	L19
  2537  001848                     l1318:
  2538                           
  2539                           ;emulator.c: 293: setPortData(regB, regA);
  2540  001848  C00B  F013         	movff	_regA,setPortData@outputData
  2541  00184C  500C               	movf	_regB,w,c
  2542  00184E  EC35  F011         	call	_setPortData
  2543                           
  2544                           ;emulator.c: 294: break;
  2545  001852  D379               	goto	l1584
  2546  001854                     l1320:
  2547                           
  2548                           ;emulator.c: 297: setPortData(immData_1, regA);
  2549  001854  C00B  F013         	movff	_regA,setPortData@outputData
  2550  001858  5009               	movf	_immData_1,w,c
  2551  00185A  EC35  F011         	call	_setPortData
  2552  00185E  D26D               	goto	L19
  2553  001860                     l1324:
  2554                           
  2555                           ;emulator.c: 302: setPortData(immData_1, immData_2);
  2556  001860  C00A  F013         	movff	_immData_2,setPortData@outputData
  2557  001864  5009               	movf	_immData_1,w,c
  2558  001866  EC35  F011         	call	_setPortData
  2559  00186A  D11A               	goto	l1458
  2560  00186C                     l1328:
  2561                           
  2562                           ;emulator.c: 310: regA = virtualMemory[regMX];
  2563  00186C  0E38               	movlw	low _virtualMemory
  2564  00186E  2405               	addwf	_regMX,w,c
  2565  001870  6ED9               	movwf	fsr2l,c
  2566  001872  0E07               	movlw	high _virtualMemory
  2567  001874  2006               	addwfc	_regMX+1,w,c
  2568  001876  D1A6               	goto	L25
  2569  001878                     l1330:
  2570                           
  2571                           ;emulator.c: 314: regA = getMXbits(0);
  2572  001878  0E00               	movlw	0
  2573  00187A  ECEE  F012         	call	_getMXbits
  2574  00187E  D1A4               	goto	L11
  2575  001880                     l1332:
  2576                           
  2577                           ;emulator.c: 318: regA = getMXbits(1);
  2578  001880  0E01               	movlw	1
  2579  001882  ECEE  F012         	call	_getMXbits
  2580  001886  D1A0               	goto	L11
  2581  001888                     l254:
  2582                           
  2583                           ;emulator.c: 322: regA = regSP;
  2584  001888  C00E  F00B         	movff	_regSP,_regA
  2585                           
  2586                           ;emulator.c: 323: break;
  2587  00188C  D35C               	goto	l1584
  2588  00188E                     l255:
  2589                           
  2590                           ;emulator.c: 326: regA = regF;
  2591  00188E  C00D  F00B         	movff	_regF,_regA
  2592                           
  2593                           ;emulator.c: 327: break;
  2594  001892  D359               	goto	l1584
  2595  001894                     l256:
  2596                           
  2597                           ;emulator.c: 330: regA = regB;
  2598  001894  C00C  F00B         	movff	_regB,_regA
  2599                           
  2600                           ;emulator.c: 331: break;
  2601  001898  D356               	goto	l1584
  2602  00189A                     l1334:
  2603                           
  2604                           ;emulator.c: 343: virtualMemory[regMX] = regA;
  2605  00189A  0E38               	movlw	low _virtualMemory
  2606  00189C  2405               	addwf	_regMX,w,c
  2607  00189E  6ED9               	movwf	fsr2l,c
  2608  0018A0  0E07               	movlw	high _virtualMemory
  2609  0018A2  2006               	addwfc	_regMX+1,w,c
  2610  0018A4  6EDA               	movwf	fsr2h,c
  2611  0018A6  C00B  FFDF         	movff	_regA,indf2
  2612                           
  2613                           ;emulator.c: 345: break;
  2614  0018AA  D34D               	goto	l1584
  2615  0018AC                     l1336:
  2616                           
  2617                           ;emulator.c: 348: setMXbits(0, regA);
  2618  0018AC  C00B  F00F         	movff	_regA,setMXbits@value
  2619  0018B0  0E00               	movlw	0
  2620  0018B2  ECA2  F012         	call	_setMXbits
  2621                           
  2622                           ;emulator.c: 349: break;
  2623  0018B6  D347               	goto	l1584
  2624  0018B8                     l1338:
  2625                           
  2626                           ;emulator.c: 352: setMXbits(1, regA);
  2627  0018B8  C00B  F00F         	movff	_regA,setMXbits@value
  2628  0018BC  0E01               	movlw	1
  2629  0018BE  ECA2  F012         	call	_setMXbits
  2630                           
  2631                           ;emulator.c: 353: break;
  2632  0018C2  D341               	goto	l1584
  2633  0018C4                     l260:
  2634                           
  2635                           ;emulator.c: 356: regSP = regA;
  2636  0018C4  C00B  F00E         	movff	_regA,_regSP
  2637                           
  2638                           ;emulator.c: 357: break;
  2639  0018C8  D33E               	goto	l1584
  2640  0018CA                     l261:
  2641                           
  2642                           ;emulator.c: 360: regB = regA;
  2643  0018CA  C00B  F00C         	movff	_regA,_regB
  2644                           
  2645                           ;emulator.c: 361: break;
  2646  0018CE  D33B               	goto	l1584
  2647  0018D0                     l262:
  2648                           
  2649                           ;emulator.c: 364: regA = immData_1;
  2650  0018D0  C009  F00B         	movff	_immData_1,_regA
  2651  0018D4  D232               	goto	L19
  2652  0018D6                     l263:
  2653                           
  2654                           ;emulator.c: 370: regA_temp8 = regA;
  2655  0018D6  C00B  F019         	movff	_regA,processOpcode@regA_temp8
  2656                           
  2657                           ;emulator.c: 371: regA = regB;
  2658  0018DA  C00C  F00B         	movff	_regB,_regA
  2659                           
  2660                           ;emulator.c: 372: regB = regA_temp8;
  2661  0018DE  C019  F00C         	movff	processOpcode@regA_temp8,_regB
  2662                           
  2663                           ;emulator.c: 373: break;
  2664  0018E2  D331               	goto	l1584
  2665  0018E4                     l1342:
  2666                           
  2667                           ;emulator.c: 379: regA &= regB;
  2668  0018E4  500C               	movf	_regB,w,c
  2669  0018E6  160B               	andwf	_regA,f,c
  2670                           
  2671                           ;emulator.c: 380: break;
  2672  0018E8  D32E               	goto	l1584
  2673  0018EA                     l1344:
  2674                           
  2675                           ;emulator.c: 384: regA = regA & regB;
  2676  0018EA  500B               	movf	_regA,w,c
  2677  0018EC  140C               	andwf	_regB,w,c
  2678  0018EE  D00B               	goto	L10
  2679  0018F0                     l1348:
  2680                           
  2681                           ;emulator.c: 389: regA |= regB;
  2682  0018F0  500C               	movf	_regB,w,c
  2683  0018F2  120B               	iorwf	_regA,f,c
  2684                           
  2685                           ;emulator.c: 390: break;
  2686  0018F4  D328               	goto	l1584
  2687  0018F6                     l1350:
  2688                           
  2689                           ;emulator.c: 394: regA = regA | regB;
  2690  0018F6  500B               	movf	_regA,w,c
  2691  0018F8  100C               	iorwf	_regB,w,c
  2692  0018FA  D005               	goto	L10
  2693  0018FC                     l1354:
  2694                           
  2695                           ;emulator.c: 399: regA ^= regB;
  2696  0018FC  500C               	movf	_regB,w,c
  2697  0018FE  1A0B               	xorwf	_regA,f,c
  2698                           
  2699                           ;emulator.c: 400: break;
  2700  001900  D322               	goto	l1584
  2701  001902                     l1356:
  2702                           
  2703                           ;emulator.c: 404: regA = regA ^ regB;
  2704  001902  500B               	movf	_regA,w,c
  2705  001904  180C               	xorwf	_regB,w,c
  2706  001906                     L10:
  2707  001906  6E0B               	movwf	_regA,c
  2708  001908                     l1360:
  2709                           
  2710                           ;emulator.c: 409: regA =~ regA;
  2711  001908  1E0B               	comf	_regA,f,c
  2712                           
  2713                           ;emulator.c: 410: break;
  2714  00190A  D31D               	goto	l1584
  2715  00190C                     l271:
  2716                           
  2717                           ;emulator.c: 414: regA_temp8 = regA;
  2718  00190C  C00B  F019         	movff	_regA,processOpcode@regA_temp8
  2719                           
  2720                           ;emulator.c: 416: if (regA_temp8 == 1) setFbits(0, 1);
  2721  001910  0419               	decf	processOpcode@regA_temp8,w,c
  2722  001912  A4D8               	btfss	status,2,c
  2723  001914  D008               	goto	l1366
  2724  001916  6E17               	movwf	??_processOpcode& (0+255),c
  2725  001918  0E01               	movlw	1
  2726  00191A  6E0F               	movwf	setFbits@value,c
  2727  00191C  5017               	movf	??_processOpcode& (0+255),w,c
  2728  00191E  0E00               	movlw	0
  2729  001920  EC51  F012         	call	_setFbits
  2730  001924  D310               	goto	l1584
  2731  001926                     l1366:
  2732                           
  2733                           ;emulator.c: 417: else setFbits(0, 0);
  2734  001926  6E17               	movwf	??_processOpcode& (0+255),c
  2735  001928  0E00               	movlw	0
  2736  00192A  6E0F               	movwf	setFbits@value,c
  2737  00192C  5017               	movf	??_processOpcode& (0+255),w,c
  2738  00192E  0E00               	movlw	0
  2739  001930  EC51  F012         	call	_setFbits
  2740  001934  D308               	goto	l1584
  2741  001936                     l274:
  2742                           
  2743                           ;emulator.c: 425: regA_temp8 = regA;
  2744  001936  C00B  F019         	movff	_regA,processOpcode@regA_temp8
  2745                           
  2746                           ;emulator.c: 428: if (regA_temp8 == 1) setFbits(0, 1);
  2747  00193A  0419               	decf	processOpcode@regA_temp8,w,c
  2748  00193C  A4D8               	btfss	status,2,c
  2749  00193E  D008               	goto	l1372
  2750  001940  6E17               	movwf	??_processOpcode& (0+255),c
  2751  001942  0E01               	movlw	1
  2752  001944  6E0F               	movwf	setFbits@value,c
  2753  001946  5017               	movf	??_processOpcode& (0+255),w,c
  2754  001948  0E00               	movlw	0
  2755  00194A  EC51  F012         	call	_setFbits
  2756  00194E  D2FB               	goto	l1584
  2757  001950                     l1372:
  2758                           
  2759                           ;emulator.c: 429: else setFbits(0, 0);
  2760  001950  6E17               	movwf	??_processOpcode& (0+255),c
  2761  001952  0E00               	movlw	0
  2762  001954  6E0F               	movwf	setFbits@value,c
  2763  001956  5017               	movf	??_processOpcode& (0+255),w,c
  2764  001958  0E00               	movlw	0
  2765  00195A  EC51  F012         	call	_setFbits
  2766  00195E  D2F3               	goto	l1584
  2767  001960                     l277:
  2768                           
  2769                           ;emulator.c: 437: carriedBit = regA;
  2770  001960  C00B  F018         	movff	_regA,processOpcode@carriedBit
  2771                           
  2772                           ;emulator.c: 444: regA = regA + carriedBit;
  2773  001964  500B               	movf	_regA,w,c
  2774  001966  2418               	addwf	processOpcode@carriedBit,w,c
  2775  001968  D12F               	goto	L11
  2776  00196A                     l278:
  2777                           
  2778                           ;emulator.c: 449: carriedBit = regA;
  2779  00196A  C00B  F018         	movff	_regA,processOpcode@carriedBit
  2780                           
  2781                           ;emulator.c: 456: regA += carriedBit;
  2782  00196E  5018               	movf	processOpcode@carriedBit,w,c
  2783  001970  D181               	goto	L12
  2784  001972                     l1378:
  2785                           
  2786                           ;emulator.c: 461: if (regA == regB) setFbits(3, 1);
  2787  001972  500C               	movf	_regB,w,c
  2788  001974  620B               	cpfseq	_regA,c
  2789  001976  D008               	goto	l1382
  2790  001978  6E17               	movwf	??_processOpcode& (0+255),c
  2791  00197A  0E01               	movlw	1
  2792  00197C  6E0F               	movwf	setFbits@value,c
  2793  00197E  5017               	movf	??_processOpcode& (0+255),w,c
  2794  001980  0E03               	movlw	3
  2795  001982  EC51  F012         	call	_setFbits
  2796  001986  D007               	goto	l1384
  2797  001988                     l1382:
  2798                           
  2799                           ;emulator.c: 462: else setFbits(3, 0);
  2800  001988  6E17               	movwf	??_processOpcode& (0+255),c
  2801  00198A  0E00               	movlw	0
  2802  00198C  6E0F               	movwf	setFbits@value,c
  2803  00198E  5017               	movf	??_processOpcode& (0+255),w,c
  2804  001990  0E03               	movlw	3
  2805  001992  EC51  F012         	call	_setFbits
  2806  001996                     l1384:
  2807                           
  2808                           ;emulator.c: 465: if (regA < regB) setFbits(2, 1);
  2809  001996  500C               	movf	_regB,w,c
  2810  001998  5C0B               	subwf	_regA,w,c
  2811  00199A  B0D8               	btfsc	status,0,c
  2812  00199C  D008               	goto	l1388
  2813  00199E  6E17               	movwf	??_processOpcode& (0+255),c
  2814  0019A0  0E01               	movlw	1
  2815  0019A2  6E0F               	movwf	setFbits@value,c
  2816  0019A4  5017               	movf	??_processOpcode& (0+255),w,c
  2817  0019A6  0E02               	movlw	2
  2818  0019A8  EC51  F012         	call	_setFbits
  2819  0019AC  D007               	goto	l1390
  2820  0019AE                     l1388:
  2821                           
  2822                           ;emulator.c: 466: else setFbits(2, 0);
  2823  0019AE  6E17               	movwf	??_processOpcode& (0+255),c
  2824  0019B0  0E00               	movlw	0
  2825  0019B2  6E0F               	movwf	setFbits@value,c
  2826  0019B4  5017               	movf	??_processOpcode& (0+255),w,c
  2827  0019B6  0E02               	movlw	2
  2828  0019B8  EC51  F012         	call	_setFbits
  2829  0019BC                     l1390:
  2830                           
  2831                           ;emulator.c: 469: if (regA > regB) setFbits(1, 1);
  2832  0019BC  500B               	movf	_regA,w,c
  2833  0019BE  5C0C               	subwf	_regB,w,c
  2834  0019C0  B0D8               	btfsc	status,0,c
  2835  0019C2  D008               	goto	l1394
  2836  0019C4  6E17               	movwf	??_processOpcode& (0+255),c
  2837  0019C6  0E01               	movlw	1
  2838  0019C8  6E0F               	movwf	setFbits@value,c
  2839  0019CA  5017               	movf	??_processOpcode& (0+255),w,c
  2840  0019CC  0E01               	movlw	1
  2841  0019CE  EC51  F012         	call	_setFbits
  2842  0019D2  D2B9               	goto	l1584
  2843  0019D4                     l1394:
  2844                           
  2845                           ;emulator.c: 470: else setFbits(1, 0);
  2846  0019D4  6E17               	movwf	??_processOpcode& (0+255),c
  2847  0019D6  0E00               	movlw	0
  2848  0019D8  6E0F               	movwf	setFbits@value,c
  2849  0019DA  5017               	movf	??_processOpcode& (0+255),w,c
  2850  0019DC  0E01               	movlw	1
  2851  0019DE  EC51  F012         	call	_setFbits
  2852  0019E2  D2B1               	goto	l1584
  2853  0019E4                     l1396:
  2854                           
  2855                           ;emulator.c: 482: regPC = immData_toPointer();
  2856  0019E4  ECD7  F012         	call	_immData_toPointer	;wreg free
  2857  0019E8  D011               	goto	L27
  2858  0019EA                     l1400:
  2859                           
  2860                           ;emulator.c: 487: if (getFbits(3) == 1) regPC = regMX;
  2861  0019EA  0E03               	movlw	3
  2862  0019EC  ECB6  F012         	call	_getFbits
  2863  0019F0                     L21:
  2864  0019F0  6E17               	movwf	??_processOpcode& (0+255),c
  2865  0019F2  0417               	decf	??_processOpcode,w,c
  2866  0019F4                     L20:
  2867  0019F4  A4D8               	btfss	status,2,c
  2868  0019F6  D2A7               	goto	l1584
  2869  0019F8  D064               	goto	L13
  2870  0019FA                     l1404:
  2871                           
  2872                           ;emulator.c: 491: if (getFbits(3) == 1) regPC = immData_toPointer();
  2873  0019FA  0E03               	movlw	3
  2874  0019FC  ECB6  F012         	call	_getFbits
  2875  001A00  6E17               	movwf	??_processOpcode& (0+255),c
  2876  001A02  0417               	decf	??_processOpcode,w,c
  2877  001A04  A4D8               	btfss	status,2,c
  2878  001A06  D04C               	goto	l1458
  2879  001A08  ECD7  F012         	call	_immData_toPointer	;wreg free
  2880  001A0C                     L27:
  2881  001A0C  C00F  F007         	movff	?_immData_toPointer,_regPC
  2882  001A10  C010  F008         	movff	?_immData_toPointer+1,_regPC+1
  2883  001A14  D045               	goto	l1458
  2884  001A16                     l1410:
  2885                           
  2886                           ;emulator.c: 496: if (getFbits(3) == 0) regPC = regMX;
  2887  001A16  0E03               	movlw	3
  2888  001A18  ECB6  F012         	call	_getFbits
  2889  001A1C  D036               	goto	L23
  2890  001A1E                     l1414:
  2891                           
  2892                           ;emulator.c: 500: if (getFbits(3) == 0) regPC = immData_toPointer();
  2893  001A1E  0E03               	movlw	3
  2894  001A20  ECB6  F012         	call	_getFbits
  2895  001A24  0900               	iorlw	0
  2896  001A26  A4D8               	btfss	status,2,c
  2897  001A28  D03B               	goto	l1458
  2898  001A2A  ECD7  F012         	call	_immData_toPointer	;wreg free
  2899  001A2E  D7EE               	goto	L27
  2900  001A30                     l1420:
  2901                           
  2902                           ;emulator.c: 505: if (getFbits(1) == 1) regPC = regMX;
  2903  001A30  0E01               	movlw	1
  2904  001A32  ECB6  F012         	call	_getFbits
  2905  001A36  D7DC               	goto	L21
  2906  001A38                     l1424:
  2907                           
  2908                           ;emulator.c: 509: if (getFbits(1) == 1) regPC = immData_toPointer();
  2909  001A38  0E01               	movlw	1
  2910  001A3A  ECB6  F012         	call	_getFbits
  2911  001A3E  6E17               	movwf	??_processOpcode& (0+255),c
  2912  001A40  0417               	decf	??_processOpcode,w,c
  2913  001A42  A4D8               	btfss	status,2,c
  2914  001A44  D02D               	goto	l1458
  2915  001A46  ECD7  F012         	call	_immData_toPointer	;wreg free
  2916  001A4A  D7E0               	goto	L27
  2917  001A4C                     l1430:
  2918                           
  2919                           ;emulator.c: 514: if (getFbits(2) == 1) regPC = regMX;
  2920  001A4C  0E02               	movlw	2
  2921  001A4E  ECB6  F012         	call	_getFbits
  2922  001A52  D7CE               	goto	L21
  2923  001A54                     l1434:
  2924                           
  2925                           ;emulator.c: 518: if (getFbits(2) == 1) regPC = immData_toPointer();
  2926  001A54  0E02               	movlw	2
  2927  001A56  ECB6  F012         	call	_getFbits
  2928  001A5A  6E17               	movwf	??_processOpcode& (0+255),c
  2929  001A5C  0417               	decf	??_processOpcode,w,c
  2930  001A5E  A4D8               	btfss	status,2,c
  2931  001A60  D01F               	goto	l1458
  2932  001A62  ECD7  F012         	call	_immData_toPointer	;wreg free
  2933  001A66  D7D2               	goto	L27
  2934  001A68                     l1440:
  2935                           
  2936                           ;emulator.c: 523: if (getFbits(0) == 1) regPC = regMX;
  2937  001A68  0E00               	movlw	0
  2938  001A6A  ECB6  F012         	call	_getFbits
  2939  001A6E  D7C0               	goto	L21
  2940  001A70                     l1444:
  2941                           
  2942                           ;emulator.c: 527: if (getFbits(0) == 1) regPC = immData_toPointer();
  2943  001A70  0E00               	movlw	0
  2944  001A72  ECB6  F012         	call	_getFbits
  2945  001A76  6E17               	movwf	??_processOpcode& (0+255),c
  2946  001A78  0417               	decf	??_processOpcode,w,c
  2947  001A7A  A4D8               	btfss	status,2,c
  2948  001A7C  D011               	goto	l1458
  2949  001A7E  ECD7  F012         	call	_immData_toPointer	;wreg free
  2950  001A82  D7C4               	goto	L27
  2951  001A84                     l1450:
  2952                           
  2953                           ;emulator.c: 532: if (getFbits(0) == 0) regPC = regMX;
  2954  001A84  0E00               	movlw	0
  2955  001A86  ECB6  F012         	call	_getFbits
  2956  001A8A                     L23:
  2957  001A8A  0900               	iorlw	0
  2958  001A8C  D7B3               	goto	L20
  2959  001A8E                     l1454:
  2960                           
  2961                           ;emulator.c: 536: if (getFbits(0) == 0) regPC = immData_toPointer();
  2962  001A8E  0E00               	movlw	0
  2963  001A90  ECB6  F012         	call	_getFbits
  2964  001A94  0900               	iorlw	0
  2965  001A96  A4D8               	btfss	status,2,c
  2966  001A98  D003               	goto	l1458
  2967  001A9A  ECD7  F012         	call	_immData_toPointer	;wreg free
  2968  001A9E  D7B6               	goto	L27
  2969  001AA0                     l1458:
  2970                           
  2971                           ;emulator.c: 537: regPC += 2;
  2972  001AA0  0E02               	movlw	2
  2973  001AA2  2607               	addwf	_regPC,f,c
  2974  001AA4  0E00               	movlw	0
  2975  001AA6  2208               	addwfc	_regPC+1,f,c
  2976                           
  2977                           ;emulator.c: 538: break;
  2978  001AA8  D24E               	goto	l1584
  2979  001AAA                     l1460:
  2980                           
  2981                           ;emulator.c: 542: virtualMemory[regSP] = regPC;
  2982  001AAA  500E               	movf	_regSP,w,c
  2983  001AAC  0D01               	mullw	1
  2984  001AAE  0E38               	movlw	low _virtualMemory
  2985  001AB0  24F3               	addwf	prodl,w,c
  2986  001AB2  6ED9               	movwf	fsr2l,c
  2987  001AB4  0E07               	movlw	high _virtualMemory
  2988  001AB6  20F4               	addwfc	prodh,w,c
  2989  001AB8  6EDA               	movwf	fsr2h,c
  2990  001ABA  C007  FFDF         	movff	_regPC,indf2
  2991                           
  2992                           ;emulator.c: 543: regSP += 2;
  2993  001ABE  0E02               	movlw	2
  2994  001AC0  260E               	addwf	_regSP,f,c
  2995  001AC2                     L13:
  2996                           
  2997                           ;emulator.c: 544: regPC = regMX;
  2998  001AC2  C005  F007         	movff	_regMX,_regPC
  2999  001AC6  C006  F008         	movff	_regMX+1,_regPC+1
  3000                           
  3001                           ;emulator.c: 545: break;
  3002  001ACA  D23D               	goto	l1584
  3003  001ACC                     l1466:
  3004                           
  3005                           ;emulator.c: 549: virtualMemory[regSP] = regPC;
  3006  001ACC  500E               	movf	_regSP,w,c
  3007  001ACE  0D01               	mullw	1
  3008  001AD0  0E38               	movlw	low _virtualMemory
  3009  001AD2  24F3               	addwf	prodl,w,c
  3010  001AD4  6ED9               	movwf	fsr2l,c
  3011  001AD6  0E07               	movlw	high _virtualMemory
  3012  001AD8  20F4               	addwfc	prodh,w,c
  3013  001ADA  6EDA               	movwf	fsr2h,c
  3014  001ADC  C007  FFDF         	movff	_regPC,indf2
  3015                           
  3016                           ;emulator.c: 550: regSP += 2;
  3017  001AE0  0E02               	movlw	2
  3018  001AE2  260E               	addwf	_regSP,f,c
  3019                           
  3020                           ;emulator.c: 551: regPC = immData_toPointer();
  3021  001AE4  ECD7  F012         	call	_immData_toPointer	;wreg free
  3022  001AE8  D791               	goto	L27
  3023  001AEA                     l1474:
  3024                           
  3025                           ;emulator.c: 557: regSP -= 2;
  3026  001AEA  0E02               	movlw	2
  3027  001AEC  5E0E               	subwf	_regSP,f,c
  3028                           
  3029                           ;emulator.c: 559: regPC = virtualMemory[regSP];
  3030  001AEE  500E               	movf	_regSP,w,c
  3031  001AF0  0D01               	mullw	1
  3032  001AF2  0E38               	movlw	low _virtualMemory
  3033  001AF4  24F3               	addwf	prodl,w,c
  3034  001AF6  6ED9               	movwf	fsr2l,c
  3035  001AF8  0E07               	movlw	high _virtualMemory
  3036  001AFA  20F4               	addwfc	prodh,w,c
  3037  001AFC  6EDA               	movwf	fsr2h,c
  3038  001AFE  50DF               	movf	indf2,w,c
  3039  001B00  6E17               	movwf	??_processOpcode& (0+255),c
  3040  001B02  5017               	movf	??_processOpcode,w,c
  3041  001B04  6E07               	movwf	_regPC,c
  3042  001B06  6A08               	clrf	_regPC+1,c
  3043                           
  3044                           ;emulator.c: 560: break;
  3045  001B08  D21E               	goto	l1584
  3046  001B0A                     l1478:
  3047                           
  3048                           ;emulator.c: 567: virtualMemory[regSP] = regA;
  3049  001B0A  500E               	movf	_regSP,w,c
  3050  001B0C  0D01               	mullw	1
  3051  001B0E  0E38               	movlw	low _virtualMemory
  3052  001B10  24F3               	addwf	prodl,w,c
  3053  001B12  6ED9               	movwf	fsr2l,c
  3054  001B14  0E07               	movlw	high _virtualMemory
  3055  001B16  20F4               	addwfc	prodh,w,c
  3056  001B18  6EDA               	movwf	fsr2h,c
  3057  001B1A  C00B  FFDF         	movff	_regA,indf2
  3058  001B1E  D024               	goto	L16
  3059  001B20                     l1482:
  3060                           
  3061                           ;emulator.c: 573: virtualMemory[regSP] = regB;
  3062  001B20  500E               	movf	_regSP,w,c
  3063  001B22  0D01               	mullw	1
  3064  001B24  0E38               	movlw	low _virtualMemory
  3065  001B26  24F3               	addwf	prodl,w,c
  3066  001B28  6ED9               	movwf	fsr2l,c
  3067  001B2A  0E07               	movlw	high _virtualMemory
  3068  001B2C  20F4               	addwfc	prodh,w,c
  3069  001B2E  6EDA               	movwf	fsr2h,c
  3070  001B30  C00C  FFDF         	movff	_regB,indf2
  3071  001B34  D019               	goto	L16
  3072  001B36                     l1486:
  3073                           
  3074                           ;emulator.c: 579: virtualMemory[regSP] = regMX;
  3075  001B36  500E               	movf	_regSP,w,c
  3076  001B38  0D01               	mullw	1
  3077  001B3A  0E38               	movlw	low _virtualMemory
  3078  001B3C  24F3               	addwf	prodl,w,c
  3079  001B3E  6ED9               	movwf	fsr2l,c
  3080  001B40  0E07               	movlw	high _virtualMemory
  3081  001B42  20F4               	addwfc	prodh,w,c
  3082  001B44  6EDA               	movwf	fsr2h,c
  3083  001B46  C005  FFDF         	movff	_regMX,indf2
  3084                           
  3085                           ;emulator.c: 580: regSP += 2;
  3086  001B4A  0E02               	movlw	2
  3087  001B4C  260E               	addwf	_regSP,f,c
  3088                           
  3089                           ;emulator.c: 581: break;
  3090  001B4E  D1FB               	goto	l1584
  3091  001B50                     l1490:
  3092                           
  3093                           ;emulator.c: 585: virtualMemory[regSP] = getMXbits(0);
  3094  001B50  500E               	movf	_regSP,w,c
  3095  001B52  0D01               	mullw	1
  3096  001B54  0E38               	movlw	low _virtualMemory
  3097  001B56  24F3               	addwf	prodl,w,c
  3098  001B58  6ED9               	movwf	fsr2l,c
  3099  001B5A  0E07               	movlw	high _virtualMemory
  3100  001B5C  20F4               	addwfc	prodh,w,c
  3101  001B5E  6EDA               	movwf	fsr2h,c
  3102  001B60  0E00               	movlw	0
  3103  001B62  ECEE  F012         	call	_getMXbits
  3104  001B66  D00D               	goto	L17
  3105  001B68                     L16:
  3106                           
  3107                           ;emulator.c: 586: regSP++;
  3108  001B68  2A0E               	incf	_regSP,f,c
  3109                           
  3110                           ;emulator.c: 587: break;
  3111  001B6A  D1ED               	goto	l1584
  3112  001B6C                     l1494:
  3113                           
  3114                           ;emulator.c: 591: virtualMemory[regSP] = getMXbits(1);
  3115  001B6C  500E               	movf	_regSP,w,c
  3116  001B6E  0D01               	mullw	1
  3117  001B70  0E38               	movlw	low _virtualMemory
  3118  001B72  24F3               	addwf	prodl,w,c
  3119  001B74  6ED9               	movwf	fsr2l,c
  3120  001B76  0E07               	movlw	high _virtualMemory
  3121  001B78  20F4               	addwfc	prodh,w,c
  3122  001B7A  6EDA               	movwf	fsr2h,c
  3123  001B7C  0E01               	movlw	1
  3124  001B7E  ECEE  F012         	call	_getMXbits
  3125  001B82                     L17:
  3126  001B82  6EDF               	movwf	indf2,c
  3127  001B84  D7F1               	goto	L16
  3128  001B86                     l1498:
  3129                           
  3130                           ;emulator.c: 597: virtualMemory[regSP] = regF;
  3131  001B86  500E               	movf	_regSP,w,c
  3132  001B88  0D01               	mullw	1
  3133  001B8A  0E38               	movlw	low _virtualMemory
  3134  001B8C  24F3               	addwf	prodl,w,c
  3135  001B8E  6ED9               	movwf	fsr2l,c
  3136  001B90  0E07               	movlw	high _virtualMemory
  3137  001B92  20F4               	addwfc	prodh,w,c
  3138  001B94  6EDA               	movwf	fsr2h,c
  3139  001B96  C00D  FFDF         	movff	_regF,indf2
  3140  001B9A  D7E6               	goto	L16
  3141  001B9C                     l1502:
  3142                           
  3143                           ;emulator.c: 603: virtualMemory[regSP] = immData_1;
  3144  001B9C  500E               	movf	_regSP,w,c
  3145  001B9E  0D01               	mullw	1
  3146  001BA0  0E38               	movlw	low _virtualMemory
  3147  001BA2  24F3               	addwf	prodl,w,c
  3148  001BA4  6ED9               	movwf	fsr2l,c
  3149  001BA6  0E07               	movlw	high _virtualMemory
  3150  001BA8  20F4               	addwfc	prodh,w,c
  3151  001BAA  6EDA               	movwf	fsr2h,c
  3152  001BAC  C009  FFDF         	movff	_immData_1,indf2
  3153                           
  3154                           ;emulator.c: 604: regSP++;
  3155  001BB0  2A0E               	incf	_regSP,f,c
  3156  001BB2  D0C3               	goto	L19
  3157  001BB4                     l1508:
  3158                           
  3159                           ;emulator.c: 609: regSP--;
  3160  001BB4  060E               	decf	_regSP,f,c
  3161                           
  3162                           ;emulator.c: 611: regA = virtualMemory[regSP];
  3163  001BB6  500E               	movf	_regSP,w,c
  3164  001BB8  0D01               	mullw	1
  3165  001BBA  0E38               	movlw	low _virtualMemory
  3166  001BBC  24F3               	addwf	prodl,w,c
  3167  001BBE  6ED9               	movwf	fsr2l,c
  3168  001BC0  0E07               	movlw	high _virtualMemory
  3169  001BC2  20F4               	addwfc	prodh,w,c
  3170  001BC4                     L25:
  3171  001BC4  6EDA               	movwf	fsr2h,c
  3172  001BC6  50DF               	movf	indf2,w,c
  3173  001BC8                     L11:
  3174  001BC8  6E0B               	movwf	_regA,c
  3175                           
  3176                           ;emulator.c: 612: break;
  3177  001BCA  D1BD               	goto	l1584
  3178  001BCC                     l1512:
  3179                           
  3180                           ;emulator.c: 615: regSP--;
  3181  001BCC  060E               	decf	_regSP,f,c
  3182                           
  3183                           ;emulator.c: 617: regB = virtualMemory[regSP];
  3184  001BCE  500E               	movf	_regSP,w,c
  3185  001BD0  0D01               	mullw	1
  3186  001BD2  0E38               	movlw	low _virtualMemory
  3187  001BD4  24F3               	addwf	prodl,w,c
  3188  001BD6  6ED9               	movwf	fsr2l,c
  3189  001BD8  0E07               	movlw	high _virtualMemory
  3190  001BDA  20F4               	addwfc	prodh,w,c
  3191  001BDC  6EDA               	movwf	fsr2h,c
  3192  001BDE  50DF               	movf	indf2,w,c
  3193  001BE0  6E0C               	movwf	_regB,c
  3194                           
  3195                           ;emulator.c: 618: break;
  3196  001BE2  D1B1               	goto	l1584
  3197  001BE4                     l1516:
  3198                           
  3199                           ;emulator.c: 621: regSP -= 2;
  3200  001BE4  0E02               	movlw	2
  3201  001BE6  5E0E               	subwf	_regSP,f,c
  3202                           
  3203                           ;emulator.c: 623: regMX = virtualMemory[regSP];
  3204  001BE8  500E               	movf	_regSP,w,c
  3205  001BEA  0D01               	mullw	1
  3206  001BEC  0E38               	movlw	low _virtualMemory
  3207  001BEE  24F3               	addwf	prodl,w,c
  3208  001BF0  6ED9               	movwf	fsr2l,c
  3209  001BF2  0E07               	movlw	high _virtualMemory
  3210  001BF4  20F4               	addwfc	prodh,w,c
  3211  001BF6  6EDA               	movwf	fsr2h,c
  3212  001BF8  50DF               	movf	indf2,w,c
  3213  001BFA  6E17               	movwf	??_processOpcode& (0+255),c
  3214  001BFC  5017               	movf	??_processOpcode,w,c
  3215  001BFE  6E05               	movwf	_regMX,c
  3216  001C00  6A06               	clrf	_regMX+1,c
  3217                           
  3218                           ;emulator.c: 624: break;
  3219  001C02  D1A1               	goto	l1584
  3220  001C04                     l1520:
  3221                           
  3222                           ;emulator.c: 627: regSP--;
  3223  001C04  060E               	decf	_regSP,f,c
  3224                           
  3225                           ;emulator.c: 629: setMXbits(0, virtualMemory[regSP]);
  3226  001C06  500E               	movf	_regSP,w,c
  3227  001C08  0D01               	mullw	1
  3228  001C0A  0E38               	movlw	low _virtualMemory
  3229  001C0C  24F3               	addwf	prodl,w,c
  3230  001C0E  6ED9               	movwf	fsr2l,c
  3231  001C10  0E07               	movlw	high _virtualMemory
  3232  001C12  20F4               	addwfc	prodh,w,c
  3233  001C14  6EDA               	movwf	fsr2h,c
  3234  001C16  50DF               	movf	indf2,w,c
  3235  001C18  6E0F               	movwf	setMXbits@value,c
  3236  001C1A  0E00               	movlw	0
  3237  001C1C  ECA2  F012         	call	_setMXbits
  3238                           
  3239                           ;emulator.c: 630: break;
  3240  001C20  D192               	goto	l1584
  3241  001C22                     l1524:
  3242                           
  3243                           ;emulator.c: 633: regSP--;
  3244  001C22  060E               	decf	_regSP,f,c
  3245                           
  3246                           ;emulator.c: 635: setMXbits(1, virtualMemory[regSP]);
  3247  001C24  500E               	movf	_regSP,w,c
  3248  001C26  0D01               	mullw	1
  3249  001C28  0E38               	movlw	low _virtualMemory
  3250  001C2A  24F3               	addwf	prodl,w,c
  3251  001C2C  6ED9               	movwf	fsr2l,c
  3252  001C2E  0E07               	movlw	high _virtualMemory
  3253  001C30  20F4               	addwfc	prodh,w,c
  3254  001C32  6EDA               	movwf	fsr2h,c
  3255  001C34  50DF               	movf	indf2,w,c
  3256  001C36  6E0F               	movwf	setMXbits@value,c
  3257  001C38  0E01               	movlw	1
  3258  001C3A  ECA2  F012         	call	_setMXbits
  3259                           
  3260                           ;emulator.c: 636: break;
  3261  001C3E  D183               	goto	l1584
  3262  001C40                     l1528:
  3263                           
  3264                           ;emulator.c: 643: regA_temp16 += (uint16_t) regB;
  3265  001C40  500C               	movf	_regB,w,c
  3266  001C42  261A               	addwf	processOpcode@regA_temp16,f,c
  3267  001C44  0E00               	movlw	0
  3268  001C46  221B               	addwfc	processOpcode@regA_temp16+1,f,c
  3269                           
  3270                           ;emulator.c: 644: if (regA_temp16 > 255) setFbits(4, 1);
  3271  001C48  0E00               	movlw	0
  3272  001C4A  5C1A               	subwf	processOpcode@regA_temp16,w,c
  3273  001C4C  0E01               	movlw	1
  3274  001C4E  581B               	subwfb	processOpcode@regA_temp16+1,w,c
  3275  001C50  A0D8               	btfss	status,0,c
  3276  001C52  D008               	goto	l1532
  3277  001C54  6E17               	movwf	??_processOpcode& (0+255),c
  3278  001C56  0E01               	movlw	1
  3279  001C58  6E0F               	movwf	setFbits@value,c
  3280  001C5A  5017               	movf	??_processOpcode& (0+255),w,c
  3281  001C5C  0E04               	movlw	4
  3282  001C5E  EC51  F012         	call	_setFbits
  3283  001C62  D007               	goto	l1534
  3284  001C64                     l1532:
  3285                           
  3286                           ;emulator.c: 645: else setFbits(4, 0);
  3287  001C64  6E17               	movwf	??_processOpcode& (0+255),c
  3288  001C66  0E00               	movlw	0
  3289  001C68  6E0F               	movwf	setFbits@value,c
  3290  001C6A  5017               	movf	??_processOpcode& (0+255),w,c
  3291  001C6C  0E04               	movlw	4
  3292  001C6E  EC51  F012         	call	_setFbits
  3293  001C72                     l1534:
  3294                           
  3295                           ;emulator.c: 646: regA += regB;
  3296  001C72  500C               	movf	_regB,w,c
  3297  001C74                     L12:
  3298  001C74  260B               	addwf	_regA,f,c
  3299                           
  3300                           ;emulator.c: 647: break;
  3301  001C76  D167               	goto	l1584
  3302  001C78                     l1536:
  3303                           
  3304                           ;emulator.c: 651: regA_temp16 += (uint16_t) immData_1;
  3305  001C78  5009               	movf	_immData_1,w,c
  3306  001C7A  261A               	addwf	processOpcode@regA_temp16,f,c
  3307  001C7C  0E00               	movlw	0
  3308  001C7E  221B               	addwfc	processOpcode@regA_temp16+1,f,c
  3309                           
  3310                           ;emulator.c: 652: if (regA_temp16 > 255) setFbits(4, 1);
  3311  001C80  0E00               	movlw	0
  3312  001C82  5C1A               	subwf	processOpcode@regA_temp16,w,c
  3313  001C84  0E01               	movlw	1
  3314  001C86  581B               	subwfb	processOpcode@regA_temp16+1,w,c
  3315  001C88  A0D8               	btfss	status,0,c
  3316  001C8A  D008               	goto	l1540
  3317  001C8C  6E17               	movwf	??_processOpcode& (0+255),c
  3318  001C8E  0E01               	movlw	1
  3319  001C90  6E0F               	movwf	setFbits@value,c
  3320  001C92  5017               	movf	??_processOpcode& (0+255),w,c
  3321  001C94  0E04               	movlw	4
  3322  001C96  EC51  F012         	call	_setFbits
  3323  001C9A  D007               	goto	l1542
  3324  001C9C                     l1540:
  3325                           
  3326                           ;emulator.c: 653: else setFbits(4, 0);
  3327  001C9C  6E17               	movwf	??_processOpcode& (0+255),c
  3328  001C9E  0E00               	movlw	0
  3329  001CA0  6E0F               	movwf	setFbits@value,c
  3330  001CA2  5017               	movf	??_processOpcode& (0+255),w,c
  3331  001CA4  0E04               	movlw	4
  3332  001CA6  EC51  F012         	call	_setFbits
  3333  001CAA                     l1542:
  3334                           
  3335                           ;emulator.c: 655: regA += immData_1;
  3336  001CAA  5009               	movf	_immData_1,w,c
  3337  001CAC  260B               	addwf	_regA,f,c
  3338  001CAE  D045               	goto	L19
  3339  001CB0                     l333:
  3340                           
  3341                           ;emulator.c: 662: regA_temp16 = regA;
  3342  001CB0  C00B  F01A         	movff	_regA,processOpcode@regA_temp16
  3343  001CB4  6A1B               	clrf	processOpcode@regA_temp16+1,c
  3344                           
  3345                           ;emulator.c: 664: regA_temp16 += 255;
  3346  001CB6  0EFF               	movlw	255
  3347  001CB8  261A               	addwf	processOpcode@regA_temp16,f,c
  3348  001CBA  0E00               	movlw	0
  3349  001CBC  221B               	addwfc	processOpcode@regA_temp16+1,f,c
  3350                           
  3351                           ;emulator.c: 665: regA_temp16 -= regB;
  3352  001CBE  500C               	movf	_regB,w,c
  3353  001CC0  5E1A               	subwf	processOpcode@regA_temp16,f,c
  3354  001CC2  0E00               	movlw	0
  3355  001CC4  5A1B               	subwfb	processOpcode@regA_temp16+1,f,c
  3356                           
  3357                           ;emulator.c: 666: if (regA_temp16 < 255) setFbits(4, 1);
  3358  001CC6  0EFF               	movlw	255
  3359  001CC8  5C1A               	subwf	processOpcode@regA_temp16,w,c
  3360  001CCA  0E00               	movlw	0
  3361  001CCC  581B               	subwfb	processOpcode@regA_temp16+1,w,c
  3362  001CCE  B0D8               	btfsc	status,0,c
  3363  001CD0  D008               	goto	l1550
  3364  001CD2  6E17               	movwf	??_processOpcode& (0+255),c
  3365  001CD4  0E01               	movlw	1
  3366  001CD6  6E0F               	movwf	setFbits@value,c
  3367  001CD8  5017               	movf	??_processOpcode& (0+255),w,c
  3368  001CDA  0E04               	movlw	4
  3369  001CDC  EC51  F012         	call	_setFbits
  3370  001CE0  D007               	goto	l1552
  3371  001CE2                     l1550:
  3372                           
  3373                           ;emulator.c: 667: else setFbits(4, 0);
  3374  001CE2  6E17               	movwf	??_processOpcode& (0+255),c
  3375  001CE4  0E00               	movlw	0
  3376  001CE6  6E0F               	movwf	setFbits@value,c
  3377  001CE8  5017               	movf	??_processOpcode& (0+255),w,c
  3378  001CEA  0E04               	movlw	4
  3379  001CEC  EC51  F012         	call	_setFbits
  3380  001CF0                     l1552:
  3381                           
  3382                           ;emulator.c: 668: regA -= regB;
  3383  001CF0  500C               	movf	_regB,w,c
  3384  001CF2  5E0B               	subwf	_regA,f,c
  3385                           
  3386                           ;emulator.c: 669: break;
  3387  001CF4  D128               	goto	l1584
  3388  001CF6                     l336:
  3389                           
  3390                           ;emulator.c: 673: regA_temp16 = regA;
  3391  001CF6  C00B  F01A         	movff	_regA,processOpcode@regA_temp16
  3392  001CFA  6A1B               	clrf	processOpcode@regA_temp16+1,c
  3393                           
  3394                           ;emulator.c: 675: regA_temp16 += 255;
  3395  001CFC  0EFF               	movlw	255
  3396  001CFE  261A               	addwf	processOpcode@regA_temp16,f,c
  3397  001D00  0E00               	movlw	0
  3398  001D02  221B               	addwfc	processOpcode@regA_temp16+1,f,c
  3399                           
  3400                           ;emulator.c: 676: regA_temp16 -= immData_1;
  3401  001D04  5009               	movf	_immData_1,w,c
  3402  001D06  5E1A               	subwf	processOpcode@regA_temp16,f,c
  3403  001D08  0E00               	movlw	0
  3404  001D0A  5A1B               	subwfb	processOpcode@regA_temp16+1,f,c
  3405                           
  3406                           ;emulator.c: 677: if (regA_temp16 < 255) setFbits(4, 1);
  3407  001D0C  0EFF               	movlw	255
  3408  001D0E  5C1A               	subwf	processOpcode@regA_temp16,w,c
  3409  001D10  0E00               	movlw	0
  3410  001D12  581B               	subwfb	processOpcode@regA_temp16+1,w,c
  3411  001D14  B0D8               	btfsc	status,0,c
  3412  001D16  D008               	goto	l1558
  3413  001D18  6E17               	movwf	??_processOpcode& (0+255),c
  3414  001D1A  0E01               	movlw	1
  3415  001D1C  6E0F               	movwf	setFbits@value,c
  3416  001D1E  5017               	movf	??_processOpcode& (0+255),w,c
  3417  001D20  0E04               	movlw	4
  3418  001D22  EC51  F012         	call	_setFbits
  3419  001D26  D007               	goto	l1560
  3420  001D28                     l1558:
  3421                           
  3422                           ;emulator.c: 678: else setFbits(4, 0);
  3423  001D28  6E17               	movwf	??_processOpcode& (0+255),c
  3424  001D2A  0E00               	movlw	0
  3425  001D2C  6E0F               	movwf	setFbits@value,c
  3426  001D2E  5017               	movf	??_processOpcode& (0+255),w,c
  3427  001D30  0E04               	movlw	4
  3428  001D32  EC51  F012         	call	_setFbits
  3429  001D36                     l1560:
  3430                           
  3431                           ;emulator.c: 679: regA -= immData_1;
  3432  001D36  5009               	movf	_immData_1,w,c
  3433  001D38  5E0B               	subwf	_regA,f,c
  3434  001D3A                     L19:
  3435                           
  3436                           ;emulator.c: 680: regPC++;
  3437  001D3A  4A07               	infsnz	_regPC,f,c
  3438  001D3C  2A08               	incf	_regPC+1,f,c
  3439                           
  3440                           ;emulator.c: 681: break;
  3441  001D3E  D103               	goto	l1584
  3442  001D40                     l1564:
  3443                           
  3444                           ;emulator.c: 685: regA_temp16 = regA + 1;
  3445  001D40  0E01               	movlw	1
  3446  001D42  240B               	addwf	_regA,w,c
  3447  001D44  6E1A               	movwf	processOpcode@regA_temp16,c
  3448  001D46  6A1B               	clrf	processOpcode@regA_temp16+1,c
  3449  001D48  0E00               	movlw	0
  3450  001D4A  221B               	addwfc	processOpcode@regA_temp16+1,f,c
  3451                           
  3452                           ;emulator.c: 686: if (regA_temp16 > 255) setFbits(4, 1);
  3453  001D4C  0E00               	movlw	0
  3454  001D4E  5C1A               	subwf	processOpcode@regA_temp16,w,c
  3455  001D50  0E01               	movlw	1
  3456  001D52  581B               	subwfb	processOpcode@regA_temp16+1,w,c
  3457  001D54  A0D8               	btfss	status,0,c
  3458  001D56  D008               	goto	l1568
  3459  001D58  6E17               	movwf	??_processOpcode& (0+255),c
  3460  001D5A  0E01               	movlw	1
  3461  001D5C  6E0F               	movwf	setFbits@value,c
  3462  001D5E  5017               	movf	??_processOpcode& (0+255),w,c
  3463  001D60  0E04               	movlw	4
  3464  001D62  EC51  F012         	call	_setFbits
  3465  001D66  D007               	goto	l1570
  3466  001D68                     l1568:
  3467                           
  3468                           ;emulator.c: 687: else setFbits(4, 0);
  3469  001D68  6E17               	movwf	??_processOpcode& (0+255),c
  3470  001D6A  0E00               	movlw	0
  3471  001D6C  6E0F               	movwf	setFbits@value,c
  3472  001D6E  5017               	movf	??_processOpcode& (0+255),w,c
  3473  001D70  0E04               	movlw	4
  3474  001D72  EC51  F012         	call	_setFbits
  3475  001D76                     l1570:
  3476                           
  3477                           ;emulator.c: 688: regA++;
  3478  001D76  2A0B               	incf	_regA,f,c
  3479                           
  3480                           ;emulator.c: 689: break;
  3481  001D78  D0E6               	goto	l1584
  3482  001D7A                     l1572:
  3483                           
  3484                           ;emulator.c: 693: regA_temp8 = regA - 1;
  3485  001D7A  040B               	decf	_regA,w,c
  3486  001D7C  6E19               	movwf	processOpcode@regA_temp8,c
  3487                           
  3488                           ;emulator.c: 694: if (regA_temp8 == 255) setFbits(4, 1);
  3489  001D7E  2819               	incf	processOpcode@regA_temp8,w,c
  3490  001D80  A4D8               	btfss	status,2,c
  3491  001D82  D008               	goto	l1576
  3492  001D84  6E17               	movwf	??_processOpcode& (0+255),c
  3493  001D86  0E01               	movlw	1
  3494  001D88  6E0F               	movwf	setFbits@value,c
  3495  001D8A  5017               	movf	??_processOpcode& (0+255),w,c
  3496  001D8C  0E04               	movlw	4
  3497  001D8E  EC51  F012         	call	_setFbits
  3498  001D92  D007               	goto	l1578
  3499  001D94                     l1576:
  3500                           
  3501                           ;emulator.c: 695: else setFbits(4, 0);
  3502  001D94  6E17               	movwf	??_processOpcode& (0+255),c
  3503  001D96  0E00               	movlw	0
  3504  001D98  6E0F               	movwf	setFbits@value,c
  3505  001D9A  5017               	movf	??_processOpcode& (0+255),w,c
  3506  001D9C  0E04               	movlw	4
  3507  001D9E  EC51  F012         	call	_setFbits
  3508  001DA2                     l1578:
  3509                           
  3510                           ;emulator.c: 696: regA--;
  3511  001DA2  060B               	decf	_regA,f,c
  3512                           
  3513                           ;emulator.c: 697: break;
  3514  001DA4  D0D0               	goto	l1584
  3515  001DA6                     l1582:
  3516  001DA6  0E38               	movlw	low _virtualMemory
  3517  001DA8  2407               	addwf	_regPC,w,c
  3518  001DAA  6ED9               	movwf	fsr2l,c
  3519  001DAC  0E07               	movlw	high _virtualMemory
  3520  001DAE  2008               	addwfc	_regPC+1,w,c
  3521  001DB0  6EDA               	movwf	fsr2h,c
  3522  001DB2  50DF               	movf	indf2,w,c
  3523                           
  3524                           ; Switch size 1, requested type "space"
  3525                           ; Number of cases is 67, Range of values is 1 to 85
  3526                           ; switch strategies available:
  3527                           ; Name         Instructions Cycles
  3528                           ; simple_byte          202   102 (average)
  3529                           ;	Chosen strategy is simple_byte
  3530  001DB4  0A01               	xorlw	1	; case 1
  3531  001DB6  B4D8               	btfsc	status,2,c
  3532  001DB8  D52E               	goto	l1308
  3533  001DBA  0A03               	xorlw	3	; case 2
  3534  001DBC  B4D8               	btfsc	status,2,c
  3535  001DBE  D533               	goto	l1310
  3536  001DC0  0A01               	xorlw	1	; case 3
  3537  001DC2  B4D8               	btfsc	status,2,c
  3538  001DC4  D538               	goto	l1312
  3539  001DC6  0A07               	xorlw	7	; case 4
  3540  001DC8  B4D8               	btfsc	status,2,c
  3541  001DCA  D539               	goto	l1314
  3542  001DCC  0A01               	xorlw	1	; case 5
  3543  001DCE  B4D8               	btfsc	status,2,c
  3544  001DD0  D53B               	goto	l1318
  3545  001DD2  0A03               	xorlw	3	; case 6
  3546  001DD4  B4D8               	btfsc	status,2,c
  3547  001DD6  D53E               	goto	l1320
  3548  001DD8  0A01               	xorlw	1	; case 7
  3549  001DDA  B4D8               	btfsc	status,2,c
  3550  001DDC  D541               	goto	l1324
  3551  001DDE  0A17               	xorlw	23	; case 16
  3552  001DE0  B4D8               	btfsc	status,2,c
  3553  001DE2  D544               	goto	l1328
  3554  001DE4  0A01               	xorlw	1	; case 17
  3555  001DE6  B4D8               	btfsc	status,2,c
  3556  001DE8  D547               	goto	l1330
  3557  001DEA  0A03               	xorlw	3	; case 18
  3558  001DEC  B4D8               	btfsc	status,2,c
  3559  001DEE  D548               	goto	l1332
  3560  001DF0  0A01               	xorlw	1	; case 19
  3561  001DF2  B4D8               	btfsc	status,2,c
  3562  001DF4  D549               	goto	l254
  3563  001DF6  0A07               	xorlw	7	; case 20
  3564  001DF8  B4D8               	btfsc	status,2,c
  3565  001DFA  D549               	goto	l255
  3566  001DFC  0A01               	xorlw	1	; case 21
  3567  001DFE  B4D8               	btfsc	status,2,c
  3568  001E00  D549               	goto	l256
  3569  001E02  0A03               	xorlw	3	; case 22
  3570  001E04  B4D8               	btfsc	status,2,c
  3571  001E06  D549               	goto	l1334
  3572  001E08  0A01               	xorlw	1	; case 23
  3573  001E0A  B4D8               	btfsc	status,2,c
  3574  001E0C  D54F               	goto	l1336
  3575  001E0E  0A0F               	xorlw	15	; case 24
  3576  001E10  B4D8               	btfsc	status,2,c
  3577  001E12  D552               	goto	l1338
  3578  001E14  0A01               	xorlw	1	; case 25
  3579  001E16  B4D8               	btfsc	status,2,c
  3580  001E18  D555               	goto	l260
  3581  001E1A  0A03               	xorlw	3	; case 26
  3582  001E1C  B4D8               	btfsc	status,2,c
  3583  001E1E  D555               	goto	l261
  3584  001E20  0A01               	xorlw	1	; case 27
  3585  001E22  B4D8               	btfsc	status,2,c
  3586  001E24  D555               	goto	l262
  3587  001E26  0A07               	xorlw	7	; case 28
  3588  001E28  B4D8               	btfsc	status,2,c
  3589  001E2A  D555               	goto	l263
  3590  001E2C  0A3C               	xorlw	60	; case 32
  3591  001E2E  B4D8               	btfsc	status,2,c
  3592  001E30  D559               	goto	l1342
  3593  001E32  0A01               	xorlw	1	; case 33
  3594  001E34  B4D8               	btfsc	status,2,c
  3595  001E36  D559               	goto	l1344
  3596  001E38  0A03               	xorlw	3	; case 34
  3597  001E3A  B4D8               	btfsc	status,2,c
  3598  001E3C  D559               	goto	l1348
  3599  001E3E  0A01               	xorlw	1	; case 35
  3600  001E40  B4D8               	btfsc	status,2,c
  3601  001E42  D559               	goto	l1350
  3602  001E44  0A07               	xorlw	7	; case 36
  3603  001E46  B4D8               	btfsc	status,2,c
  3604  001E48  D55C               	goto	l1356
  3605  001E4A  0A01               	xorlw	1	; case 37
  3606  001E4C  B4D8               	btfsc	status,2,c
  3607  001E4E  D55C               	goto	l1360
  3608  001E50  0A03               	xorlw	3	; case 38
  3609  001E52  B4D8               	btfsc	status,2,c
  3610  001E54  D55B               	goto	l271
  3611  001E56  0A01               	xorlw	1	; case 39
  3612  001E58  B4D8               	btfsc	status,2,c
  3613  001E5A  D56D               	goto	l274
  3614  001E5C  0A0F               	xorlw	15	; case 40
  3615  001E5E  B4D8               	btfsc	status,2,c
  3616  001E60  D57F               	goto	l277
  3617  001E62  0A01               	xorlw	1	; case 41
  3618  001E64  B4D8               	btfsc	status,2,c
  3619  001E66  D581               	goto	l278
  3620  001E68  0A03               	xorlw	3	; case 42
  3621  001E6A  B4D8               	btfsc	status,2,c
  3622  001E6C  D582               	goto	l1378
  3623  001E6E  0A01               	xorlw	1	; case 43
  3624  001E70  B4D8               	btfsc	status,2,c
  3625  001E72  D544               	goto	l1354
  3626  001E74  0A1B               	xorlw	27	; case 48
  3627  001E76  B4D8               	btfsc	status,2,c
  3628  001E78  D624               	goto	L13
  3629  001E7A  0A01               	xorlw	1	; case 49
  3630  001E7C  B4D8               	btfsc	status,2,c
  3631  001E7E  D5B2               	goto	l1396
  3632  001E80  0A03               	xorlw	3	; case 50
  3633  001E82  B4D8               	btfsc	status,2,c
  3634  001E84  D5B2               	goto	l1400
  3635  001E86  0A01               	xorlw	1	; case 51
  3636  001E88  B4D8               	btfsc	status,2,c
  3637  001E8A  D5B7               	goto	l1404
  3638  001E8C  0A07               	xorlw	7	; case 52
  3639  001E8E  B4D8               	btfsc	status,2,c
  3640  001E90  D5C2               	goto	l1410
  3641  001E92  0A01               	xorlw	1	; case 53
  3642  001E94  B4D8               	btfsc	status,2,c
  3643  001E96  D5C3               	goto	l1414
  3644  001E98  0A03               	xorlw	3	; case 54
  3645  001E9A  B4D8               	btfsc	status,2,c
  3646  001E9C  D5C9               	goto	l1420
  3647  001E9E  0A01               	xorlw	1	; case 55
  3648  001EA0  B4D8               	btfsc	status,2,c
  3649  001EA2  D5CA               	goto	l1424
  3650  001EA4  0A0F               	xorlw	15	; case 56
  3651  001EA6  B4D8               	btfsc	status,2,c
  3652  001EA8  D5D1               	goto	l1430
  3653  001EAA  0A01               	xorlw	1	; case 57
  3654  001EAC  B4D8               	btfsc	status,2,c
  3655  001EAE  D5D2               	goto	l1434
  3656  001EB0  0A03               	xorlw	3	; case 58
  3657  001EB2  B4D8               	btfsc	status,2,c
  3658  001EB4  D5D9               	goto	l1440
  3659  001EB6  0A01               	xorlw	1	; case 59
  3660  001EB8  B4D8               	btfsc	status,2,c
  3661  001EBA  D5DA               	goto	l1444
  3662  001EBC  0A07               	xorlw	7	; case 60
  3663  001EBE  B4D8               	btfsc	status,2,c
  3664  001EC0  D5E1               	goto	l1450
  3665  001EC2  0A01               	xorlw	1	; case 61
  3666  001EC4  B4D8               	btfsc	status,2,c
  3667  001EC6  D5E3               	goto	l1454
  3668  001EC8  0A03               	xorlw	3	; case 62
  3669  001ECA  B4D8               	btfsc	status,2,c
  3670  001ECC  D5EE               	goto	l1460
  3671  001ECE  0A01               	xorlw	1	; case 63
  3672  001ED0  B4D8               	btfsc	status,2,c
  3673  001ED2  D5FC               	goto	l1466
  3674  001ED4  0A7F               	xorlw	127	; case 64
  3675  001ED6  B4D8               	btfsc	status,2,c
  3676  001ED8  D608               	goto	l1474
  3677  001EDA  0A01               	xorlw	1	; case 65
  3678  001EDC  B4D8               	btfsc	status,2,c
  3679  001EDE  D615               	goto	l1478
  3680  001EE0  0A03               	xorlw	3	; case 66
  3681  001EE2  B4D8               	btfsc	status,2,c
  3682  001EE4  D61D               	goto	l1482
  3683  001EE6  0A01               	xorlw	1	; case 67
  3684  001EE8  B4D8               	btfsc	status,2,c
  3685  001EEA  D625               	goto	l1486
  3686  001EEC  0A07               	xorlw	7	; case 68
  3687  001EEE  B4D8               	btfsc	status,2,c
  3688  001EF0  D62F               	goto	l1490
  3689  001EF2  0A01               	xorlw	1	; case 69
  3690  001EF4  B4D8               	btfsc	status,2,c
  3691  001EF6  D63A               	goto	l1494
  3692  001EF8  0A03               	xorlw	3	; case 70
  3693  001EFA  B4D8               	btfsc	status,2,c
  3694  001EFC  D644               	goto	l1498
  3695  001EFE  0A01               	xorlw	1	; case 71
  3696  001F00  B4D8               	btfsc	status,2,c
  3697  001F02  D64C               	goto	l1502
  3698  001F04  0A0F               	xorlw	15	; case 72
  3699  001F06  B4D8               	btfsc	status,2,c
  3700  001F08  D655               	goto	l1508
  3701  001F0A  0A01               	xorlw	1	; case 73
  3702  001F0C  B4D8               	btfsc	status,2,c
  3703  001F0E  D65E               	goto	l1512
  3704  001F10  0A03               	xorlw	3	; case 74
  3705  001F12  B4D8               	btfsc	status,2,c
  3706  001F14  D667               	goto	l1516
  3707  001F16  0A01               	xorlw	1	; case 75
  3708  001F18  B4D8               	btfsc	status,2,c
  3709  001F1A  D674               	goto	l1520
  3710  001F1C  0A07               	xorlw	7	; case 76
  3711  001F1E  B4D8               	btfsc	status,2,c
  3712  001F20  D680               	goto	l1524
  3713  001F22  0A1C               	xorlw	28	; case 80
  3714  001F24  B4D8               	btfsc	status,2,c
  3715  001F26  D68C               	goto	l1528
  3716  001F28  0A01               	xorlw	1	; case 81
  3717  001F2A  B4D8               	btfsc	status,2,c
  3718  001F2C  D6A5               	goto	l1536
  3719  001F2E  0A03               	xorlw	3	; case 82
  3720  001F30  B4D8               	btfsc	status,2,c
  3721  001F32  D6BE               	goto	l333
  3722  001F34  0A01               	xorlw	1	; case 83
  3723  001F36  B4D8               	btfsc	status,2,c
  3724  001F38  D6DE               	goto	l336
  3725  001F3A  0A07               	xorlw	7	; case 84
  3726  001F3C  B4D8               	btfsc	status,2,c
  3727  001F3E  D700               	goto	l1564
  3728  001F40  0A01               	xorlw	1	; case 85
  3729  001F42  B4D8               	btfsc	status,2,c
  3730  001F44  D71A               	goto	l1572
  3731  001F46                     l1584:
  3732                           
  3733                           ;emulator.c: 701: regPC++;
  3734  001F46  4A07               	infsnz	_regPC,f,c
  3735  001F48  2A08               	incf	_regPC+1,f,c
  3736  001F4A  0012               	return	
  3737  001F4C                     __end_of_processOpcode:
  3738                           	opt stack 0
  3739                           tblptru	equ	0xFF8
  3740                           tblptrh	equ	0xFF7
  3741                           tblptrl	equ	0xFF6
  3742                           tablat	equ	0xFF5
  3743                           prodh	equ	0xFF4
  3744                           prodl	equ	0xFF3
  3745                           postinc0	equ	0xFEE
  3746                           wreg	equ	0xFE8
  3747                           postdec1	equ	0xFE5
  3748                           fsr1h	equ	0xFE2
  3749                           fsr1l	equ	0xFE1
  3750                           indf2	equ	0xFDF
  3751                           fsr2h	equ	0xFDA
  3752                           fsr2l	equ	0xFD9
  3753                           status	equ	0xFD8
  3754                           
  3755 ;; *************** function _update_immData *****************
  3756 ;; Defined at:
  3757 ;;		line 240 in file "source/emulator.c"
  3758 ;; Parameters:    Size  Location     Type
  3759 ;;		None
  3760 ;; Auto vars:     Size  Location     Type
  3761 ;;		None
  3762 ;; Return value:  Size  Location     Type
  3763 ;;		None               void
  3764 ;; Registers used:
  3765 ;;		wreg, status,2, status,0
  3766 ;; Tracked objects:
  3767 ;;		On entry : 0/0
  3768 ;;		On exit  : 0/0
  3769 ;;		Unchanged: 0/0
  3770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3773 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3774 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3775 ;;Total ram usage:        2 bytes
  3776 ;; Hardware stack levels used:    1
  3777 ;; This function calls:
  3778 ;;		Nothing
  3779 ;; This function is called by:
  3780 ;;		_processOpcode
  3781 ;; This function uses a non-reentrant model
  3782 ;;
  3783                           
  3784                           	psect	text2
  3785  0023F4                     __ptext2:
  3786                           	opt stack 0
  3787  0023F4                     _update_immData:
  3788                           	opt stack 29
  3789                           
  3790                           ;emulator.c: 243: if (regPC + 1 == 2047 + 1) immData_1 = 256;
  3791                           
  3792                           ;incstack = 0
  3793  0023F4  0E01               	movlw	1
  3794  0023F6  2407               	addwf	_regPC,w,c
  3795  0023F8  6E0F               	movwf	??_update_immData& (0+255),c
  3796  0023FA  0E00               	movlw	0
  3797  0023FC  2008               	addwfc	_regPC+1,w,c
  3798  0023FE  6E10               	movwf	(??_update_immData+1)& (0+255),c
  3799  002400  5010               	movf	??_update_immData+1,w,c
  3800  002402  0A08               	xorlw	8
  3801  002404  100F               	iorwf	??_update_immData,w,c
  3802  002406  A4D8               	btfss	status,2,c
  3803  002408  D004               	goto	l1248
  3804  00240A  6E0F               	movwf	??_update_immData& (0+255),c
  3805  00240C  0E00               	movlw	0
  3806  00240E  6E09               	movwf	_immData_1,c
  3807  002410  500F               	movf	??_update_immData& (0+255),w,c
  3808  002412                     l1248:
  3809                           
  3810                           ;emulator.c: 244: if (regPC + 2 == 2047 + 1) immData_2 = 256;
  3811  002412  0E02               	movlw	2
  3812  002414  2407               	addwf	_regPC,w,c
  3813  002416  6E0F               	movwf	??_update_immData& (0+255),c
  3814  002418  0E00               	movlw	0
  3815  00241A  2008               	addwfc	_regPC+1,w,c
  3816  00241C  6E10               	movwf	(??_update_immData+1)& (0+255),c
  3817  00241E  5010               	movf	??_update_immData+1,w,c
  3818  002420  0A08               	xorlw	8
  3819  002422  100F               	iorwf	??_update_immData,w,c
  3820  002424  A4D8               	btfss	status,2,c
  3821  002426  D004               	goto	l1252
  3822  002428  6E0F               	movwf	??_update_immData& (0+255),c
  3823  00242A  0E00               	movlw	0
  3824  00242C  6E0A               	movwf	_immData_2,c
  3825  00242E  500F               	movf	??_update_immData& (0+255),w,c
  3826  002430                     l1252:
  3827                           
  3828                           ;emulator.c: 245: if (regPC + 2 == 2047 + 2) immData_2 = 256 + 1;
  3829  002430  0E02               	movlw	2
  3830  002432  2407               	addwf	_regPC,w,c
  3831  002434  6E0F               	movwf	??_update_immData& (0+255),c
  3832  002436  0E00               	movlw	0
  3833  002438  2008               	addwfc	_regPC+1,w,c
  3834  00243A  6E10               	movwf	(??_update_immData+1)& (0+255),c
  3835  00243C  040F               	decf	??_update_immData,w,c
  3836  00243E  0E08               	movlw	8
  3837  002440  B4D8               	btfsc	status,2,c
  3838  002442  1810               	xorwf	??_update_immData+1,w,c
  3839  002444  A4D8               	btfss	status,2,c
  3840  002446  0012               	return	
  3841  002448  6E0F               	movwf	??_update_immData& (0+255),c
  3842  00244A  0E01               	movlw	1
  3843  00244C  6E0A               	movwf	_immData_2,c
  3844  00244E  500F               	movf	??_update_immData& (0+255),w,c
  3845  002450  0012               	return	
  3846  002452                     __end_of_update_immData:
  3847                           	opt stack 0
  3848                           tblptru	equ	0xFF8
  3849                           tblptrh	equ	0xFF7
  3850                           tblptrl	equ	0xFF6
  3851                           tablat	equ	0xFF5
  3852                           prodh	equ	0xFF4
  3853                           prodl	equ	0xFF3
  3854                           postinc0	equ	0xFEE
  3855                           wreg	equ	0xFE8
  3856                           postdec1	equ	0xFE5
  3857                           fsr1h	equ	0xFE2
  3858                           fsr1l	equ	0xFE1
  3859                           indf2	equ	0xFDF
  3860                           fsr2h	equ	0xFDA
  3861                           fsr2l	equ	0xFD9
  3862                           status	equ	0xFD8
  3863                           
  3864 ;; *************** function _setPortData *****************
  3865 ;; Defined at:
  3866 ;;		line 212 in file "source/emulator.c"
  3867 ;; Parameters:    Size  Location     Type
  3868 ;;  portNumber      1    wreg     unsigned char 
  3869 ;;  outputData      1    4[COMRAM] unsigned char 
  3870 ;; Auto vars:     Size  Location     Type
  3871 ;;  portNumber      1    5[COMRAM] unsigned char 
  3872 ;;  outputData_t    2    6[COMRAM] unsigned int 
  3873 ;; Return value:  Size  Location     Type
  3874 ;;		None               void
  3875 ;; Registers used:
  3876 ;;		wreg, status,2, status,0, cstack
  3877 ;; Tracked objects:
  3878 ;;		On entry : 0/0
  3879 ;;		On exit  : 0/0
  3880 ;;		Unchanged: 0/0
  3881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3882 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3883 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3885 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3886 ;;Total ram usage:        4 bytes
  3887 ;; Hardware stack levels used:    1
  3888 ;; Hardware stack levels required when called:    1
  3889 ;; This function calls:
  3890 ;;		_dispSeg
  3891 ;;		_enableSerial
  3892 ;; This function is called by:
  3893 ;;		_processOpcode
  3894 ;; This function uses a non-reentrant model
  3895 ;;
  3896                           
  3897                           	psect	text3
  3898  00226A                     __ptext3:
  3899                           	opt stack 0
  3900  00226A                     _setPortData:
  3901                           	opt stack 28
  3902                           
  3903                           ;incstack = 0
  3904                           ;setPortData@portNumber stored from wreg
  3905  00226A  CFE8 F014          	movff	wreg,setPortData@portNumber
  3906                           
  3907                           ;emulator.c: 214: uint16_t outputData_temp16;
  3908                           ;emulator.c: 215: switch (portNumber)
  3909  00226E  D03B               	goto	l1300
  3910  002270                     l222:
  3911                           
  3912                           ;emulator.c: 218: if (outputData == 0) outputData_temp16 = 1200;
  3913  002270  6613               	tstfsz	setPortData@outputData,c
  3914  002272  D004               	goto	l1276
  3915  002274  0E04               	movlw	4
  3916  002276  6E16               	movwf	setPortData@outputData_temp16+1,c
  3917  002278  0EB0               	movlw	176
  3918  00227A  6E15               	movwf	setPortData@outputData_temp16,c
  3919  00227C                     l1276:
  3920                           
  3921                           ;emulator.c: 219: if (outputData == 1) outputData_temp16 = 2400;
  3922  00227C  0413               	decf	setPortData@outputData,w,c
  3923  00227E  A4D8               	btfss	status,2,c
  3924  002280  D004               	goto	l1280
  3925  002282  0E09               	movlw	9
  3926  002284  6E16               	movwf	setPortData@outputData_temp16+1,c
  3927  002286  0E60               	movlw	96
  3928  002288  6E15               	movwf	setPortData@outputData_temp16,c
  3929  00228A                     l1280:
  3930                           
  3931                           ;emulator.c: 220: if (outputData == 2) outputData_temp16 = 9600;
  3932  00228A  5013               	movf	setPortData@outputData,w,c
  3933  00228C  0A02               	xorlw	2
  3934  00228E  A4D8               	btfss	status,2,c
  3935  002290  D004               	goto	l1284
  3936  002292  0E25               	movlw	37
  3937  002294  6E16               	movwf	setPortData@outputData_temp16+1,c
  3938  002296  0E80               	movlw	128
  3939  002298  6E15               	movwf	setPortData@outputData_temp16,c
  3940  00229A                     l1284:
  3941                           
  3942                           ;emulator.c: 221: if (outputData == 3) outputData_temp16 = 10417;
  3943  00229A  5013               	movf	setPortData@outputData,w,c
  3944  00229C  0A03               	xorlw	3
  3945  00229E  A4D8               	btfss	status,2,c
  3946  0022A0  D004               	goto	l1288
  3947  0022A2  0E28               	movlw	40
  3948  0022A4  6E16               	movwf	setPortData@outputData_temp16+1,c
  3949  0022A6  0EB1               	movlw	177
  3950  0022A8  6E15               	movwf	setPortData@outputData_temp16,c
  3951  0022AA                     l1288:
  3952                           
  3953                           ;emulator.c: 222: if (outputData == 4) outputData_temp16 = 19200;
  3954  0022AA  5013               	movf	setPortData@outputData,w,c
  3955  0022AC  0A04               	xorlw	4
  3956  0022AE  A4D8               	btfss	status,2,c
  3957  0022B0  D004               	goto	l1292
  3958  0022B2  0E4B               	movlw	75
  3959  0022B4  6E16               	movwf	setPortData@outputData_temp16+1,c
  3960  0022B6  0E00               	movlw	0
  3961  0022B8  6E15               	movwf	setPortData@outputData_temp16,c
  3962  0022BA                     l1292:
  3963                           
  3964                           ;emulator.c: 223: enableSerial(outputData_temp16);
  3965  0022BA  C015  F00F         	movff	setPortData@outputData_temp16,enableSerial@baudRate
  3966  0022BE  C016  F010         	movff	setPortData@outputData_temp16+1,enableSerial@baudRate+1
  3967  0022C2  EC81  F011         	call	_enableSerial	;wreg free
  3968                           
  3969                           ;emulator.c: 224: break;
  3970  0022C6  0012               	return	
  3971  0022C8                     l229:
  3972                           
  3973                           ;emulator.c: 227: TXREG2 = outputData;
  3974  0022C8  C013  FF73         	movff	setPortData@outputData,3955	;volatile
  3975                           
  3976                           ;emulator.c: 228: break;
  3977  0022CC  0012               	return	
  3978  0022CE                     l1294:
  3979                           
  3980                           ;emulator.c: 231: dispSeg(1, outputData);
  3981  0022CE  C013  F00F         	movff	setPortData@outputData,dispSeg@letter
  3982  0022D2  0E01               	movlw	1
  3983  0022D4  ECA6  F00F         	call	_dispSeg
  3984                           
  3985                           ;emulator.c: 232: break;
  3986  0022D8  0012               	return	
  3987  0022DA                     l1296:
  3988                           
  3989                           ;emulator.c: 235: dispSeg(2, outputData);
  3990  0022DA  C013  F00F         	movff	setPortData@outputData,dispSeg@letter
  3991  0022DE  0E02               	movlw	2
  3992  0022E0  ECA6  F00F         	call	_dispSeg
  3993                           
  3994                           ;emulator.c: 236: break;
  3995  0022E4  0012               	return	
  3996  0022E6                     l1300:
  3997  0022E6  5014               	movf	setPortData@portNumber,w,c
  3998                           
  3999                           ; Switch size 1, requested type "space"
  4000                           ; Number of cases is 4, Range of values is 0 to 4
  4001                           ; switch strategies available:
  4002                           ; Name         Instructions Cycles
  4003                           ; simple_byte           13     7 (average)
  4004                           ;	Chosen strategy is simple_byte
  4005  0022E8  0A00               	xorlw	0	; case 0
  4006  0022EA  B4D8               	btfsc	status,2,c
  4007  0022EC  D7C1               	goto	l222
  4008  0022EE  0A01               	xorlw	1	; case 1
  4009  0022F0  B4D8               	btfsc	status,2,c
  4010  0022F2  D7EA               	goto	l229
  4011  0022F4  0A02               	xorlw	2	; case 3
  4012  0022F6  B4D8               	btfsc	status,2,c
  4013  0022F8  D7EA               	goto	l1294
  4014  0022FA  0A07               	xorlw	7	; case 4
  4015  0022FC  A4D8               	btfss	status,2,c
  4016  0022FE  0012               	return	
  4017  002300  D7EC               	goto	l1296
  4018  002302                     __end_of_setPortData:
  4019                           	opt stack 0
  4020                           tblptru	equ	0xFF8
  4021                           tblptrh	equ	0xFF7
  4022                           tblptrl	equ	0xFF6
  4023                           tablat	equ	0xFF5
  4024                           prodh	equ	0xFF4
  4025                           prodl	equ	0xFF3
  4026                           postinc0	equ	0xFEE
  4027                           wreg	equ	0xFE8
  4028                           postdec1	equ	0xFE5
  4029                           fsr1h	equ	0xFE2
  4030                           fsr1l	equ	0xFE1
  4031                           indf2	equ	0xFDF
  4032                           fsr2h	equ	0xFDA
  4033                           fsr2l	equ	0xFD9
  4034                           status	equ	0xFD8
  4035                           
  4036 ;; *************** function _enableSerial *****************
  4037 ;; Defined at:
  4038 ;;		line 21 in file "source/serial.c"
  4039 ;; Parameters:    Size  Location     Type
  4040 ;;  baudRate        2    0[COMRAM] unsigned int 
  4041 ;; Auto vars:     Size  Location     Type
  4042 ;;		None
  4043 ;; Return value:  Size  Location     Type
  4044 ;;		None               void
  4045 ;; Registers used:
  4046 ;;		wreg, status,2, status,0
  4047 ;; Tracked objects:
  4048 ;;		On entry : 0/0
  4049 ;;		On exit  : 0/0
  4050 ;;		Unchanged: 0/0
  4051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4052 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4054 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4055 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4056 ;;Total ram usage:        4 bytes
  4057 ;; Hardware stack levels used:    1
  4058 ;; This function calls:
  4059 ;;		Nothing
  4060 ;; This function is called by:
  4061 ;;		_setPortData
  4062 ;; This function uses a non-reentrant model
  4063 ;;
  4064                           
  4065                           	psect	text4
  4066  002302                     __ptext4:
  4067                           	opt stack 0
  4068  002302                     _enableSerial:
  4069                           	opt stack 28
  4070                           
  4071                           ;serial.c: 23: LATDbits.LD3 = 1;
  4072                           
  4073                           ;incstack = 0
  4074  002302  868C               	bsf	3980,3,c	;volatile
  4075                           
  4076                           ;serial.c: 26: switch (baudRate) {
  4077  002304  D00B               	goto	l1202
  4078  002306                     l1192:
  4079                           
  4080                           ;serial.c: 31: SPBRG2 = 103;
  4081  002306  0E67               	movlw	103
  4082  002308  D007               	goto	L32
  4083  00230A                     l1194:
  4084                           
  4085                           ;serial.c: 34: SPBRG2 = 25;
  4086  00230A  0E19               	movlw	25
  4087  00230C  D005               	goto	L32
  4088  00230E                     l1196:
  4089                           
  4090                           ;serial.c: 37: SPBRG2 = 23;
  4091  00230E  0E17               	movlw	23
  4092  002310  D003               	goto	L32
  4093  002312                     l1198:
  4094                           
  4095                           ;serial.c: 40: SPBRG2 = 12;
  4096  002312  0E0C               	movlw	12
  4097  002314  D001               	goto	L32
  4098  002316                     l1200:
  4099                           
  4100                           ;serial.c: 43: SPBRG2 = 207;
  4101  002316  0ECF               	movlw	207
  4102  002318                     L32:
  4103  002318  6E75               	movwf	3957,c	;volatile
  4104                           
  4105                           ;serial.c: 44: }
  4106  00231A  D02C               	goto	l1204
  4107  00231C                     l1202:
  4108  00231C  C00F  F011         	movff	enableSerial@baudRate,??_enableSerial
  4109  002320  C010  F012         	movff	enableSerial@baudRate+1,??_enableSerial+1
  4110                           
  4111                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 5 sub-sw
      +                          itches
  4112                           ; Switch size 1, requested type "space"
  4113                           ; Number of cases is 5, Range of values is 4 to 75
  4114                           ; switch strategies available:
  4115                           ; Name         Instructions Cycles
  4116                           ; simple_byte           16     9 (average)
  4117                           ;	Chosen strategy is simple_byte
  4118  002324  5012               	movf	??_enableSerial+1,w,c
  4119  002326  0A04               	xorlw	4	; case 4
  4120  002328  B4D8               	btfsc	status,2,c
  4121  00232A  D00D               	goto	l1702
  4122  00232C  0A0D               	xorlw	13	; case 9
  4123  00232E  B4D8               	btfsc	status,2,c
  4124  002330  D00D               	goto	l1704
  4125  002332  0A2C               	xorlw	44	; case 37
  4126  002334  B4D8               	btfsc	status,2,c
  4127  002336  D00F               	goto	l1706
  4128  002338  0A0D               	xorlw	13	; case 40
  4129  00233A  B4D8               	btfsc	status,2,c
  4130  00233C  D011               	goto	l1708
  4131  00233E  0A63               	xorlw	99	; case 75
  4132  002340  B4D8               	btfsc	status,2,c
  4133  002342  D013               	goto	l1710
  4134  002344  D7E8               	goto	l1200
  4135  002346                     l1702:
  4136                           
  4137                           ; Switch size 1, requested type "space"
  4138                           ; Number of cases is 1, Range of values is 176 to 176
  4139                           ; switch strategies available:
  4140                           ; Name         Instructions Cycles
  4141                           ; simple_byte            4     3 (average)
  4142                           ;	Chosen strategy is simple_byte
  4143  002346  5011               	movf	??_enableSerial,w,c
  4144  002348  0AB0               	xorlw	176	; case 176
  4145  00234A  D7E5               	goto	l1200
  4146  00234C                     l1704:
  4147                           
  4148                           ; Switch size 1, requested type "space"
  4149                           ; Number of cases is 1, Range of values is 96 to 96
  4150                           ; switch strategies available:
  4151                           ; Name         Instructions Cycles
  4152                           ; simple_byte            4     3 (average)
  4153                           ;	Chosen strategy is simple_byte
  4154  00234C  5011               	movf	??_enableSerial,w,c
  4155  00234E  0A60               	xorlw	96	; case 96
  4156  002350  B4D8               	btfsc	status,2,c
  4157  002352  D7D9               	goto	l1192
  4158  002354  D7E0               	goto	l1200
  4159  002356                     l1706:
  4160                           
  4161                           ; Switch size 1, requested type "space"
  4162                           ; Number of cases is 1, Range of values is 128 to 128
  4163                           ; switch strategies available:
  4164                           ; Name         Instructions Cycles
  4165                           ; simple_byte            4     3 (average)
  4166                           ;	Chosen strategy is simple_byte
  4167  002356  5011               	movf	??_enableSerial,w,c
  4168  002358  0A80               	xorlw	128	; case 128
  4169  00235A  B4D8               	btfsc	status,2,c
  4170  00235C  D7D6               	goto	l1194
  4171  00235E  D7DB               	goto	l1200
  4172  002360                     l1708:
  4173                           
  4174                           ; Switch size 1, requested type "space"
  4175                           ; Number of cases is 1, Range of values is 177 to 177
  4176                           ; switch strategies available:
  4177                           ; Name         Instructions Cycles
  4178                           ; simple_byte            4     3 (average)
  4179                           ;	Chosen strategy is simple_byte
  4180  002360  5011               	movf	??_enableSerial,w,c
  4181  002362  0AB1               	xorlw	177	; case 177
  4182  002364  B4D8               	btfsc	status,2,c
  4183  002366  D7D3               	goto	l1196
  4184  002368  D7D6               	goto	l1200
  4185  00236A                     l1710:
  4186                           
  4187                           ; Switch size 1, requested type "space"
  4188                           ; Number of cases is 1, Range of values is 0 to 0
  4189                           ; switch strategies available:
  4190                           ; Name         Instructions Cycles
  4191                           ; simple_byte            4     3 (average)
  4192                           ;	Chosen strategy is simple_byte
  4193  00236A  5011               	movf	??_enableSerial,w,c
  4194  00236C  0A00               	xorlw	0	; case 0
  4195  00236E  B4D8               	btfsc	status,2,c
  4196  002370  D7D0               	goto	l1198
  4197  002372  D7D1               	goto	l1200
  4198  002374                     l1204:
  4199                           
  4200                           ;serial.c: 46: SPBRGH2 = 0;
  4201  002374  0E00               	movlw	0
  4202  002376  6E76               	movwf	3958,c	;volatile
  4203                           
  4204                           ;serial.c: 47: TXSTA2bits.BRGH = 0;
  4205  002378  9472               	bcf	3954,2,c	;volatile
  4206                           
  4207                           ;serial.c: 48: BAUDCON2bits.BRG16 = 0;
  4208  00237A  9670               	bcf	3952,3,c	;volatile
  4209                           
  4210                           ;serial.c: 50: TXSTA2bits.TX9 = 0;
  4211  00237C  9C72               	bcf	3954,6,c	;volatile
  4212                           
  4213                           ;serial.c: 51: RCSTA2bits.RX9 = 0;
  4214  00237E  9C71               	bcf	3953,6,c	;volatile
  4215                           
  4216                           ;serial.c: 53: TXSTA2bits.SYNC = 0;
  4217  002380  9872               	bcf	3954,4,c	;volatile
  4218                           
  4219                           ;serial.c: 54: BAUDCON2bits.DTRXP = 0;
  4220  002382  9A70               	bcf	3952,5,c	;volatile
  4221                           
  4222                           ;serial.c: 56: TXSTA2bits.TXEN = 1;
  4223  002384  8A72               	bsf	3954,5,c	;volatile
  4224                           
  4225                           ;serial.c: 57: RCSTA2bits.CREN = 1;
  4226  002386  8871               	bsf	3953,4,c	;volatile
  4227                           
  4228                           ;serial.c: 59: RCSTA2bits.SPEN = 1;
  4229  002388  8E71               	bsf	3953,7,c	;volatile
  4230  00238A  0012               	return	
  4231  00238C                     __end_of_enableSerial:
  4232                           	opt stack 0
  4233                           tblptru	equ	0xFF8
  4234                           tblptrh	equ	0xFF7
  4235                           tblptrl	equ	0xFF6
  4236                           tablat	equ	0xFF5
  4237                           prodh	equ	0xFF4
  4238                           prodl	equ	0xFF3
  4239                           postinc0	equ	0xFEE
  4240                           wreg	equ	0xFE8
  4241                           postdec1	equ	0xFE5
  4242                           fsr1h	equ	0xFE2
  4243                           fsr1l	equ	0xFE1
  4244                           indf2	equ	0xFDF
  4245                           fsr2h	equ	0xFDA
  4246                           fsr2l	equ	0xFD9
  4247                           status	equ	0xFD8
  4248                           
  4249 ;; *************** function _dispSeg *****************
  4250 ;; Defined at:
  4251 ;;		line 13 in file "source/segment.c"
  4252 ;; Parameters:    Size  Location     Type
  4253 ;;  segment         1    wreg     unsigned char 
  4254 ;;  letter          1    0[COMRAM] unsigned char 
  4255 ;; Auto vars:     Size  Location     Type
  4256 ;;  segment         1    1[COMRAM] unsigned char 
  4257 ;; Return value:  Size  Location     Type
  4258 ;;		None               void
  4259 ;; Registers used:
  4260 ;;		wreg, status,2, status,0
  4261 ;; Tracked objects:
  4262 ;;		On entry : 0/0
  4263 ;;		On exit  : 0/0
  4264 ;;		Unchanged: 0/0
  4265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4266 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4267 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4269 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4270 ;;Total ram usage:        2 bytes
  4271 ;; Hardware stack levels used:    1
  4272 ;; This function calls:
  4273 ;;		Nothing
  4274 ;; This function is called by:
  4275 ;;		_main
  4276 ;;		_setPortData
  4277 ;;		_cycleSegDisplays
  4278 ;; This function uses a non-reentrant model
  4279 ;;
  4280                           
  4281                           	psect	text5
  4282  001F4C                     __ptext5:
  4283                           	opt stack 0
  4284  001F4C                     _dispSeg:
  4285                           	opt stack 28
  4286                           
  4287                           ;incstack = 0
  4288                           ;dispSeg@segment stored from wreg
  4289  001F4C  CFE8 F010          	movff	wreg,dispSeg@segment
  4290                           
  4291                           ;segment.c: 15: switch (letter) {
  4292  001F50  D154               	goto	l1056
  4293  001F52                     l982:
  4294                           
  4295                           ;segment.c: 17: if (segment == 1) {
  4296  001F52  0410               	decf	dispSeg@segment,w,c
  4297  001F54  A4D8               	btfss	status,2,c
  4298  001F56  D007               	goto	l48
  4299                           
  4300                           ;segment.c: 18: LATAbits.LA2 = LATAbits.LA3 = LATAbits.LA4 = LATAbits.LA5 = LATEbits.LE0
      +                           = LATAbits.LA0 = LATAbits.LA1 = 0;
  4301  001F58  9289               	bcf	3977,1,c	;volatile
  4302  001F5A  9089               	bcf	3977,0,c	;volatile
  4303  001F5C  908D               	bcf	3981,0,c	;volatile
  4304  001F5E  9A89               	bcf	3977,5,c	;volatile
  4305  001F60  9889               	bcf	3977,4,c	;volatile
  4306  001F62  9689               	bcf	3977,3,c	;volatile
  4307  001F64  9489               	bcf	3977,2,c	;volatile
  4308  001F66                     l48:
  4309                           
  4310                           ;segment.c: 19: }
  4311                           ;segment.c: 20: LATAbits.LA7 = LATAbits.LA6 = LATCbits.LC2 = LATCbits.LC0 = LATCbits.LC1
      +                           = LATEbits.LE1 = LATEbits.LE2 = 0;
  4312  001F66  948D               	bcf	3981,2,c	;volatile
  4313  001F68  928D               	bcf	3981,1,c	;volatile
  4314  001F6A  928B               	bcf	3979,1,c	;volatile
  4315  001F6C  908B               	bcf	3979,0,c	;volatile
  4316  001F6E  948B               	bcf	3979,2,c	;volatile
  4317  001F70  9C89               	bcf	3977,6,c	;volatile
  4318  001F72  9E89               	bcf	3977,7,c	;volatile
  4319                           
  4320                           ;segment.c: 21: break;
  4321  001F74  0012               	return	
  4322  001F76                     l986:
  4323                           
  4324                           ;segment.c: 23: if (segment == 1) {
  4325  001F76  0410               	decf	dispSeg@segment,w,c
  4326  001F78  A4D8               	btfss	status,2,c
  4327  001F7A  D007               	goto	l51
  4328                           
  4329                           ;segment.c: 24: LATAbits.LA1 = 1;
  4330  001F7C  8289               	bsf	3977,1,c	;volatile
  4331                           
  4332                           ;segment.c: 25: LATAbits.LA2 = LATAbits.LA3 = LATAbits.LA4 = LATAbits.LA5 = LATEbits.LE0
      +                           = LATAbits.LA0 = 0;
  4333  001F7E  9089               	bcf	3977,0,c	;volatile
  4334  001F80  908D               	bcf	3981,0,c	;volatile
  4335  001F82  9A89               	bcf	3977,5,c	;volatile
  4336  001F84  9889               	bcf	3977,4,c	;volatile
  4337  001F86  9689               	bcf	3977,3,c	;volatile
  4338  001F88  9489               	bcf	3977,2,c	;volatile
  4339  001F8A                     l51:
  4340                           
  4341                           ;segment.c: 26: }
  4342                           ;segment.c: 27: LATEbits.LE2 = 1;
  4343  001F8A  848D               	bsf	3981,2,c	;volatile
  4344                           
  4345                           ;segment.c: 28: LATAbits.LA7 = LATAbits.LA6 = LATCbits.LC2 = LATCbits.LC0 = LATCbits.LC1
      +                           = LATEbits.LE1 = 0;
  4346  001F8C  928D               	bcf	3981,1,c	;volatile
  4347  001F8E  928B               	bcf	3979,1,c	;volatile
  4348  001F90  908B               	bcf	3979,0,c	;volatile
  4349  001F92  948B               	bcf	3979,2,c	;volatile
  4350  001F94  9C89               	bcf	3977,6,c	;volatile
  4351  001F96  9E89               	bcf	3977,7,c	;volatile
  4352                           
  4353                           ;segment.c: 29: break;
  4354  001F98  0012               	return	
  4355  001F9A                     l990:
  4356                           
  4357                           ;segment.c: 31: if (segment == 1) {
  4358  001F9A  0410               	decf	dispSeg@segment,w,c
  4359  001F9C  A4D8               	btfss	status,2,c
  4360  001F9E  D008               	goto	l53
  4361                           
  4362                           ;segment.c: 32: LATAbits.LA2 = LATAbits.LA3 = LATAbits.LA4 = LATAbits.LA5 = LATEbits.LE0
      +                           = LATAbits.LA0 = 1;
  4363  001FA0  8089               	bsf	3977,0,c	;volatile
  4364  001FA2  808D               	bsf	3981,0,c	;volatile
  4365  001FA4  8A89               	bsf	3977,5,c	;volatile
  4366  001FA6  8889               	bsf	3977,4,c	;volatile
  4367  001FA8  8689               	bsf	3977,3,c	;volatile
  4368  001FAA  8489               	bsf	3977,2,c	;volatile
  4369                           
  4370                           ;segment.c: 33: LATAbits.LA1 = 0;
  4371  001FAC  9289               	bcf	3977,1,c	;volatile
  4372                           
  4373                           ;segment.c: 34: return;
  4374  001FAE  0012               	return	
  4375  001FB0                     l53:
  4376                           
  4377                           ;segment.c: 35: }
  4378                           ;segment.c: 36: LATAbits.LA7 = LATAbits.LA6 = LATCbits.LC2 = LATCbits.LC0 = LATCbits.LC1
      +                           = LATEbits.LE1 = 1;
  4379  001FB0  828D               	bsf	3981,1,c	;volatile
  4380  001FB2  828B               	bsf	3979,1,c	;volatile
  4381  001FB4  808B               	bsf	3979,0,c	;volatile
  4382  001FB6  848B               	bsf	3979,2,c	;volatile
  4383  001FB8  8C89               	bsf	3977,6,c	;volatile
  4384  001FBA  8E89               	bsf	3977,7,c	;volatile
  4385                           
  4386                           ;segment.c: 37: LATEbits.LE2 = 0;
  4387  001FBC  948D               	bcf	3981,2,c	;volatile
  4388                           
  4389                           ;segment.c: 38: break;
  4390  001FBE  0012               	return	
  4391  001FC0                     l994:
  4392                           
  4393                           ;segment.c: 40: if (segment == 1) {
  4394  001FC0  0410               	decf	dispSeg@segment,w,c
  4395  001FC2  A4D8               	btfss	status,2,c
  4396  001FC4  D008               	goto	l56
  4397                           
  4398                           ;segment.c: 41: LATAbits.LA3 = LATAbits.LA4 = 1;
  4399  001FC6  8889               	bsf	3977,4,c	;volatile
  4400  001FC8  8689               	bsf	3977,3,c	;volatile
  4401                           
  4402                           ;segment.c: 42: LATAbits.LA2 = LATAbits.LA5 = LATEbits.LE0 = LATAbits.LA0 = LATAbits.LA1
      +                           = 0;
  4403  001FCA  9289               	bcf	3977,1,c	;volatile
  4404  001FCC  9089               	bcf	3977,0,c	;volatile
  4405  001FCE  908D               	bcf	3981,0,c	;volatile
  4406  001FD0  9A89               	bcf	3977,5,c	;volatile
  4407  001FD2  9489               	bcf	3977,2,c	;volatile
  4408                           
  4409                           ;segment.c: 43: return;
  4410  001FD4  0012               	return	
  4411  001FD6                     l56:
  4412                           
  4413                           ;segment.c: 44: }
  4414                           ;segment.c: 45: LATAbits.LA6 = LATCbits.LC2 = 1;
  4415  001FD6  848B               	bsf	3979,2,c	;volatile
  4416  001FD8  8C89               	bsf	3977,6,c	;volatile
  4417                           
  4418                           ;segment.c: 46: LATAbits.LA7 = LATCbits.LC0 = LATCbits.LC1 = LATEbits.LE1 = LATEbits.LE2
      +                           = 0;
  4419  001FDA  948D               	bcf	3981,2,c	;volatile
  4420  001FDC  928D               	bcf	3981,1,c	;volatile
  4421  001FDE  928B               	bcf	3979,1,c	;volatile
  4422  001FE0  908B               	bcf	3979,0,c	;volatile
  4423  001FE2  9E89               	bcf	3977,7,c	;volatile
  4424                           
  4425                           ;segment.c: 47: break;
  4426  001FE4  0012               	return	
  4427  001FE6                     l998:
  4428                           
  4429                           ;segment.c: 49: if (segment == 1) {
  4430  001FE6  0410               	decf	dispSeg@segment,w,c
  4431  001FE8  A4D8               	btfss	status,2,c
  4432  001FEA  D008               	goto	l58
  4433                           
  4434                           ;segment.c: 50: LATAbits.LA2 = LATAbits.LA3 = LATAbits.LA1 = LATEbits.LE0 = LATAbits.LA5
      +                           = 1;
  4435  001FEC  8A89               	bsf	3977,5,c	;volatile
  4436  001FEE  808D               	bsf	3981,0,c	;volatile
  4437  001FF0  8289               	bsf	3977,1,c	;volatile
  4438  001FF2  8689               	bsf	3977,3,c	;volatile
  4439  001FF4  8489               	bsf	3977,2,c	;volatile
  4440                           
  4441                           ;segment.c: 51: LATAbits.LA4 = LATAbits.LA0 = 0;
  4442  001FF6  9089               	bcf	3977,0,c	;volatile
  4443  001FF8  9889               	bcf	3977,4,c	;volatile
  4444                           
  4445                           ;segment.c: 52: return;
  4446  001FFA  0012               	return	
  4447  001FFC                     l58:
  4448                           
  4449                           ;segment.c: 53: }
  4450                           ;segment.c: 54: LATAbits.LA7 = LATAbits.LA6 = LATEbits.LE2 = LATCbits.LC1 = LATCbits.LC0
      +                           = 1;
  4451  001FFC  808B               	bsf	3979,0,c	;volatile
  4452  001FFE  828B               	bsf	3979,1,c	;volatile
  4453  002000  848D               	bsf	3981,2,c	;volatile
  4454  002002  8C89               	bsf	3977,6,c	;volatile
  4455  002004  8E89               	bsf	3977,7,c	;volatile
  4456                           
  4457                           ;segment.c: 55: LATCbits.LC2 = LATEbits.LE1 = 0;
  4458  002006  928D               	bcf	3981,1,c	;volatile
  4459  002008  948B               	bcf	3979,2,c	;volatile
  4460                           
  4461                           ;segment.c: 56: break;
  4462  00200A  0012               	return	
  4463  00200C                     l1002:
  4464                           
  4465                           ;segment.c: 58: if (segment == 1) {
  4466  00200C  0410               	decf	dispSeg@segment,w,c
  4467  00200E  A4D8               	btfss	status,2,c
  4468  002010  D008               	goto	l60
  4469                           
  4470                           ;segment.c: 59: LATAbits.LA2 = LATAbits.LA3 = LATAbits.LA1 = LATAbits.LA4 = LATAbits.LA5
      +                           = 1;
  4471  002012  8A89               	bsf	3977,5,c	;volatile
  4472  002014  8889               	bsf	3977,4,c	;volatile
  4473  002016  8289               	bsf	3977,1,c	;volatile
  4474  002018  8689               	bsf	3977,3,c	;volatile
  4475  00201A  8489               	bsf	3977,2,c	;volatile
  4476                           
  4477                           ;segment.c: 60: LATEbits.LE0 = LATAbits.LA0 = 0;
  4478  00201C  9089               	bcf	3977,0,c	;volatile
  4479  00201E  908D               	bcf	3981,0,c	;volatile
  4480                           
  4481                           ;segment.c: 61: return;
  4482  002020  0012               	return	
  4483  002022                     l60:
  4484                           
  4485                           ;segment.c: 62: }
  4486                           ;segment.c: 63: LATAbits.LA7 = LATAbits.LA6 = LATEbits.LE2 = LATCbits.LC2 = LATCbits.LC0
      +                           = 1;
  4487  002022  808B               	bsf	3979,0,c	;volatile
  4488  002024  848B               	bsf	3979,2,c	;volatile
  4489  002026  848D               	bsf	3981,2,c	;volatile
  4490  002028  8C89               	bsf	3977,6,c	;volatile
  4491  00202A  8E89               	bsf	3977,7,c	;volatile
  4492                           
  4493                           ;segment.c: 64: LATCbits.LC1 = LATEbits.LE1 = 0;
  4494  00202C  928D               	bcf	3981,1,c	;volatile
  4495  00202E  928B               	bcf	3979,1,c	;volatile
  4496                           
  4497                           ;segment.c: 65: break;
  4498  002030  0012               	return	
  4499  002032                     l1006:
  4500                           
  4501                           ;segment.c: 67: if (segment == 1) {
  4502  002032  0410               	decf	dispSeg@segment,w,c
  4503  002034  A4D8               	btfss	status,2,c
  4504  002036  D008               	goto	l62
  4505                           
  4506                           ;segment.c: 68: LATAbits.LA0 = LATAbits.LA1 = LATAbits.LA3 = LATAbits.LA4 = 1;
  4507  002038  8889               	bsf	3977,4,c	;volatile
  4508  00203A  8689               	bsf	3977,3,c	;volatile
  4509  00203C  8289               	bsf	3977,1,c	;volatile
  4510  00203E  8089               	bsf	3977,0,c	;volatile
  4511                           
  4512                           ;segment.c: 69: LATAbits.LA2 = LATAbits.LA5 = LATEbits.LE0 = 0;
  4513  002040  908D               	bcf	3981,0,c	;volatile
  4514  002042  9A89               	bcf	3977,5,c	;volatile
  4515  002044  9489               	bcf	3977,2,c	;volatile
  4516                           
  4517                           ;segment.c: 70: return;
  4518  002046  0012               	return	
  4519  002048                     l62:
  4520                           
  4521                           ;segment.c: 71: }
  4522                           ;segment.c: 72: LATEbits.LE1 = LATEbits.LE2 = LATAbits.LA6 = LATCbits.LC2 = 1;
  4523  002048  848B               	bsf	3979,2,c	;volatile
  4524  00204A  8C89               	bsf	3977,6,c	;volatile
  4525  00204C  848D               	bsf	3981,2,c	;volatile
  4526  00204E  828D               	bsf	3981,1,c	;volatile
  4527                           
  4528                           ;segment.c: 73: LATAbits.LA7 = LATCbits.LC0 = LATCbits.LC1 = 0;
  4529  002050  928B               	bcf	3979,1,c	;volatile
  4530  002052  908B               	bcf	3979,0,c	;volatile
  4531  002054  9E89               	bcf	3977,7,c	;volatile
  4532                           
  4533                           ;segment.c: 74: break;
  4534  002056  0012               	return	
  4535  002058                     l1010:
  4536                           
  4537                           ;segment.c: 76: if (segment == 1) {
  4538  002058  0410               	decf	dispSeg@segment,w,c
  4539  00205A  A4D8               	btfss	status,2,c
  4540  00205C  D008               	goto	l64
  4541                           
  4542                           ;segment.c: 77: LATAbits.LA2 = LATAbits.LA0 = LATAbits.LA1 = LATAbits.LA4 = LATAbits.LA5
      +                           = 1;
  4543  00205E  8A89               	bsf	3977,5,c	;volatile
  4544  002060  8889               	bsf	3977,4,c	;volatile
  4545  002062  8289               	bsf	3977,1,c	;volatile
  4546  002064  8089               	bsf	3977,0,c	;volatile
  4547  002066  8489               	bsf	3977,2,c	;volatile
  4548                           
  4549                           ;segment.c: 78: LATAbits.LA3 = LATEbits.LE0 = 0;
  4550  002068  908D               	bcf	3981,0,c	;volatile
  4551  00206A  9689               	bcf	3977,3,c	;volatile
  4552                           
  4553                           ;segment.c: 79: return;
  4554  00206C  0012               	return	
  4555  00206E                     l64:
  4556                           
  4557                           ;segment.c: 80: }
  4558                           ;segment.c: 81: LATAbits.LA7 = LATEbits.LE1 = LATEbits.LE2 = LATCbits.LC2 = LATCbits.LC0
      +                           = 1;
  4559  00206E  808B               	bsf	3979,0,c	;volatile
  4560  002070  848B               	bsf	3979,2,c	;volatile
  4561  002072  848D               	bsf	3981,2,c	;volatile
  4562  002074  828D               	bsf	3981,1,c	;volatile
  4563  002076  8E89               	bsf	3977,7,c	;volatile
  4564                           
  4565                           ;segment.c: 82: LATAbits.LA6 = LATCbits.LC1 = 0;
  4566  002078  928B               	bcf	3979,1,c	;volatile
  4567  00207A  9C89               	bcf	3977,6,c	;volatile
  4568                           
  4569                           ;segment.c: 83: break;
  4570  00207C  0012               	return	
  4571  00207E                     l1014:
  4572                           
  4573                           ;segment.c: 85: if (segment == 1) {
  4574  00207E  0410               	decf	dispSeg@segment,w,c
  4575  002080  A4D8               	btfss	status,2,c
  4576  002082  D008               	goto	l66
  4577                           
  4578                           ;segment.c: 86: LATAbits.LA2 = LATAbits.LA0 = LATAbits.LA1 = LATAbits.LA4 = LATAbits.LA5
      +                           = LATEbits.LE0 = 1;
  4579  002084  808D               	bsf	3981,0,c	;volatile
  4580  002086  8A89               	bsf	3977,5,c	;volatile
  4581  002088  8889               	bsf	3977,4,c	;volatile
  4582  00208A  8289               	bsf	3977,1,c	;volatile
  4583  00208C  8089               	bsf	3977,0,c	;volatile
  4584  00208E  8489               	bsf	3977,2,c	;volatile
  4585                           
  4586                           ;segment.c: 87: LATAbits.LA3 = 0;
  4587  002090  9689               	bcf	3977,3,c	;volatile
  4588                           
  4589                           ;segment.c: 88: return;
  4590  002092  0012               	return	
  4591  002094                     l66:
  4592                           
  4593                           ;segment.c: 89: }
  4594                           ;segment.c: 90: LATAbits.LA7 = LATEbits.LE1 = LATEbits.LE2 = LATCbits.LC2 = LATCbits.LC0
      +                           = LATCbits.LC1 = 1;
  4595  002094  828B               	bsf	3979,1,c	;volatile
  4596  002096  808B               	bsf	3979,0,c	;volatile
  4597  002098  848B               	bsf	3979,2,c	;volatile
  4598  00209A  848D               	bsf	3981,2,c	;volatile
  4599  00209C  828D               	bsf	3981,1,c	;volatile
  4600  00209E  8E89               	bsf	3977,7,c	;volatile
  4601                           
  4602                           ;segment.c: 91: LATAbits.LA6 = 0;
  4603  0020A0  9C89               	bcf	3977,6,c	;volatile
  4604                           
  4605                           ;segment.c: 92: break;
  4606  0020A2  0012               	return	
  4607  0020A4                     l1018:
  4608                           
  4609                           ;segment.c: 94: if (segment == 1) {
  4610  0020A4  0410               	decf	dispSeg@segment,w,c
  4611  0020A6  A4D8               	btfss	status,2,c
  4612  0020A8  D008               	goto	l68
  4613                           
  4614                           ;segment.c: 95: LATAbits.LA2 = LATAbits.LA3 = LATAbits.LA4 = 1;
  4615  0020AA  8889               	bsf	3977,4,c	;volatile
  4616  0020AC  8689               	bsf	3977,3,c	;volatile
  4617  0020AE  8489               	bsf	3977,2,c	;volatile
  4618                           
  4619                           ;segment.c: 96: LATAbits.LA5 = LATEbits.LE0 = LATAbits.LA0 = LATAbits.LA1 = 0;
  4620  0020B0  9289               	bcf	3977,1,c	;volatile
  4621  0020B2  9089               	bcf	3977,0,c	;volatile
  4622  0020B4  908D               	bcf	3981,0,c	;volatile
  4623  0020B6  9A89               	bcf	3977,5,c	;volatile
  4624                           
  4625                           ;segment.c: 97: return;
  4626  0020B8  0012               	return	
  4627  0020BA                     l68:
  4628                           
  4629                           ;segment.c: 98: }
  4630                           ;segment.c: 99: LATAbits.LA7 = LATAbits.LA6 = LATCbits.LC2 = 1;
  4631  0020BA  848B               	bsf	3979,2,c	;volatile
  4632  0020BC  8C89               	bsf	3977,6,c	;volatile
  4633  0020BE  8E89               	bsf	3977,7,c	;volatile
  4634                           
  4635                           ;segment.c: 100: LATCbits.LC0 = LATCbits.LC1 = LATEbits.LE1 = LATEbits.LE2 = 0;
  4636  0020C0  948D               	bcf	3981,2,c	;volatile
  4637  0020C2  928D               	bcf	3981,1,c	;volatile
  4638  0020C4  928B               	bcf	3979,1,c	;volatile
  4639  0020C6  908B               	bcf	3979,0,c	;volatile
  4640                           
  4641                           ;segment.c: 101: break;
  4642  0020C8  0012               	return	
  4643  0020CA                     l1022:
  4644                           
  4645                           ;segment.c: 103: if (segment == 1) {
  4646  0020CA  0410               	decf	dispSeg@segment,w,c
  4647  0020CC  A4D8               	btfss	status,2,c
  4648  0020CE  D008               	goto	l70
  4649                           
  4650                           ;segment.c: 104: LATAbits.LA2 = LATAbits.LA3 = LATAbits.LA4 = LATAbits.LA5 = LATEbits.LE
      +                          0 = LATAbits.LA0 = LATAbits.LA1 = 1;
  4651  0020D0  8289               	bsf	3977,1,c	;volatile
  4652  0020D2  8089               	bsf	3977,0,c	;volatile
  4653  0020D4  808D               	bsf	3981,0,c	;volatile
  4654  0020D6  8A89               	bsf	3977,5,c	;volatile
  4655  0020D8  8889               	bsf	3977,4,c	;volatile
  4656  0020DA  8689               	bsf	3977,3,c	;volatile
  4657  0020DC  8489               	bsf	3977,2,c	;volatile
  4658                           
  4659                           ;segment.c: 105: return;
  4660  0020DE  0012               	return	
  4661  0020E0                     l70:
  4662                           
  4663                           ;segment.c: 106: }
  4664                           ;segment.c: 107: LATAbits.LA7 = LATAbits.LA6 = LATCbits.LC2 = LATCbits.LC0 = LATCbits.LC
      +                          1 = LATEbits.LE1 = LATEbits.LE2 = 1;
  4665  0020E0  848D               	bsf	3981,2,c	;volatile
  4666  0020E2  828D               	bsf	3981,1,c	;volatile
  4667  0020E4  828B               	bsf	3979,1,c	;volatile
  4668  0020E6  808B               	bsf	3979,0,c	;volatile
  4669  0020E8  848B               	bsf	3979,2,c	;volatile
  4670  0020EA  8C89               	bsf	3977,6,c	;volatile
  4671  0020EC  8E89               	bsf	3977,7,c	;volatile
  4672                           
  4673                           ;segment.c: 108: break;
  4674  0020EE  0012               	return	
  4675  0020F0                     l1026:
  4676                           
  4677                           ;segment.c: 110: if (segment == 1) {
  4678  0020F0  0410               	decf	dispSeg@segment,w,c
  4679  0020F2  A4D8               	btfss	status,2,c
  4680  0020F4  D008               	goto	l72
  4681                           
  4682                           ;segment.c: 111: LATAbits.LA2 = LATAbits.LA3 = LATAbits.LA4 = LATAbits.LA5 = LATAbits.LA
      +                          0 = LATAbits.LA1 = 1;
  4683  0020F6  8289               	bsf	3977,1,c	;volatile
  4684  0020F8  8089               	bsf	3977,0,c	;volatile
  4685  0020FA  8A89               	bsf	3977,5,c	;volatile
  4686  0020FC  8889               	bsf	3977,4,c	;volatile
  4687  0020FE  8689               	bsf	3977,3,c	;volatile
  4688  002100  8489               	bsf	3977,2,c	;volatile
  4689                           
  4690                           ;segment.c: 112: LATEbits.LE0 = 0;
  4691  002102  908D               	bcf	3981,0,c	;volatile
  4692                           
  4693                           ;segment.c: 113: return;
  4694  002104  0012               	return	
  4695  002106                     l72:
  4696                           
  4697                           ;segment.c: 114: }
  4698                           ;segment.c: 115: LATAbits.LA7 = LATAbits.LA6 = LATCbits.LC2 = LATCbits.LC0 = LATEbits.LE
      +                          1 = LATEbits.LE2 = 1;
  4699  002106  848D               	bsf	3981,2,c	;volatile
  4700  002108  828D               	bsf	3981,1,c	;volatile
  4701  00210A  808B               	bsf	3979,0,c	;volatile
  4702  00210C  848B               	bsf	3979,2,c	;volatile
  4703  00210E  8C89               	bsf	3977,6,c	;volatile
  4704  002110  8E89               	bsf	3977,7,c	;volatile
  4705                           
  4706                           ;segment.c: 116: LATCbits.LC1 = 0;
  4707  002112  928B               	bcf	3979,1,c	;volatile
  4708                           
  4709                           ;segment.c: 117: break;
  4710  002114  0012               	return	
  4711  002116                     l1030:
  4712                           
  4713                           ;segment.c: 119: if (segment == 1) {
  4714  002116  0410               	decf	dispSeg@segment,w,c
  4715  002118  A4D8               	btfss	status,2,c
  4716  00211A  D008               	goto	l74
  4717                           
  4718                           ;segment.c: 120: LATAbits.LA2 = LATAbits.LA3 = LATAbits.LA4 = LATEbits.LE0 = LATAbits.LA
      +                          0 = LATAbits.LA1 = 1;
  4719  00211C  8289               	bsf	3977,1,c	;volatile
  4720  00211E  8089               	bsf	3977,0,c	;volatile
  4721  002120  808D               	bsf	3981,0,c	;volatile
  4722  002122  8889               	bsf	3977,4,c	;volatile
  4723  002124  8689               	bsf	3977,3,c	;volatile
  4724  002126  8489               	bsf	3977,2,c	;volatile
  4725                           
  4726                           ;segment.c: 121: LATAbits.LA5 = 0;
  4727  002128  9A89               	bcf	3977,5,c	;volatile
  4728                           
  4729                           ;segment.c: 122: return;
  4730  00212A  0012               	return	
  4731  00212C                     l74:
  4732                           
  4733                           ;segment.c: 123: }
  4734                           ;segment.c: 124: LATAbits.LA7 = LATAbits.LA6 = LATCbits.LC2 = LATCbits.LC1 = LATEbits.LE
      +                          1 = LATEbits.LE2 = 1;
  4735  00212C  848D               	bsf	3981,2,c	;volatile
  4736  00212E  828D               	bsf	3981,1,c	;volatile
  4737  002130  828B               	bsf	3979,1,c	;volatile
  4738  002132  848B               	bsf	3979,2,c	;volatile
  4739  002134  8C89               	bsf	3977,6,c	;volatile
  4740  002136  8E89               	bsf	3977,7,c	;volatile
  4741                           
  4742                           ;segment.c: 125: LATCbits.LC0 = 0;
  4743  002138  908B               	bcf	3979,0,c	;volatile
  4744                           
  4745                           ;segment.c: 126: break;
  4746  00213A  0012               	return	
  4747  00213C                     l1034:
  4748                           
  4749                           ;segment.c: 128: if (segment == 1) {
  4750  00213C  0410               	decf	dispSeg@segment,w,c
  4751  00213E  A4D8               	btfss	status,2,c
  4752  002140  D008               	goto	l76
  4753                           
  4754                           ;segment.c: 129: LATAbits.LA4 = LATAbits.LA5 = LATEbits.LE0 = LATAbits.LA0 = LATAbits.LA
      +                          1 = 1;
  4755  002142  8289               	bsf	3977,1,c	;volatile
  4756  002144  8089               	bsf	3977,0,c	;volatile
  4757  002146  808D               	bsf	3981,0,c	;volatile
  4758  002148  8A89               	bsf	3977,5,c	;volatile
  4759  00214A  8889               	bsf	3977,4,c	;volatile
  4760                           
  4761                           ;segment.c: 130: LATAbits.LA2 = LATAbits.LA3 = 0;
  4762  00214C  9689               	bcf	3977,3,c	;volatile
  4763  00214E  9489               	bcf	3977,2,c	;volatile
  4764                           
  4765                           ;segment.c: 131: return;
  4766  002150  0012               	return	
  4767  002152                     l76:
  4768                           
  4769                           ;segment.c: 132: }
  4770                           ;segment.c: 133: LATCbits.LC2 = LATCbits.LC0 = LATCbits.LC1 = LATEbits.LE1 = LATEbits.LE
      +                          2 = 1;
  4771  002152  848D               	bsf	3981,2,c	;volatile
  4772  002154  828D               	bsf	3981,1,c	;volatile
  4773  002156  828B               	bsf	3979,1,c	;volatile
  4774  002158  808B               	bsf	3979,0,c	;volatile
  4775  00215A  848B               	bsf	3979,2,c	;volatile
  4776                           
  4777                           ;segment.c: 134: LATAbits.LA7 = LATAbits.LA6 = 0;
  4778  00215C  9C89               	bcf	3977,6,c	;volatile
  4779  00215E  9E89               	bcf	3977,7,c	;volatile
  4780                           
  4781                           ;segment.c: 135: break;
  4782  002160  0012               	return	
  4783  002162                     l1038:
  4784                           
  4785                           ;segment.c: 137: if (segment == 1) {
  4786  002162  0410               	decf	dispSeg@segment,w,c
  4787  002164  A4D8               	btfss	status,2,c
  4788  002166  D008               	goto	l78
  4789                           
  4790                           ;segment.c: 138: LATAbits.LA2 = LATAbits.LA5 = LATEbits.LE0 = LATAbits.LA0 = 1;
  4791  002168  8089               	bsf	3977,0,c	;volatile
  4792  00216A  808D               	bsf	3981,0,c	;volatile
  4793  00216C  8A89               	bsf	3977,5,c	;volatile
  4794  00216E  8489               	bsf	3977,2,c	;volatile
  4795                           
  4796                           ;segment.c: 139: LATAbits.LA3 = LATAbits.LA4 = LATAbits.LA1 = 0;
  4797  002170  9289               	bcf	3977,1,c	;volatile
  4798  002172  9889               	bcf	3977,4,c	;volatile
  4799  002174  9689               	bcf	3977,3,c	;volatile
  4800                           
  4801                           ;segment.c: 140: return;
  4802  002176  0012               	return	
  4803  002178                     l78:
  4804                           
  4805                           ;segment.c: 141: }
  4806                           ;segment.c: 142: LATAbits.LA7 = LATCbits.LC0 = LATCbits.LC1 = LATEbits.LE1 = 1;
  4807  002178  828D               	bsf	3981,1,c	;volatile
  4808  00217A  828B               	bsf	3979,1,c	;volatile
  4809  00217C  808B               	bsf	3979,0,c	;volatile
  4810  00217E  8E89               	bsf	3977,7,c	;volatile
  4811                           
  4812                           ;segment.c: 143: LATAbits.LA6 = LATCbits.LC2 = LATEbits.LE2 = 0;
  4813  002180  948D               	bcf	3981,2,c	;volatile
  4814  002182  948B               	bcf	3979,2,c	;volatile
  4815  002184  9C89               	bcf	3977,6,c	;volatile
  4816                           
  4817                           ;segment.c: 144: break;
  4818  002186  0012               	return	
  4819  002188                     l1042:
  4820                           
  4821                           ;segment.c: 146: if (segment == 1) {
  4822  002188  0410               	decf	dispSeg@segment,w,c
  4823  00218A  A4D8               	btfss	status,2,c
  4824  00218C  D008               	goto	l80
  4825                           
  4826                           ;segment.c: 147: LATAbits.LA3 = LATAbits.LA4 = LATAbits.LA5 = LATEbits.LE0 = LATAbits.LA
      +                          1 = 1;
  4827  00218E  8289               	bsf	3977,1,c	;volatile
  4828  002190  808D               	bsf	3981,0,c	;volatile
  4829  002192  8A89               	bsf	3977,5,c	;volatile
  4830  002194  8889               	bsf	3977,4,c	;volatile
  4831  002196  8689               	bsf	3977,3,c	;volatile
  4832                           
  4833                           ;segment.c: 148: LATAbits.LA2 = LATAbits.LA0 = 0;
  4834  002198  9089               	bcf	3977,0,c	;volatile
  4835  00219A  9489               	bcf	3977,2,c	;volatile
  4836                           
  4837                           ;segment.c: 149: return;
  4838  00219C  0012               	return	
  4839  00219E                     l80:
  4840                           
  4841                           ;segment.c: 150: }
  4842                           ;segment.c: 151: LATAbits.LA6 = LATCbits.LC2 = LATCbits.LC0 = LATCbits.LC1 = LATEbits.LE
      +                          2 = 1;
  4843  00219E  848D               	bsf	3981,2,c	;volatile
  4844  0021A0  828B               	bsf	3979,1,c	;volatile
  4845  0021A2  808B               	bsf	3979,0,c	;volatile
  4846  0021A4  848B               	bsf	3979,2,c	;volatile
  4847  0021A6  8C89               	bsf	3977,6,c	;volatile
  4848                           
  4849                           ;segment.c: 152: LATAbits.LA7 = LATEbits.LE1 = 0;
  4850  0021A8  928D               	bcf	3981,1,c	;volatile
  4851  0021AA  9E89               	bcf	3977,7,c	;volatile
  4852                           
  4853                           ;segment.c: 153: break;
  4854  0021AC  0012               	return	
  4855  0021AE                     l1046:
  4856                           
  4857                           ;segment.c: 155: if (segment == 1) {
  4858  0021AE  0410               	decf	dispSeg@segment,w,c
  4859  0021B0  A4D8               	btfss	status,2,c
  4860  0021B2  D008               	goto	l82
  4861                           
  4862                           ;segment.c: 156: LATAbits.LA2 = LATAbits.LA5 = LATEbits.LE0 = LATAbits.LA0 = LATAbits.LA
      +                          1 = 1;
  4863  0021B4  8289               	bsf	3977,1,c	;volatile
  4864  0021B6  8089               	bsf	3977,0,c	;volatile
  4865  0021B8  808D               	bsf	3981,0,c	;volatile
  4866  0021BA  8A89               	bsf	3977,5,c	;volatile
  4867  0021BC  8489               	bsf	3977,2,c	;volatile
  4868                           
  4869                           ;segment.c: 157: LATAbits.LA3 = LATAbits.LA4 = 0;
  4870  0021BE  9889               	bcf	3977,4,c	;volatile
  4871  0021C0  9689               	bcf	3977,3,c	;volatile
  4872                           
  4873                           ;segment.c: 158: return;
  4874  0021C2  0012               	return	
  4875  0021C4                     l82:
  4876                           
  4877                           ;segment.c: 159: }
  4878                           ;segment.c: 160: LATAbits.LA7 = LATCbits.LC0 = LATCbits.LC1 = LATEbits.LE1 = LATEbits.LE
      +                          2 = 1;
  4879  0021C4  848D               	bsf	3981,2,c	;volatile
  4880  0021C6  828D               	bsf	3981,1,c	;volatile
  4881  0021C8  828B               	bsf	3979,1,c	;volatile
  4882  0021CA  808B               	bsf	3979,0,c	;volatile
  4883  0021CC  8E89               	bsf	3977,7,c	;volatile
  4884                           
  4885                           ;segment.c: 161: LATAbits.LA6 = LATCbits.LC2 = 0;
  4886  0021CE  948B               	bcf	3979,2,c	;volatile
  4887  0021D0  9C89               	bcf	3977,6,c	;volatile
  4888                           
  4889                           ;segment.c: 162: break;
  4890  0021D2  0012               	return	
  4891  0021D4                     l1050:
  4892                           
  4893                           ;segment.c: 164: if (segment == 1) {
  4894  0021D4  0410               	decf	dispSeg@segment,w,c
  4895  0021D6  A4D8               	btfss	status,2,c
  4896  0021D8  D008               	goto	l84
  4897                           
  4898                           ;segment.c: 165: LATAbits.LA2 = LATEbits.LE0 = LATAbits.LA0 = LATAbits.LA1 = 1;
  4899  0021DA  8289               	bsf	3977,1,c	;volatile
  4900  0021DC  8089               	bsf	3977,0,c	;volatile
  4901  0021DE  808D               	bsf	3981,0,c	;volatile
  4902  0021E0  8489               	bsf	3977,2,c	;volatile
  4903                           
  4904                           ;segment.c: 166: LATAbits.LA3 = LATAbits.LA4 = LATAbits.LA5 = 0;
  4905  0021E2  9A89               	bcf	3977,5,c	;volatile
  4906  0021E4  9889               	bcf	3977,4,c	;volatile
  4907  0021E6  9689               	bcf	3977,3,c	;volatile
  4908                           
  4909                           ;segment.c: 167: return;
  4910  0021E8  0012               	return	
  4911  0021EA                     l84:
  4912                           
  4913                           ;segment.c: 168: }
  4914                           ;segment.c: 169: LATAbits.LA7 = LATCbits.LC1 = LATEbits.LE1 = LATEbits.LE2 = 1;
  4915  0021EA  848D               	bsf	3981,2,c	;volatile
  4916  0021EC  828D               	bsf	3981,1,c	;volatile
  4917  0021EE  828B               	bsf	3979,1,c	;volatile
  4918  0021F0  8E89               	bsf	3977,7,c	;volatile
  4919                           
  4920                           ;segment.c: 170: LATAbits.LA6 = LATCbits.LC2 = LATCbits.LC0 = 0;
  4921  0021F2  908B               	bcf	3979,0,c	;volatile
  4922  0021F4  948B               	bcf	3979,2,c	;volatile
  4923  0021F6  9C89               	bcf	3977,6,c	;volatile
  4924                           
  4925                           ;segment.c: 171: break;
  4926  0021F8  0012               	return	
  4927  0021FA                     l1056:
  4928  0021FA  500F               	movf	dispSeg@letter,w,c
  4929                           
  4930                           ; Switch size 1, requested type "space"
  4931                           ; Number of cases is 18, Range of values is 45 to 120
  4932                           ; switch strategies available:
  4933                           ; Name         Instructions Cycles
  4934                           ; simple_byte           55    28 (average)
  4935                           ;	Chosen strategy is simple_byte
  4936  0021FC  0A2D               	xorlw	45	; case 45
  4937  0021FE  B4D8               	btfsc	status,2,c
  4938  002200  D6BA               	goto	l986
  4939  002202  0A1D               	xorlw	29	; case 48
  4940  002204  B4D8               	btfsc	status,2,c
  4941  002206  D6C9               	goto	l990
  4942  002208  0A01               	xorlw	1	; case 49
  4943  00220A  B4D8               	btfsc	status,2,c
  4944  00220C  D6D9               	goto	l994
  4945  00220E  0A03               	xorlw	3	; case 50
  4946  002210  B4D8               	btfsc	status,2,c
  4947  002212  D6E9               	goto	l998
  4948  002214  0A01               	xorlw	1	; case 51
  4949  002216  B4D8               	btfsc	status,2,c
  4950  002218  D6F9               	goto	l1002
  4951  00221A  0A07               	xorlw	7	; case 52
  4952  00221C  B4D8               	btfsc	status,2,c
  4953  00221E  D709               	goto	l1006
  4954  002220  0A01               	xorlw	1	; case 53
  4955  002222  B4D8               	btfsc	status,2,c
  4956  002224  D719               	goto	l1010
  4957  002226  0A03               	xorlw	3	; case 54
  4958  002228  B4D8               	btfsc	status,2,c
  4959  00222A  D729               	goto	l1014
  4960  00222C  0A01               	xorlw	1	; case 55
  4961  00222E  B4D8               	btfsc	status,2,c
  4962  002230  D739               	goto	l1018
  4963  002232  0A0F               	xorlw	15	; case 56
  4964  002234  B4D8               	btfsc	status,2,c
  4965  002236  D749               	goto	l1022
  4966  002238  0A01               	xorlw	1	; case 57
  4967  00223A  B4D8               	btfsc	status,2,c
  4968  00223C  D759               	goto	l1026
  4969  00223E  0A58               	xorlw	88	; case 97
  4970  002240  B4D8               	btfsc	status,2,c
  4971  002242  D769               	goto	l1030
  4972  002244  0A03               	xorlw	3	; case 98
  4973  002246  B4D8               	btfsc	status,2,c
  4974  002248  D779               	goto	l1034
  4975  00224A  0A01               	xorlw	1	; case 99
  4976  00224C  B4D8               	btfsc	status,2,c
  4977  00224E  D789               	goto	l1038
  4978  002250  0A07               	xorlw	7	; case 100
  4979  002252  B4D8               	btfsc	status,2,c
  4980  002254  D799               	goto	l1042
  4981  002256  0A01               	xorlw	1	; case 101
  4982  002258  B4D8               	btfsc	status,2,c
  4983  00225A  D7A9               	goto	l1046
  4984  00225C  0A03               	xorlw	3	; case 102
  4985  00225E  B4D8               	btfsc	status,2,c
  4986  002260  D7B9               	goto	l1050
  4987  002262  0A1E               	xorlw	30	; case 120
  4988  002264  A4D8               	btfss	status,2,c
  4989  002266  0012               	return	
  4990  002268  D674               	goto	l982
  4991  00226A                     __end_of_dispSeg:
  4992                           	opt stack 0
  4993                           tblptru	equ	0xFF8
  4994                           tblptrh	equ	0xFF7
  4995                           tblptrl	equ	0xFF6
  4996                           tablat	equ	0xFF5
  4997                           prodh	equ	0xFF4
  4998                           prodl	equ	0xFF3
  4999                           postinc0	equ	0xFEE
  5000                           wreg	equ	0xFE8
  5001                           postdec1	equ	0xFE5
  5002                           fsr1h	equ	0xFE2
  5003                           fsr1l	equ	0xFE1
  5004                           indf2	equ	0xFDF
  5005                           fsr2h	equ	0xFDA
  5006                           fsr2l	equ	0xFD9
  5007                           status	equ	0xFD8
  5008                           
  5009 ;; *************** function _setMXbits *****************
  5010 ;; Defined at:
  5011 ;;		line 55 in file "source/emulator.c"
  5012 ;; Parameters:    Size  Location     Type
  5013 ;;  subRegister     1    wreg     unsigned char 
  5014 ;;  value           1    0[COMRAM] unsigned char 
  5015 ;; Auto vars:     Size  Location     Type
  5016 ;;  subRegister     1    5[COMRAM] unsigned char 
  5017 ;;  regMX_temp      2    3[COMRAM] unsigned int 
  5018 ;;  value_temp      2    1[COMRAM] unsigned int 
  5019 ;; Return value:  Size  Location     Type
  5020 ;;		None               void
  5021 ;; Registers used:
  5022 ;;		wreg, status,2, status,0
  5023 ;; Tracked objects:
  5024 ;;		On entry : 0/0
  5025 ;;		On exit  : 0/0
  5026 ;;		Unchanged: 0/0
  5027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5028 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5029 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5031 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5032 ;;Total ram usage:        6 bytes
  5033 ;; Hardware stack levels used:    1
  5034 ;; This function calls:
  5035 ;;		Nothing
  5036 ;; This function is called by:
  5037 ;;		_processOpcode
  5038 ;; This function uses a non-reentrant model
  5039 ;;
  5040                           
  5041                           	psect	text6
  5042  002544                     __ptext6:
  5043                           	opt stack 0
  5044  002544                     _setMXbits:
  5045                           	opt stack 29
  5046                           
  5047                           ;incstack = 0
  5048                           ;setMXbits@subRegister stored from wreg
  5049  002544  CFE8 F014          	movff	wreg,setMXbits@subRegister
  5050                           
  5051                           ;emulator.c: 57: uint16_t value_temp = (uint16_t) value;
  5052  002548  C00F  F010         	movff	setMXbits@value,setMXbits@value_temp
  5053  00254C  6A11               	clrf	setMXbits@value_temp+1,c
  5054                           
  5055                           ;emulator.c: 58: uint16_t regMX_temp = regMX;
  5056  00254E  C005  F012         	movff	_regMX,setMXbits@regMX_temp
  5057  002552  C006  F013         	movff	_regMX+1,setMXbits@regMX_temp+1
  5058                           
  5059                           ;emulator.c: 72: }
  5060                           
  5061                           ;emulator.c: 71: break;
  5062                           
  5063                           ;emulator.c: 68: case 1:
  5064                           
  5065                           ;emulator.c: 66: break;
  5066                           
  5067                           ;emulator.c: 61: {
  5068                           ;emulator.c: 62: case 0:
  5069                           
  5070                           ;emulator.c: 60: switch(subRegister)
  5071  002556  5014               	movf	setMXbits@subRegister,w,c
  5072                           
  5073                           ; Switch size 1, requested type "space"
  5074                           ; Number of cases is 2, Range of values is 0 to 1
  5075                           ; switch strategies available:
  5076                           ; Name         Instructions Cycles
  5077                           ; simple_byte            7     4 (average)
  5078                           ;	Chosen strategy is simple_byte
  5079  002558  0A00               	xorlw	0	; case 0
  5080  00255A  A4D8               	btfss	status,2,c
  5081  00255C  0A01               	xorlw	1	; case 1
  5082                           
  5083                           ;emulator.c: 74: regMX = regMX_temp + value_temp;
  5084  00255E  5010               	movf	setMXbits@value_temp,w,c
  5085  002560  2412               	addwf	setMXbits@regMX_temp,w,c
  5086  002562  6E05               	movwf	_regMX,c
  5087  002564  5011               	movf	setMXbits@value_temp+1,w,c
  5088  002566  2013               	addwfc	setMXbits@regMX_temp+1,w,c
  5089  002568  6E06               	movwf	_regMX+1,c
  5090  00256A  0012               	return	
  5091  00256C                     __end_of_setMXbits:
  5092                           	opt stack 0
  5093                           tblptru	equ	0xFF8
  5094                           tblptrh	equ	0xFF7
  5095                           tblptrl	equ	0xFF6
  5096                           tablat	equ	0xFF5
  5097                           prodh	equ	0xFF4
  5098                           prodl	equ	0xFF3
  5099                           postinc0	equ	0xFEE
  5100                           wreg	equ	0xFE8
  5101                           postdec1	equ	0xFE5
  5102                           fsr1h	equ	0xFE2
  5103                           fsr1l	equ	0xFE1
  5104                           indf2	equ	0xFDF
  5105                           fsr2h	equ	0xFDA
  5106                           fsr2l	equ	0xFD9
  5107                           status	equ	0xFD8
  5108                           
  5109 ;; *************** function _immData_toPointer *****************
  5110 ;; Defined at:
  5111 ;;		line 168 in file "source/emulator.c"
  5112 ;; Parameters:    Size  Location     Type
  5113 ;;		None
  5114 ;; Auto vars:     Size  Location     Type
  5115 ;;  pointer         2    2[COMRAM] unsigned int 
  5116 ;; Return value:  Size  Location     Type
  5117 ;;                  2    0[COMRAM] unsigned int 
  5118 ;; Registers used:
  5119 ;;		wreg, status,2, status,0
  5120 ;; Tracked objects:
  5121 ;;		On entry : 0/0
  5122 ;;		On exit  : 0/0
  5123 ;;		Unchanged: 0/0
  5124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5125 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5126 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5128 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5129 ;;Total ram usage:        4 bytes
  5130 ;; Hardware stack levels used:    1
  5131 ;; This function calls:
  5132 ;;		Nothing
  5133 ;; This function is called by:
  5134 ;;		_processOpcode
  5135 ;; This function uses a non-reentrant model
  5136 ;;
  5137                           
  5138                           	psect	text7
  5139  0025AE                     __ptext7:
  5140                           	opt stack 0
  5141  0025AE                     _immData_toPointer:
  5142                           	opt stack 29
  5143                           
  5144                           ;emulator.c: 170: uint16_t pointer = (uint16_t) immData_1;
  5145                           
  5146                           ;incstack = 0
  5147  0025AE  C009  F011         	movff	_immData_1,immData_toPointer@pointer
  5148  0025B2  6A12               	clrf	immData_toPointer@pointer+1,c
  5149                           
  5150                           ;emulator.c: 172: pointer += immData_2;
  5151  0025B4  500A               	movf	_immData_2,w,c
  5152  0025B6  2611               	addwf	immData_toPointer@pointer,f,c
  5153  0025B8  0E00               	movlw	0
  5154  0025BA  2212               	addwfc	immData_toPointer@pointer+1,f,c
  5155                           
  5156                           ;emulator.c: 173: return pointer;
  5157  0025BC  C011  F00F         	movff	immData_toPointer@pointer,?_immData_toPointer
  5158  0025C0  C012  F010         	movff	immData_toPointer@pointer+1,?_immData_toPointer+1
  5159  0025C4  0012               	return	
  5160  0025C6                     __end_of_immData_toPointer:
  5161                           	opt stack 0
  5162                           tblptru	equ	0xFF8
  5163                           tblptrh	equ	0xFF7
  5164                           tblptrl	equ	0xFF6
  5165                           tablat	equ	0xFF5
  5166                           prodh	equ	0xFF4
  5167                           prodl	equ	0xFF3
  5168                           postinc0	equ	0xFEE
  5169                           wreg	equ	0xFE8
  5170                           postdec1	equ	0xFE5
  5171                           fsr1h	equ	0xFE2
  5172                           fsr1l	equ	0xFE1
  5173                           indf2	equ	0xFDF
  5174                           fsr2h	equ	0xFDA
  5175                           fsr2l	equ	0xFD9
  5176                           status	equ	0xFD8
  5177                           
  5178 ;; *************** function _getPortData *****************
  5179 ;; Defined at:
  5180 ;;		line 196 in file "source/emulator.c"
  5181 ;; Parameters:    Size  Location     Type
  5182 ;;  portNumber      1    wreg     unsigned char 
  5183 ;; Auto vars:     Size  Location     Type
  5184 ;;  portNumber      1    0[COMRAM] unsigned char 
  5185 ;; Return value:  Size  Location     Type
  5186 ;;                  1    wreg      unsigned char 
  5187 ;; Registers used:
  5188 ;;		wreg, status,2, status,0
  5189 ;; Tracked objects:
  5190 ;;		On entry : 0/0
  5191 ;;		On exit  : 0/0
  5192 ;;		Unchanged: 0/0
  5193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5195 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5197 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5198 ;;Total ram usage:        1 bytes
  5199 ;; Hardware stack levels used:    1
  5200 ;; This function calls:
  5201 ;;		Nothing
  5202 ;; This function is called by:
  5203 ;;		_processOpcode
  5204 ;; This function uses a non-reentrant model
  5205 ;;
  5206                           
  5207                           	psect	text8
  5208  0025C6                     __ptext8:
  5209                           	opt stack 0
  5210  0025C6                     _getPortData:
  5211                           	opt stack 29
  5212                           
  5213                           ;incstack = 0
  5214                           ;getPortData@portNumber stored from wreg
  5215  0025C6  CFE8 F00F          	movff	wreg,getPortData@portNumber
  5216                           
  5217                           ;emulator.c: 198: switch (portNumber)
  5218  0025CA  D002               	goto	l1182
  5219  0025CC                     l216:
  5220                           
  5221                           ;emulator.c: 201: return RCREG2;
  5222  0025CC  5074               	movf	3956,w,c	;volatile
  5223  0025CE  0012               	return	
  5224  0025D0                     l1182:
  5225  0025D0  500F               	movf	getPortData@portNumber,w,c
  5226                           
  5227                           ; Switch size 1, requested type "space"
  5228                           ; Number of cases is 1, Range of values is 2 to 2
  5229                           ; switch strategies available:
  5230                           ; Name         Instructions Cycles
  5231                           ; simple_byte            4     3 (average)
  5232                           ;	Chosen strategy is simple_byte
  5233  0025D2  0A02               	xorlw	2	; case 2
  5234  0025D4  B4D8               	btfsc	status,2,c
  5235  0025D6  D7FA               	goto	l216
  5236                           
  5237                           ;emulator.c: 204: return 0;
  5238  0025D8  0E00               	movlw	0
  5239  0025DA  0012               	return	
  5240  0025DC                     __end_of_getPortData:
  5241                           	opt stack 0
  5242                           tblptru	equ	0xFF8
  5243                           tblptrh	equ	0xFF7
  5244                           tblptrl	equ	0xFF6
  5245                           tablat	equ	0xFF5
  5246                           prodh	equ	0xFF4
  5247                           prodl	equ	0xFF3
  5248                           postinc0	equ	0xFEE
  5249                           wreg	equ	0xFE8
  5250                           postdec1	equ	0xFE5
  5251                           fsr1h	equ	0xFE2
  5252                           fsr1l	equ	0xFE1
  5253                           indf2	equ	0xFDF
  5254                           fsr2h	equ	0xFDA
  5255                           fsr2l	equ	0xFD9
  5256                           status	equ	0xFD8
  5257                           
  5258 ;; *************** function _getMXbits *****************
  5259 ;; Defined at:
  5260 ;;		line 38 in file "source/emulator.c"
  5261 ;; Parameters:    Size  Location     Type
  5262 ;;  subRegister     1    wreg     unsigned char 
  5263 ;; Auto vars:     Size  Location     Type
  5264 ;;  subRegister     1    2[COMRAM] unsigned char 
  5265 ;;  regMX_temp      2    0[COMRAM] unsigned int 
  5266 ;; Return value:  Size  Location     Type
  5267 ;;                  1    wreg      unsigned char 
  5268 ;; Registers used:
  5269 ;;		wreg, status,2
  5270 ;; Tracked objects:
  5271 ;;		On entry : 0/0
  5272 ;;		On exit  : 0/0
  5273 ;;		Unchanged: 0/0
  5274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5276 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5278 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5279 ;;Total ram usage:        3 bytes
  5280 ;; Hardware stack levels used:    1
  5281 ;; This function calls:
  5282 ;;		Nothing
  5283 ;; This function is called by:
  5284 ;;		_processOpcode
  5285 ;; This function uses a non-reentrant model
  5286 ;;
  5287                           
  5288                           	psect	text9
  5289  0025DC                     __ptext9:
  5290                           	opt stack 0
  5291  0025DC                     _getMXbits:
  5292                           	opt stack 29
  5293                           
  5294                           ;incstack = 0
  5295                           ;getMXbits@subRegister stored from wreg
  5296  0025DC  CFE8 F011          	movff	wreg,getMXbits@subRegister
  5297                           
  5298                           ;emulator.c: 40: uint16_t regMX_temp = regMX;
  5299  0025E0  C005  F00F         	movff	_regMX,getMXbits@regMX_temp
  5300  0025E4  C006  F010         	movff	_regMX+1,getMXbits@regMX_temp+1
  5301                           
  5302                           ;emulator.c: 45: }
  5303                           ;emulator.c: 47: return (uint8_t) regMX_temp;
  5304  0025E8  500F               	movf	getMXbits@regMX_temp,w,c
  5305  0025EA  0012               	return	
  5306  0025EC                     __end_of_getMXbits:
  5307                           	opt stack 0
  5308                           tblptru	equ	0xFF8
  5309                           tblptrh	equ	0xFF7
  5310                           tblptrl	equ	0xFF6
  5311                           tablat	equ	0xFF5
  5312                           prodh	equ	0xFF4
  5313                           prodl	equ	0xFF3
  5314                           postinc0	equ	0xFEE
  5315                           wreg	equ	0xFE8
  5316                           postdec1	equ	0xFE5
  5317                           fsr1h	equ	0xFE2
  5318                           fsr1l	equ	0xFE1
  5319                           indf2	equ	0xFDF
  5320                           fsr2h	equ	0xFDA
  5321                           fsr2l	equ	0xFD9
  5322                           status	equ	0xFD8
  5323                           
  5324 ;; *************** function _getFbits *****************
  5325 ;; Defined at:
  5326 ;;		line 83 in file "source/emulator.c"
  5327 ;; Parameters:    Size  Location     Type
  5328 ;;  subRegister     1    wreg     unsigned char 
  5329 ;; Auto vars:     Size  Location     Type
  5330 ;;  subRegister     1    0[COMRAM] unsigned char 
  5331 ;;  regF_temp       1    1[COMRAM] unsigned char 
  5332 ;; Return value:  Size  Location     Type
  5333 ;;                  1    wreg      unsigned char 
  5334 ;; Registers used:
  5335 ;;		wreg, status,2, status,0
  5336 ;; Tracked objects:
  5337 ;;		On entry : 0/0
  5338 ;;		On exit  : 0/0
  5339 ;;		Unchanged: 0/0
  5340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5342 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5344 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5345 ;;Total ram usage:        2 bytes
  5346 ;; Hardware stack levels used:    1
  5347 ;; This function calls:
  5348 ;;		Nothing
  5349 ;; This function is called by:
  5350 ;;		_processOpcode
  5351 ;; This function uses a non-reentrant model
  5352 ;;
  5353                           
  5354                           	psect	text10
  5355  00256C                     __ptext10:
  5356                           	opt stack 0
  5357  00256C                     _getFbits:
  5358                           	opt stack 29
  5359                           
  5360                           ;incstack = 0
  5361                           ;getFbits@subRegister stored from wreg
  5362  00256C  CFE8 F00F          	movff	wreg,getFbits@subRegister
  5363                           
  5364                           ;emulator.c: 85: uint8_t regF_temp = regF;
  5365  002570  C00D  F010         	movff	_regF,getFbits@regF_temp
  5366                           
  5367                           ;emulator.c: 113: }
  5368                           
  5369                           ;emulator.c: 112: break;
  5370                           
  5371                           ;emulator.c: 109: case 4:
  5372                           
  5373                           ;emulator.c: 107: break;
  5374                           
  5375                           ;emulator.c: 104: case 3:
  5376                           
  5377                           ;emulator.c: 102: break;
  5378                           
  5379                           ;emulator.c: 99: case 2:
  5380                           
  5381                           ;emulator.c: 97: break;
  5382                           
  5383                           ;emulator.c: 94: case 1:
  5384                           
  5385                           ;emulator.c: 92: break;
  5386                           
  5387                           ;emulator.c: 88: {
  5388                           ;emulator.c: 89: case 0:
  5389                           
  5390                           ;emulator.c: 87: switch(subRegister)
  5391  002574  500F               	movf	getFbits@subRegister,w,c
  5392                           
  5393                           ; Switch size 1, requested type "space"
  5394                           ; Number of cases is 5, Range of values is 0 to 4
  5395                           ; switch strategies available:
  5396                           ; Name         Instructions Cycles
  5397                           ; simple_byte           16     9 (average)
  5398                           ;	Chosen strategy is simple_byte
  5399  002576  0A00               	xorlw	0	; case 0
  5400  002578  B4D8               	btfsc	status,2,c
  5401  00257A  D009               	goto	l191
  5402  00257C  0A01               	xorlw	1	; case 1
  5403  00257E  B4D8               	btfsc	status,2,c
  5404  002580  D006               	goto	l191
  5405  002582  0A03               	xorlw	3	; case 2
  5406  002584  B4D8               	btfsc	status,2,c
  5407  002586  D003               	goto	l191
  5408  002588  0A01               	xorlw	1	; case 3
  5409  00258A  A4D8               	btfss	status,2,c
  5410  00258C  0A07               	xorlw	7	; case 4
  5411  00258E                     l191:
  5412                           
  5413                           ;emulator.c: 115: return regF_temp;
  5414  00258E  5010               	movf	getFbits@regF_temp,w,c
  5415  002590  0012               	return	
  5416  002592                     __end_of_getFbits:
  5417                           	opt stack 0
  5418                           tblptru	equ	0xFF8
  5419                           tblptrh	equ	0xFF7
  5420                           tblptrl	equ	0xFF6
  5421                           tablat	equ	0xFF5
  5422                           prodh	equ	0xFF4
  5423                           prodl	equ	0xFF3
  5424                           postinc0	equ	0xFEE
  5425                           wreg	equ	0xFE8
  5426                           postdec1	equ	0xFE5
  5427                           fsr1h	equ	0xFE2
  5428                           fsr1l	equ	0xFE1
  5429                           indf2	equ	0xFDF
  5430                           fsr2h	equ	0xFDA
  5431                           fsr2l	equ	0xFD9
  5432                           status	equ	0xFD8
  5433                           
  5434 ;; *************** function _initializeRegisters *****************
  5435 ;; Defined at:
  5436 ;;		line 176 in file "source/emulator.c"
  5437 ;; Parameters:    Size  Location     Type
  5438 ;;		None
  5439 ;; Auto vars:     Size  Location     Type
  5440 ;;		None
  5441 ;; Return value:  Size  Location     Type
  5442 ;;		None               void
  5443 ;; Registers used:
  5444 ;;		wreg, status,2, status,0, cstack
  5445 ;; Tracked objects:
  5446 ;;		On entry : 0/0
  5447 ;;		On exit  : 0/0
  5448 ;;		Unchanged: 0/0
  5449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5452 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5453 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5454 ;;Total ram usage:        1 bytes
  5455 ;; Hardware stack levels used:    1
  5456 ;; Hardware stack levels required when called:    1
  5457 ;; This function calls:
  5458 ;;		_setFbits
  5459 ;; This function is called by:
  5460 ;;		_main
  5461 ;; This function uses a non-reentrant model
  5462 ;;
  5463                           
  5464                           	psect	text11
  5465  00238C                     __ptext11:
  5466                           	opt stack 0
  5467  00238C                     _initializeRegisters:
  5468                           	opt stack 29
  5469                           
  5470                           ;emulator.c: 178: regA = 0;
  5471                           
  5472                           ;incstack = 0
  5473  00238C  6E14               	movwf	??_initializeRegisters& (0+255),c
  5474  00238E  0E00               	movlw	0
  5475  002390  6E0B               	movwf	_regA,c
  5476  002392  5014               	movf	??_initializeRegisters& (0+255),w,c
  5477                           
  5478                           ;emulator.c: 179: regB = 0;
  5479  002394  6E14               	movwf	??_initializeRegisters& (0+255),c
  5480  002396  0E00               	movlw	0
  5481  002398  6E0C               	movwf	_regB,c
  5482  00239A  5014               	movf	??_initializeRegisters& (0+255),w,c
  5483                           
  5484                           ;emulator.c: 181: regPC = 256;
  5485  00239C  0E01               	movlw	1
  5486  00239E  6E08               	movwf	_regPC+1,c
  5487  0023A0  0E00               	movlw	0
  5488  0023A2  6E07               	movwf	_regPC,c
  5489                           
  5490                           ;emulator.c: 182: regSP = 0;
  5491  0023A4  6E14               	movwf	??_initializeRegisters& (0+255),c
  5492  0023A6  0E00               	movlw	0
  5493  0023A8  6E0E               	movwf	_regSP,c
  5494  0023AA  5014               	movf	??_initializeRegisters& (0+255),w,c
  5495                           
  5496                           ;emulator.c: 183: setFbits(0, 0);
  5497  0023AC  6E14               	movwf	??_initializeRegisters& (0+255),c
  5498  0023AE  0E00               	movlw	0
  5499  0023B0  6E0F               	movwf	setFbits@value,c
  5500  0023B2  5014               	movf	??_initializeRegisters& (0+255),w,c
  5501  0023B4  0E00               	movlw	0
  5502  0023B6  EC51  F012         	call	_setFbits
  5503                           
  5504                           ;emulator.c: 184: setFbits(1, 0);
  5505  0023BA  6E14               	movwf	??_initializeRegisters& (0+255),c
  5506  0023BC  0E00               	movlw	0
  5507  0023BE  6E0F               	movwf	setFbits@value,c
  5508  0023C0  5014               	movf	??_initializeRegisters& (0+255),w,c
  5509  0023C2  0E01               	movlw	1
  5510  0023C4  EC51  F012         	call	_setFbits
  5511                           
  5512                           ;emulator.c: 185: setFbits(2, 0);
  5513  0023C8  6E14               	movwf	??_initializeRegisters& (0+255),c
  5514  0023CA  0E00               	movlw	0
  5515  0023CC  6E0F               	movwf	setFbits@value,c
  5516  0023CE  5014               	movf	??_initializeRegisters& (0+255),w,c
  5517  0023D0  0E02               	movlw	2
  5518  0023D2  EC51  F012         	call	_setFbits
  5519                           
  5520                           ;emulator.c: 186: setFbits(4, 0);
  5521  0023D6  6E14               	movwf	??_initializeRegisters& (0+255),c
  5522  0023D8  0E00               	movlw	0
  5523  0023DA  6E0F               	movwf	setFbits@value,c
  5524  0023DC  5014               	movf	??_initializeRegisters& (0+255),w,c
  5525  0023DE  0E04               	movlw	4
  5526  0023E0  EC51  F012         	call	_setFbits
  5527                           
  5528                           ;emulator.c: 187: setFbits(3, 0);
  5529  0023E4  6E14               	movwf	??_initializeRegisters& (0+255),c
  5530  0023E6  0E00               	movlw	0
  5531  0023E8  6E0F               	movwf	setFbits@value,c
  5532  0023EA  5014               	movf	??_initializeRegisters& (0+255),w,c
  5533  0023EC  0E03               	movlw	3
  5534  0023EE  EC51  F012         	call	_setFbits
  5535  0023F2  0012               	return	
  5536  0023F4                     __end_of_initializeRegisters:
  5537                           	opt stack 0
  5538                           tblptru	equ	0xFF8
  5539                           tblptrh	equ	0xFF7
  5540                           tblptrl	equ	0xFF6
  5541                           tablat	equ	0xFF5
  5542                           prodh	equ	0xFF4
  5543                           prodl	equ	0xFF3
  5544                           postinc0	equ	0xFEE
  5545                           wreg	equ	0xFE8
  5546                           postdec1	equ	0xFE5
  5547                           fsr1h	equ	0xFE2
  5548                           fsr1l	equ	0xFE1
  5549                           indf2	equ	0xFDF
  5550                           fsr2h	equ	0xFDA
  5551                           fsr2l	equ	0xFD9
  5552                           status	equ	0xFD8
  5553                           
  5554 ;; *************** function _setFbits *****************
  5555 ;; Defined at:
  5556 ;;		line 123 in file "source/emulator.c"
  5557 ;; Parameters:    Size  Location     Type
  5558 ;;  subRegister     1    wreg     unsigned char 
  5559 ;;  value           1    0[COMRAM] unsigned char 
  5560 ;; Auto vars:     Size  Location     Type
  5561 ;;  subRegister     1    2[COMRAM] unsigned char 
  5562 ;;  regF_temp2      1    4[COMRAM] unsigned char 
  5563 ;;  regF_temp1      1    3[COMRAM] unsigned char 
  5564 ;; Return value:  Size  Location     Type
  5565 ;;		None               void
  5566 ;; Registers used:
  5567 ;;		wreg, status,2, status,0
  5568 ;; Tracked objects:
  5569 ;;		On entry : 0/0
  5570 ;;		On exit  : 0/0
  5571 ;;		Unchanged: 0/0
  5572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5573 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5574 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5575 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5576 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5577 ;;Total ram usage:        5 bytes
  5578 ;; Hardware stack levels used:    1
  5579 ;; This function calls:
  5580 ;;		Nothing
  5581 ;; This function is called by:
  5582 ;;		_initializeRegisters
  5583 ;;		_processOpcode
  5584 ;; This function uses a non-reentrant model
  5585 ;;
  5586                           
  5587                           	psect	text12
  5588  0024A2                     __ptext12:
  5589                           	opt stack 0
  5590  0024A2                     _setFbits:
  5591                           	opt stack 29
  5592                           
  5593                           ;incstack = 0
  5594                           ;setFbits@subRegister stored from wreg
  5595  0024A2  CFE8 F011          	movff	wreg,setFbits@subRegister
  5596                           
  5597                           ;emulator.c: 125: uint8_t regF_temp1 = regF;
  5598  0024A6  C00D  F012         	movff	_regF,setFbits@regF_temp1
  5599                           
  5600                           ;emulator.c: 126: uint8_t regF_temp2 = regF;
  5601  0024AA  C00D  F013         	movff	_regF,setFbits@regF_temp2
  5602                           
  5603                           ;emulator.c: 128: switch(subRegister)
  5604  0024AE  D005               	goto	l1166
  5605  0024B0                     l1162:
  5606                           
  5607                           ;emulator.c: 133: regF_temp2 = 0;
  5608  0024B0  6E10               	movwf	??_setFbits& (0+255),c
  5609  0024B2  0E00               	movlw	0
  5610  0024B4  6E13               	movwf	setFbits@regF_temp2,c
  5611  0024B6  5010               	movf	??_setFbits& (0+255),w,c
  5612                           
  5613                           ;emulator.c: 134: break;
  5614  0024B8  D00D               	goto	l1168
  5615  0024BA                     l1166:
  5616  0024BA  5011               	movf	setFbits@subRegister,w,c
  5617                           
  5618                           ; Switch size 1, requested type "space"
  5619                           ; Number of cases is 5, Range of values is 0 to 4
  5620                           ; switch strategies available:
  5621                           ; Name         Instructions Cycles
  5622                           ; simple_byte           16     9 (average)
  5623                           ;	Chosen strategy is simple_byte
  5624  0024BC  0A00               	xorlw	0	; case 0
  5625  0024BE  B4D8               	btfsc	status,2,c
  5626  0024C0  D7F7               	goto	l1162
  5627  0024C2  0A01               	xorlw	1	; case 1
  5628  0024C4  B4D8               	btfsc	status,2,c
  5629  0024C6  D006               	goto	l1168
  5630  0024C8  0A03               	xorlw	3	; case 2
  5631  0024CA  B4D8               	btfsc	status,2,c
  5632  0024CC  D003               	goto	l1168
  5633  0024CE  0A01               	xorlw	1	; case 3
  5634  0024D0  A4D8               	btfss	status,2,c
  5635  0024D2  0A07               	xorlw	7	; case 4
  5636  0024D4                     l1168:
  5637                           
  5638                           ;emulator.c: 165: regF = regF_temp1 + regF_temp2 + value;
  5639  0024D4  5012               	movf	setFbits@regF_temp1,w,c
  5640  0024D6  2413               	addwf	setFbits@regF_temp2,w,c
  5641  0024D8  240F               	addwf	setFbits@value,w,c
  5642  0024DA  6E0D               	movwf	_regF,c
  5643  0024DC  0012               	return	
  5644  0024DE                     __end_of_setFbits:
  5645                           	opt stack 0
  5646                           tblptru	equ	0xFF8
  5647                           tblptrh	equ	0xFF7
  5648                           tblptrl	equ	0xFF6
  5649                           tablat	equ	0xFF5
  5650                           prodh	equ	0xFF4
  5651                           prodl	equ	0xFF3
  5652                           postinc0	equ	0xFEE
  5653                           wreg	equ	0xFE8
  5654                           postdec1	equ	0xFE5
  5655                           fsr1h	equ	0xFE2
  5656                           fsr1l	equ	0xFE1
  5657                           indf2	equ	0xFDF
  5658                           fsr2h	equ	0xFDA
  5659                           fsr2l	equ	0xFD9
  5660                           status	equ	0xFD8
  5661                           
  5662 ;; *************** function _initPorts *****************
  5663 ;; Defined at:
  5664 ;;		line 26 in file "source/system.c"
  5665 ;; Parameters:    Size  Location     Type
  5666 ;;		None
  5667 ;; Auto vars:     Size  Location     Type
  5668 ;;		None
  5669 ;; Return value:  Size  Location     Type
  5670 ;;		None               void
  5671 ;; Registers used:
  5672 ;;		wreg, status,2
  5673 ;; Tracked objects:
  5674 ;;		On entry : 0/0
  5675 ;;		On exit  : 0/0
  5676 ;;		Unchanged: 0/0
  5677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5681 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5682 ;;Total ram usage:        0 bytes
  5683 ;; Hardware stack levels used:    1
  5684 ;; This function calls:
  5685 ;;		Nothing
  5686 ;; This function is called by:
  5687 ;;		_main
  5688 ;; This function uses a non-reentrant model
  5689 ;;
  5690                           
  5691                           	psect	text13
  5692  002514                     __ptext13:
  5693                           	opt stack 0
  5694  002514                     _initPorts:
  5695                           	opt stack 30
  5696                           
  5697                           ;system.c: 28: TRISA = 0;
  5698                           
  5699                           ;incstack = 0
  5700  002514  0E00               	movlw	0
  5701  002516  6E92               	movwf	3986,c	;volatile
  5702                           
  5703                           ;system.c: 29: TRISC = 0;
  5704  002518  0E00               	movlw	0
  5705  00251A  6E94               	movwf	3988,c	;volatile
  5706                           
  5707                           ;system.c: 30: TRISE = 0;
  5708  00251C  0E00               	movlw	0
  5709  00251E  6E96               	movwf	3990,c	;volatile
  5710                           
  5711                           ;system.c: 32: ANSELD = 0;
  5712  002520  0E00               	movlw	0
  5713  002522  010F               	movlb	15	; () banked
  5714  002524  010F               	movlb	15	; () banked
  5715  002526  6F3B               	movwf	59,b	;volatile
  5716                           
  5717                           ; BSR set to: 15
  5718                           ;system.c: 33: TRISDbits.RD3 = 0;
  5719  002528  9695               	bcf	3989,3,c	;volatile
  5720                           
  5721                           ; BSR set to: 15
  5722                           ;system.c: 34: TRISDbits.RD4 = 1;
  5723  00252A  8895               	bsf	3989,4,c	;volatile
  5724                           
  5725                           ; BSR set to: 15
  5726                           ;system.c: 35: TRISDbits.RD5 = 0;
  5727  00252C  9A95               	bcf	3989,5,c	;volatile
  5728                           
  5729                           ; BSR set to: 15
  5730                           ;system.c: 36: TRISDbits.RD7 = 1;
  5731  00252E  8E95               	bsf	3989,7,c	;volatile
  5732                           
  5733                           ; BSR set to: 15
  5734                           ;system.c: 37: TRISDbits.RD6 = 0;
  5735  002530  9C95               	bcf	3989,6,c	;volatile
  5736                           
  5737                           ;system.c: 39: LATA = 0;
  5738  002532  0E00               	movlw	0
  5739  002534  6E89               	movwf	3977,c	;volatile
  5740                           
  5741                           ;system.c: 40: LATC = 0;
  5742  002536  0E00               	movlw	0
  5743  002538  6E8B               	movwf	3979,c	;volatile
  5744                           
  5745                           ;system.c: 41: LATD = 0;
  5746  00253A  0E00               	movlw	0
  5747  00253C  6E8C               	movwf	3980,c	;volatile
  5748                           
  5749                           ;system.c: 42: LATE = 0;
  5750  00253E  0E00               	movlw	0
  5751  002540  6E8D               	movwf	3981,c	;volatile
  5752                           
  5753                           ; BSR set to: 15
  5754  002542  0012               	return	
  5755  002544                     __end_of_initPorts:
  5756                           	opt stack 0
  5757                           tblptru	equ	0xFF8
  5758                           tblptrh	equ	0xFF7
  5759                           tblptrl	equ	0xFF6
  5760                           tablat	equ	0xFF5
  5761                           prodh	equ	0xFF4
  5762                           prodl	equ	0xFF3
  5763                           postinc0	equ	0xFEE
  5764                           wreg	equ	0xFE8
  5765                           postdec1	equ	0xFE5
  5766                           fsr1h	equ	0xFE2
  5767                           fsr1l	equ	0xFE1
  5768                           indf2	equ	0xFDF
  5769                           fsr2h	equ	0xFDA
  5770                           fsr2l	equ	0xFD9
  5771                           status	equ	0xFD8
  5772                           
  5773 ;; *************** function _initOscillator *****************
  5774 ;; Defined at:
  5775 ;;		line 9 in file "source/system.c"
  5776 ;; Parameters:    Size  Location     Type
  5777 ;;		None
  5778 ;; Auto vars:     Size  Location     Type
  5779 ;;		None
  5780 ;; Return value:  Size  Location     Type
  5781 ;;		None               void
  5782 ;; Registers used:
  5783 ;;		wreg, status,2
  5784 ;; Tracked objects:
  5785 ;;		On entry : 0/0
  5786 ;;		On exit  : 0/0
  5787 ;;		Unchanged: 0/0
  5788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5792 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5793 ;;Total ram usage:        0 bytes
  5794 ;; Hardware stack levels used:    1
  5795 ;; This function calls:
  5796 ;;		Nothing
  5797 ;; This function is called by:
  5798 ;;		_main
  5799 ;; This function uses a non-reentrant model
  5800 ;;
  5801                           
  5802                           	psect	text14
  5803  002592                     __ptext14:
  5804                           	opt stack 0
  5805  002592                     _initOscillator:
  5806                           	opt stack 30
  5807                           
  5808                           ;system.c: 11: OSCCONbits.IDLEN = 0;
  5809                           
  5810                           ; BSR set to: 15
  5811                           ;incstack = 0
  5812  002592  9ED3               	bcf	4051,7,c	;volatile
  5813                           
  5814                           ;system.c: 12: OSCCONbits.IRCF = 0b111;
  5815  002594  88D3               	bsf	4051,4,c	;volatile
  5816  002596  8AD3               	bsf	4051,5,c	;volatile
  5817  002598  8CD3               	bsf	4051,6,c	;volatile
  5818                           
  5819                           ;system.c: 13: OSCCONbits.SCS = 0b10;
  5820  00259A  50D3               	movf	4051,w,c	;volatile
  5821  00259C  0BFC               	andlw	-4
  5822  00259E  0902               	iorlw	2
  5823  0025A0  6ED3               	movwf	4051,c	;volatile
  5824                           
  5825                           ;system.c: 14: OSCCON2bits.MFIOSEL = 0;
  5826  0025A2  98D2               	bcf	4050,4,c	;volatile
  5827                           
  5828                           ;system.c: 15: OSCCON2bits.SOSCGO = 0;
  5829  0025A4  96D2               	bcf	4050,3,c	;volatile
  5830                           
  5831                           ;system.c: 16: OSCCON2bits.PRISD = 0;
  5832  0025A6  94D2               	bcf	4050,2,c	;volatile
  5833  0025A8                     l112:
  5834  0025A8  B4D3               	btfsc	4051,2,c	;volatile
  5835  0025AA  0012               	return	
  5836  0025AC  D7FD               	goto	l112
  5837  0025AE                     __end_of_initOscillator:
  5838                           	opt stack 0
  5839                           tblptru	equ	0xFF8
  5840                           tblptrh	equ	0xFF7
  5841                           tblptrl	equ	0xFF6
  5842                           tablat	equ	0xFF5
  5843                           prodh	equ	0xFF4
  5844                           prodl	equ	0xFF3
  5845                           postinc0	equ	0xFEE
  5846                           wreg	equ	0xFE8
  5847                           postdec1	equ	0xFE5
  5848                           fsr1h	equ	0xFE2
  5849                           fsr1l	equ	0xFE1
  5850                           indf2	equ	0xFDF
  5851                           fsr2h	equ	0xFDA
  5852                           fsr2l	equ	0xFD9
  5853                           status	equ	0xFD8
  5854                           tblptru	equ	0xFF8
  5855                           tblptrh	equ	0xFF7
  5856                           tblptrl	equ	0xFF6
  5857                           tablat	equ	0xFF5
  5858                           prodh	equ	0xFF4
  5859                           prodl	equ	0xFF3
  5860                           postinc0	equ	0xFEE
  5861                           wreg	equ	0xFE8
  5862                           postdec1	equ	0xFE5
  5863                           fsr1h	equ	0xFE2
  5864                           fsr1l	equ	0xFE1
  5865                           indf2	equ	0xFDF
  5866                           fsr2h	equ	0xFDA
  5867                           fsr2l	equ	0xFD9
  5868                           status	equ	0xFD8
  5869                           
  5870                           	psect	rparam
  5871  0000                     tblptru	equ	0xFF8
  5872                           tblptrh	equ	0xFF7
  5873                           tblptrl	equ	0xFF6
  5874                           tablat	equ	0xFF5
  5875                           prodh	equ	0xFF4
  5876                           prodl	equ	0xFF3
  5877                           postinc0	equ	0xFEE
  5878                           wreg	equ	0xFE8
  5879                           postdec1	equ	0xFE5
  5880                           fsr1h	equ	0xFE2
  5881                           fsr1l	equ	0xFE1
  5882                           indf2	equ	0xFDF
  5883                           fsr2h	equ	0xFDA
  5884                           fsr2l	equ	0xFD9
  5885                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    4
    Data        2048
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     14      28
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_processOpcode
    _processOpcode->_setPortData
    _setPortData->_enableSerial
    _initializeRegisters->_setFbits

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    6134
                                             13 COMRAM     1     1      0
                            _dispSeg
                     _initOscillator
                          _initPorts
                _initializeRegisters
                      _processOpcode
 ---------------------------------------------------------------------------------
 (1) _processOpcode                                        5     5      0    3443
                                              8 COMRAM     5     5      0
                           _getFbits
                          _getMXbits
                        _getPortData
                  _immData_toPointer
                           _setFbits
                          _setMXbits
                        _setPortData
                     _update_immData
 ---------------------------------------------------------------------------------
 (2) _update_immData                                       2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _setPortData                                          4     3      1    1946
                                              4 COMRAM     4     3      1
                            _dispSeg
                       _enableSerial
 ---------------------------------------------------------------------------------
 (3) _enableSerial                                         4     2      2      49
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _dispSeg                                              2     1      1    1645
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _setMXbits                                            6     5      1     196
                                              0 COMRAM     6     5      1
 ---------------------------------------------------------------------------------
 (2) _immData_toPointer                                    4     2      2      15
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _getPortData                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _getMXbits                                            3     3      0      30
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _getFbits                                             2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _initializeRegisters                                  1     1      0    1046
                                              5 COMRAM     1     1      0
                           _setFbits
 ---------------------------------------------------------------------------------
 (2) _setFbits                                             5     4      1    1046
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (1) _initPorts                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initOscillator                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _dispSeg
   _initOscillator
   _initPorts
   _initializeRegisters
     _setFbits
   _processOpcode
     _getFbits
     _getMXbits
     _getPortData
     _immData_toPointer
     _setFbits
     _setMXbits
     _setPortData
       _dispSeg
       _enableSerial
     _update_immData

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0     800      37       52.6%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      E      1C       1       29.5%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      1C      12        0.0%
DATA                 0      0     81C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Wed Mar 12 13:42:13 2014

                          l51 1F8A                            l60 2022                            l53 1FB0  
                          l70 20E0                            l62 2048                            l80 219E  
                          l72 2106                            l64 206E                            l56 1FD6  
                          l48 1F66                            l82 21C4                            l74 212C  
                          l66 2094                            l58 1FFC                            l84 21EA  
                          l76 2152                            l68 20BA                            l78 2178  
              _update_immData 23F4                  __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000  
                __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000                           l112 25A8  
                         l222 2270                           l216 25CC                           l260 18C4  
                         l229 22C8                           l333 1CB0                           l261 18CA  
                         l262 18D0                           l254 1888                           l191 258E  
                         l271 190C                           l263 18D6                           l255 188E  
                         l336 1CF6                           l256 1894                           l274 1936  
                         l277 1960                           l278 196A                           l990 1F9A  
                         l982 1F52                           l994 1FC0                           l986 1F76  
                         l998 1FE6                  __CFG_CPB$OFF 000000                  __CFG_CPD$OFF 000000  
                         prod 000FF3                           wreg 000FE8         getPortData@portNumber 000F  
                  _TXSTA2bits 000F72                  __CFG_LVP$OFF 000000                          l1010 2058  
                        l1002 200C                          l1030 2116                          l1022 20CA  
                        l1014 207E                          l1006 2032                          l1200 2316  
                        l1050 21D4                          l1042 2188                          l1034 213C  
                        l1026 20F0                          l1018 20A4                          l1202 231C  
                        l1204 2374                          l1300 22E6                          l1046 21AE  
                        l1038 2162                          l1310 1826                          l1056 21FA  
                        l1400 19EA                          l1320 1854                          l1312 1836  
                        l1162 24B0                          l1410 1A16                          l1330 1878  
                        l1314 183E                          l1252 2430                          l1420 1A30  
                        l1404 19FA                          l1332 1880                          l1324 1860  
                        l1308 1816                          l1166 24BA                          l1182 25D0  
                        l1502 1B9C                          l1430 1A4C                          l1414 1A1E  
                        l1350 18F6                          l1342 18E4                          l1334 189A  
                        l1318 1848                          l1168 24D4                          l1192 2306  
                        l1280 228A                          l1248 2412                          l1520 1C04  
                        l1512 1BCC                          l1440 1A68                          l1424 1A38  
                        l1360 1908                          l1344 18EA                          l1336 18AC  
                        l1328 186C                          l1600 249C                          l1194 230A  
                        l1450 1A84                          l1434 1A54                          l1354 18FC  
                        l1338 18B8                          l1196 230E                          l1292 22BA  
                        l1284 229A                          l1276 227C                          l1540 1C9C  
                        l1532 1C64                          l1524 1C22                          l1516 1BE4  
                        l1508 1BB4                          l1460 1AAA                          l1444 1A70  
                        l1372 1950                          l1356 1902                          l1348 18F0  
                        l1710 236A                          l1702 2346                          l1198 2312  
                        l1294 22CE                          l1550 1CE2                          l1542 1CAA  
                        l1534 1C72                          l1454 1A8E                          l1390 19BC  
                        l1382 1988                          l1366 1926                          l1704 234C  
                        l1296 22DA                          l1288 22AA                          l1560 1D36  
                        l1552 1CF0                          l1536 1C78                          l1528 1C40  
                        l1384 1996                          l1706 2356                          l1570 1D76  
                        l1490 1B50                          l1482 1B20                          l1474 1AEA  
                        l1466 1ACC                          l1458 1AA0                          l1394 19D4  
                        l1378 1972         setPortData@portNumber 0014                          l1708 2360  
                        l1572 1D7A                          l1564 1D40                          l1396 19E4  
                        l1388 19AE                          l1558 1D28                          l1494 1B6C  
                        l1486 1B36                          l1478 1B0A                          l1582 1DA6  
                        l1576 1D94                          l1568 1D68                          l1584 1F46  
                        l1578 1DA2                          l1498 1B86                          l1594 247A  
                        l1598 2492                          _LATA 000F89                          _LATC 000F8B  
                        _LATD 000F8C                          _LATE 000F8D                          _main 2452  
                        _regA 000B                          _regB 000C                          _regF 000D  
                        fsr1h 000FE2                          fsr1l 000FE1                          indf2 000FDF  
                        fsr2l 000FD9                 __CFG_BORV$190 000000                          prodl 000FF3  
                        start 0000                 __CFG_IESO$OFF 000000        __end_of_update_immData 2452  
       setPortData@outputData 0013             getFbits@regF_temp 0010                  _BAUDCON2bits 000F70  
                       ?_main 000F                         _TRISA 000F92                         _TRISC 000F94  
                       _TRISE 000F96                 __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000  
               __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000                __CFG_EBTR0$OFF 000000  
              __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000                __CFG_EBTR2$OFF 000000  
              __CFG_EBTR3$OFF 000000               __end_of_dispSeg 226A                 __CFG_WRTB$OFF 000000  
               __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000  
             ??_processOpcode 0017                         _regPC 0007                         _regMX 0005  
                       _regSP 000E            __CFG_MCLRE$EXTMCLR 000000      processOpcode@regA_temp16 001A  
              __CFG_BOREN$OFF 000000                         tablat 000FF5                         status 000FD8  
              __CFG_HFOFST$ON 000000               __initialization 24DE                  __end_of_main 24A2  
             ?_update_immData 000F    __end_of_virtualMemory_size 1005          __end_of_enableSerial 238C  
                      ??_main 001C                 __activetblptr 000003          enableSerial@baudRate 000F  
          setFbits@regF_temp1 0012            setFbits@regF_temp2 0013                  ?_setPortData 0013  
                      _ANSELD 000F3B                __CFG_WDTEN$OFF 000000          __size_of_getPortData 0016  
                      _RCREG2 000F74                        _SPBRG2 000F75           getMXbits@regMX_temp 000F  
         setMXbits@regMX_temp 0012                        _TXREG2 000F73              __end_of_getFbits 2592  
              __CFG_XINST$OFF 000000                __CFG_STVREN$ON 000000  __size_of_initializeRegisters 0068  
                      clear_0 24E4                     ??_dispSeg 0010              __end_of_setFbits 24DE  
                __pdataBIGRAM 0738                  __mediumconst 0000                 _virtualMemory 0738  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
           _immData_toPointer 25AE            ?_immData_toPointer 000F                    __accesstop 0060  
     __end_of__initialization 250E               __CFG_PBADEN$OFF 000000  setPortData@outputData_temp16 0015  
               setFbits@value 000F           ??_immData_toPointer 0011           setMXbits@value_temp 0010  
              __pcstackCOMRAM 000F            __size_of_getMXbits 0010     __end_of_immData_toPointer 25C6  
     __size_of_initOscillator 001C               __CFG_PLLCFG$OFF 000000            __size_of_initPorts 0030  
          __CFG_CCP2MX$PORTC1 000000         __size_of_enableSerial 008A            __size_of_setMXbits 0028  
          __CFG_CCP3MX$PORTB5 000000                     ?_getFbits 000F             __CFG_PRICLKEN$OFF 000000  
                     _SPBRGH2 000F76          __size_of_setPortData 0098                  _enableSerial 2302  
           __end_of_getMXbits 25EC                     ?_setFbits 000F              ??_update_immData 000F  
             __CFG_PWRTEN$OFF 000000                       __Hparam 0000                       __Lparam 0000  
                __psmallconst 1000                       __pcinit 24DE                       __ramtop 1000  
                     __ptext0 2452                       __ptext1 1806                       __ptext2 23F4  
                     __ptext3 226A                       __ptext4 2302                       __ptext5 1F4C  
                     __ptext6 2544                       __ptext7 25AE                       __ptext8 25C6  
                     __ptext9 25DC                       _dispSeg 1F4C             __end_of_initPorts 2544  
  __size_of_immData_toPointer 0018                    ??_getFbits 000F            _virtualMemory_size 1001  
           __end_of_setMXbits 256C          end_of_initialization 250E         __end_of_processOpcode 1F4C  
         _initializeRegisters 238C                    ??_setFbits 0010                       postdec1 000FE5  
                     postinc0 000FEE           getFbits@subRegister 000F          ?_initializeRegisters 000F  
         setFbits@subRegister 0011       processOpcode@carriedBit 0018                     _TRISDbits 000F95  
               ??_getPortData 000F                _initOscillator 2592                setMXbits@value 000F  
        getMXbits@subRegister 0011          setMXbits@subRegister 0014         ??_initializeRegisters 0014  
               __pidataBIGRAM 1006       processOpcode@regA_temp8 0019           start_initialization 24DE  
      __end_of_initOscillator 25AE           __end_of_getPortData 25DC                   __pbssCOMRAM 0001  
             ?_initOscillator 000F             __size_of_getFbits 0026                     _getMXbits 25DC  
           __size_of_setFbits 003C                     _immData_1 0009                     _immData_2 000A  
                    ?_dispSeg 000F                   __smallconst 1000                     _initPorts 2514  
                 _getPortData 25C6                 ??_setPortData 0014                     _setMXbits 2544  
                    _LATAbits 000F89                      _LATCbits 000F8B                      _LATDbits 000F8C  
                    _LATEbits 000F8D                    ?_getMXbits 000F              __CFG_WDTPS$32768 000000  
                  ?_initPorts 000F                     copy_data0 24FE                    ?_setMXbits 000F  
         __end_of_setPortData 2302                      __Hrparam 0000                      __Lrparam 0000  
           __CFG_P2BMX$PORTD2 000000        __size_of_processOpcode 0746       __size_of_update_immData 005E  
            __size_of_dispSeg 031E                      _getFbits 256C                      __ptext10 256C  
                    __ptext11 238C                      __ptext12 24A2                      __ptext13 2514  
                    __ptext14 2592                   _OSCCON2bits 000FD2      immData_toPointer@pointer 0011  
               __size_of_main 0050                      _setFbits 24A2   __end_of_initializeRegisters 23F4  
                 ??_getMXbits 000F              ??_initOscillator 000F                   ??_initPorts 000F  
                 _setPortData 226A                 ?_enableSerial 000F                 _processOpcode 1806  
                 ??_setMXbits 0010                    _RCSTA2bits 000F71                    _OSCCONbits 000FD3  
              dispSeg@segment 0010                  wait_ms@timel 0001             __CFG_T3CMX$PORTC0 000000  
               dispSeg@letter 000F                  ?_getPortData 000F                ??_enableSerial 0011  
              ?_processOpcode 000F             __CFG_FOSC$INTIO67 000000  
